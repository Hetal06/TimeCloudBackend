var mongoose = require('mongoose')
  , Schema = mongoose.Schema
var configDB = require('../../config/config');
var attendanceSchema = mongoose.Schema({
    companyId: { type: String},  // company user Id (id of tenant)
    companyName:{ type: String, default: '' },
    firstName:{ type: String, default: '' },
    lastName:{ type: String, default: '' },
    email:{ type: String, default: '' },
    admin:{ type: Boolean, default: false }, 
    PWD:{ type: String, default: '' },
    employeeNo :{ type: String, default: '' },
    payrollCode: { type: String, default: '' },
    department :{ type : String, default: '' },
    subDepartment : { type : String, default: '' },
    active:{ type: Boolean, default: true },    
    hourlyRate: { type: String, default: '' },
    chargeoutRate: { type: String, default: '' },
    date:{ type: Date, default:  Date.now },
    shift:{ type: String, default: '' },
    lastShift:{ type: String, default: '' },
    areaStart:{ type: String, default: '0' },
    areaFinish:{ type: String, default: '' },
    shiftStart:{ type: Date, default: '' },
    shiftFinish:{ type: Date, default: '' },
    limitIn:{ type: Boolean, default: false }, 
    limitOut:{ type: Boolean, default: false }, 
    round:{ type: String, default: '' },
    roundupDownIn:{ type: String, default: '' },
    roundInUpAfter:{ type: String, default: '' },
    roundupDownOut:{ type: String, default: '' },
    roundDownAfter:{ type: String, default: '' },
    breakk:{ type: String, default: '' },
    breakAfter:{ type: String, default: '' },
    breakAfter2:{ type: String, default: '' },
    breaktaken:{ type: Boolean, default: false },
    breaktaken2:{ type: Boolean, default: false },
    normalTime: { type: String, default: '00:00:00' },
    total:{ type: String, default: '00:00:00' },
    totalRounded:{ type: String, default: '00:00:00' },
    ot1Rule:{ type: String, default: '' },
    ot2Rule:{ type: String, default: '' },
    weeklyOt:{ type: String, default: '' },
    flag:{ type: String, default: '' },
    managerSignedOff:{ type: Boolean, default: false },
    managerSignedOff1:{ type: Boolean, default: false },
    holiday:{ type: Boolean, default: false },
    lateIn:{ type: String, default: '' },
    lateOut:{ type: String, default: '' },
    checkin: [{
        workCode: { type: String, default: '' },  
        checkTime: { type: Date, default: '' },  
        checkType: { type: String, default: '' },  
        inAdjusted : { type: Date, default: '' },  
        outAdjusted : { type: Date, default: '' }, 
        alter:{ type: String, default: false },
        alterWorkCode:{ type: Boolean, default: false },
        alterWho:{ type: String, default: '' },
        latitude:{ type: String, default: '' },
        longitude:{ type: String, default: '' },
        address:{ type: String, default: '' },
        exportflag:{type: Boolean, default: false },
        zoneName:{ type: String, default: '' },
    }],
    totalValues:[{
        total:{ type: String, default: '' },
        totalAdjusted:{ type: String, default: '' },
        checkinNo:{ type: Number, default: '' },
        workCode:{ type: String, default: '' },
    }],
    readFlag:{ type: Boolean, default: false },
    areaFlag:{ type: Boolean, default: false },
    calFlag:{ type: Boolean, default: false },
    projectFlag:{ type: Boolean, default: false },
    ExceptionAssign:{ type: String, default: '' },
    Exception:{ type: String, default: '' },
    Exceptiontype:{ type: String, default: '' },
    addException:{ type: Boolean, default: false },
    cutException:{ type: String, default: '' },
    addweeklyexc:{ type: String, default: '' },
    dayinLieu:{ type: String, default: '' },
    allowances: [{
        name:{ type: String, default: '' },
        status:{ type: Boolean, default: false },
    }],
    addWorkflow:{ type: Boolean, default: false },
    workflowId:{ type: String, default: '' },
    standardHours:{ type: String, default: '' },
    addToStandardHours:{ type: String, default: '' },
    weeklyOtinclude:{ type: String, default: '' },
    exceptioncode :{ type: String, default: '' },
    allowExport:{ type: Boolean, default: false },
    breakIn:{ type: Boolean, default: false },
    breakIn2:{ type: Boolean, default: false },
    comment:{ type: String, default: '' },
    prvOnShift:{ type: Boolean, default: false },
    shiftColor:{ type: String, default: '' },
    notaddexc:{ type: String, default: '' },
    readWriteForEmployee:{ type: Boolean, default: false },
    shiftType:{ type: String, default: '' }
});

attendanceSchema.index({companyId: 1, employeeNo: 1, date: 1,readFlag:1,areaFlag:1,calFlag:1,active:1}); // schema level

/*attendanceSchema.plugin(autoIncrement.plugin, {
    model: 'Attendance',
    field: 'id',
    startAt: 1,
    incrementBy: 1
});*/
  
module.exports = mongoose.model('Attendance', attendanceSchema, 'attendance');
