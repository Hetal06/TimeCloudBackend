// Const and Libs
var mongoose = require('mongoose');
var Company = mongoose.model('Company'),
    Employee = mongoose.model('Employee'),
    Exception = mongoose.model('Exceptions'),
    Attendance = mongoose.model('Attendance'),
    Moment = require('moment-timezone'),
    Shift = mongoose.model('Shifts'),
    customShifts = mongoose.model('customShifts'),
    meterDashboard = mongoose.model('meterDashboard'),
    subMeterDashboard = mongoose.model('subMeterDashboard'),
    Holidays = mongoose.model('Holidays'),
    Rule = mongoose.model('Rule'),
    Period = mongoose.model('Period'),
    Project = mongoose.model('Project'),
    Tasks = mongoose.model('Tasks'),
    Dashboard = mongoose.model('Dashboard'),
    subDeparment = mongoose.model('subDeparment'),
    subDashboard = mongoose.model('subDashboard'),
    async = require('async'),
    emailalerts = mongoose.model('emailalerts'),
    employeeNumbers = mongoose.model('employeeNumbers'),
    emailfn = require('../functions/send_mail.js'),
    employeeCtrl = require('../app/controllers/employee'),
    projectCtrl = require('../app/controllers/project'),
    cronCtrl = require('../app/controllers/cron'),
    wamp = require('../wamp_session');

/* Functions Start */
function setActiveEmployee(id, callback) {
    console.log("countActiveEmployee");
    Company.findById(id, function(err, companyData) {
        Employee.find({
            'companyId': id,
            'active': true
        }).exec(function(err, empData) {
            if (companyData.activeUsers != empData.length) {
                console.log("Need to update activeUsers");
                Company.update({
                    '_id': id
                }, {
                    $set: {
                        activeUsers: empData.length,
                    }
                }, {
                    upsert: false,
                }, function(err, data) {
                    if (data) {
                        Company.findById(id, function(err, newData) {
                            callback(newData);
                        });
                    }
                });
            } else {
                console.log("nothing to update in company's active users");
                callback(companyData);
            }
        });
    });
}


function getPayperiod(companyId, callback) {
    console.log("getPayperiod,,,,,,,,,,,,,,,,,,,,,");
    Company.findById(companyId, function(err, companyData) {
        if (companyData) {
            if (companyData.payPeriod) {
                var payPeriod = companyData.payPeriod;
                var WeekdayStart = companyData.WeekdayStart;
                var payPeriodStartDate = companyData.payPeriodStartDate;
                var days = 0;
                if (payPeriod == 'weekly') {
                    days = 7;
                } else if (payPeriod == '2weeks') {
                    days = 14;
                } else if (payPeriod == '4weeks') {
                    days = 28;
                } else if (payPeriod == 'monthly') {
                    days = 30;
                }
                var settingDay = '';
                if (WeekdayStart == 'sun') {
                    var settingDay = 0;
                } else if (WeekdayStart == 'mon') {
                    var settingDay = 1;
                } else if (WeekdayStart == 'tues') {
                    var settingDay = 2;
                } else if (WeekdayStart == 'wed') {
                    var settingDay = 3;
                } else if (WeekdayStart == 'thurs') {
                    var settingDay = 4;
                } else if (WeekdayStart == 'fri') {
                    var settingDay = 5;
                } else if (WeekdayStart == 'sat') {
                    var settingDay = 6;
                } else {
                    var settingDay = '';
                }
                var payperiodFn = function(currentDate1, startD, endD, callback) {
                    /* console.log(currentDate1 + 'currentDate');
                    console.log(startD+'startD');
                    console.log(endD + 'endD');*/
                    var newstartD = startD;
                    var newendD = endD;
                    while (startD <= endD) {
                        if (startD == endD) {
                            var startD = endD;
                            var endD = Moment.utc(endD).add('days', 13).format('YYYY-MM-DD');
                            newstartD = startD;
                            newendD = endD;
                        } else if (currentDate1 == startD) {
                            /*console.log(newstartD + 'newstartD');    */
                            var data = {
                                'start': newstartD,
                                'end': newendD,
                                'status': 1
                            }
                            callback(data);
                            break;
                        } else {
                            startD = Moment.utc(startD).add('days', 1).format('YYYY-MM-DD');
                        }
                    }
                }

                if (payPeriod == '2weeks') {
                    var startDate = Moment.utc(payPeriodStartDate).startOf('week').format('YYYY-MM-DD');
                    var endDate = Moment.utc(payPeriodStartDate).endOf('week').format('YYYY-MM-DD');
                    var currentDay = Moment.utc().format('YYYY-MM-DD');
                    console.log('asdas');
                } else {
                    var startDate = Moment.utc().startOf('week').format('YYYY-MM-DD');
                    var endDate = Moment.utc().endOf('week').format('YYYY-MM-DD');
                }

                var between = [];
                while (startDate <= endDate) {
                    var dayMatch = Moment(startDate).day();
                    if (dayMatch == settingDay) {
                        between.push(Moment.utc(startDate).format('YYYY-MM-DD'));
                    }
                    startDate = Moment.utc(startDate).add('days', 1).format('YYYY-MM-DD');
                }

                if (payPeriod == '2weeks') {
                    var start = between[0];
                    var end = Moment.utc(start).add('days', days).format('YYYY-MM-DD');
                    var prv = Moment.utc(start).subtract('days', days).format('YYYY-MM-DD');
                    payperiodFn(currentDay, start, end, function(result) {
                        if (result.status == 1) {
                            console.log(result.end);
                            start = result.start;
                            end = result.end;
                            callback({
                                'start': start,
                                'end': end,
                                'days': days
                            })
                        }
                    });
                } else {
                    var start = between[0];
                    var end = Moment.utc(start).add('days', days - 1).format('YYYY-MM-DD');
                    var prv = Moment.utc(start).subtract('days', days).format('YYYY-MM-DD');
                    console.log(start);
                    console.log(end);
                    console.log(prv);
                    callback({
                        'start': start,
                        'end': end,
                        'days': days
                    })
                }
            }
        }
    });
}

function calculateExceptionHours(exception, CompanyData, attendanceId, callback) {
    console.log("function calculateExceptionHours...." + exception);
    if (CompanyData) {
        var weekly = 0;
        var overTime = '';
        if (CompanyData.isovertime) {
            if (CompanyData.overtimePeriod == "weekly") {
                weekly = 1;
            } else {
                weekly = 0;
            }
            if (CompanyData.overtimeLevel == "1") {
                overTime = 1;
            } else {
                overTime = 2;
            }
        }
    }
    Attendance.find({
        '_id': attendanceId
    }, {}, {
        limit: 1
    }, function(err, dataAtns) {
        var dataAtn = dataAtns[0];
        if (dataAtn) {
            console.log("dataAtn");
            var lastshift = '';
            if (dataAtn.shift) {
                lastshift = dataAtn.shift;
            } else {
                lastshift = dataAtn.lastShift;
            }
            var shiftStart = dataAtn.shiftStart;
            var shiftFinish = dataAtn.shiftFinish;
            var breakIn = dataAtn.breakIn;
            var breakTime = dataAtn.breakk;
            var companyId = dataAtn.companyId;
            shiftHoursForException(lastshift, companyId, function(result) {
                if (result) {
                    console.log("result");
                    var exceptionHoursShift = result;
                    getExceptionData(exception, companyId, function(result) {
                        console.log(result);
                        var standardHours = result.standardHours;
                        var addToStandardHours = result.addToStandardHours;
                        var weeklyOtinclude = result.weeklyOtinclude;
                        var exceptioncode = result.payrollCode;
                        // var Exceptiontype = result.exceptiontype;
                        var excHoursForm = '';
                        var normalTimeadd = '';
                        var exceptionHoursShift1 = '';
                        var addweeklyesc = '';
                        var checkins = dataAtn.checkin;
                        var totalR = dataAtn.totalRounded;
                        if (standardHours == 0) {
                            standardHours = '00:00:00';
                        }
                        console.log("1");
                        if (checkins.length > 0 && addToStandardHours == false) {
                            var excHours = getSeconds(exceptionHoursShift) - getSeconds(totalR);
                            excHoursForm = secToFormatted(excHours);
                            var stdHours = getSeconds(exceptionHoursShift) - excHours;
                            exceptionHoursShift1 = secToFormatted(stdHours);
                            normalTimeadd = secToFormatted(stdHours);
                        } else if (checkins.length > 0 && addToStandardHours == true) {
                            var excHours = getSeconds(exceptionHoursShift) - getSeconds(totalR);
                            excHoursForm = secToFormatted(excHours);
                            var stdHours = getSeconds(exceptionHoursShift) - excHours;
                            exceptionHoursShift1 = secToFormatted(stdHours);
                            normalTimeadd = exceptionHoursShift;
                        } else {
                            var excHoursForm = exceptionHoursShift;
                            exceptionHoursShift1 = exceptionHoursShift;
                            normalTimeadd = exceptionHoursShift1;
                        }
                        console.log("2");
                        if (checkins.length > 0 && addToStandardHours == false) {
                            if (addToStandardHours == false && weeklyOtinclude == true) {
                                console.log("addToStandardHours == false && weeklyOtinclude == true");
                                console.log('false-trie' + 'exceptionHoursShift1');
                                var ntHour = getSeconds(normalTimeadd) + getSeconds(excHoursForm);

                                // console.log("exceptionHoursShift1......"+exceptionHoursShift1);
                                // console.log("excHoursForm......"+excHoursForm);
                                // console.log("normalTimeadd....."+secToFormatted(ntHour));
                                // console.log("exception......."+exception);
                                // console.log("addToStandardHours......."+addToStandardHours);
                                // console.log("weeklyOtinclude......."+weeklyOtinclude);
                                // console.log("exceptioncode........."+exceptioncode);
                                // console.log("lastshift........."+lastshift);
                                // console.log("Exceptiontype.........."+Exceptiontype);

                                Attendance.update({
                                    '_id': attendanceId,
                                    'companyId': companyId
                                }, {
                                    $set: {
                                        totalRounded: exceptionHoursShift1,
                                        Exception: excHoursForm,
                                        normalTime: secToFormatted(ntHour),
                                        ExceptionAssign: result.title,
                                        ot2Rule: '00:00:00',
                                        shift: '',
                                        addException: true,
                                        standardHours: exceptionHoursShift1,
                                        addToStandardHours: true,
                                        weeklyOtinclude: false,
                                        exceptioncode: exceptioncode,
                                        lastshift: lastshift,
                                        Exceptiontype: dataAtn.Exceptiontype,
                                        cutException: excHoursForm,
                                        shiftColor: '#F08080',
                                        notaddexc: '',
                                    }
                                }, {
                                    upsert: false,
                                    new: false
                                }, function(err, data) {
                                    if (err) {
                                        // console.log(err);
                                    } else {
                                        callback(true);
                                    }
                                })
                            } else {
                                console.log("else addToStandardHours == false && weeklyOtinclude == true");
                                Attendance.update({
                                    '_id': attendanceId,
                                    'companyId': companyId
                                }, {
                                    $set: {
                                        totalRounded: exceptionHoursShift1,
                                        Exception: excHoursForm,
                                        normalTime: normalTimeadd,
                                        ExceptionAssign: result.title,
                                        ot2Rule: '00:00:00',
                                        shift: '',
                                        addException: true,
                                        standardHours: exceptionHoursShift1,
                                        addToStandardHours: true,
                                        weeklyOtinclude: false,
                                        exceptioncode: exceptioncode,
                                        lastshift: lastshift,
                                        Exceptiontype: dataAtn.Exceptiontype,
                                        shiftColor: '#F08080',
                                        notaddexc: '',
                                    }
                                }, {
                                    upsert: false,
                                    new: false
                                }, function(err, data) {
                                    if (err) {
                                        // console.log(err);
                                    } else {
                                        callback(true);
                                    }
                                })
                            }
                        } else {
                            console.log("else");
                            if (weekly == 0) {
                                if (addToStandardHours == true && exceptionHoursShift1) {
                                    Attendance.update({
                                        '_id': attendanceId,
                                        'companyId': companyId
                                    }, {
                                        $set: {
                                            totalRounded: exceptionHoursShift1,
                                            Exception: excHoursForm,
                                            normalTime: normalTimeadd,
                                            ExceptionAssign: result.title,
                                            shift: '',
                                            addException: false,
                                            standardHours: exceptionHoursShift1,
                                            addToStandardHours: addToStandardHours,
                                            weeklyOtinclude: weeklyOtinclude,
                                            exceptioncode: exceptioncode,
                                            lastshift: lastshift,
                                            Exceptiontype: dataAtn.Exceptiontype,
                                            shiftColor: '#F08080',
                                            notaddexc: '',
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {
                                            // console.log(err);
                                        } else {
                                            callback(true);
                                        }
                                    })
                                }
                                if (addToStandardHours == false && exceptionHoursShift1) {
                                    Attendance.update({
                                        '_id': attendanceId,
                                        'companyId': companyId
                                    }, {
                                        $set: {
                                            totalRounded: exceptionHoursShift1,
                                            Exception: excHoursForm,
                                            normalTime: '00:00:00',
                                            ExceptionAssign: result.title,
                                            shift: '',
                                            addException: false,
                                            standardHours: exceptionHoursShift1,
                                            addToStandardHours: addToStandardHours,
                                            weeklyOtinclude: weeklyOtinclude,
                                            exceptioncode: exceptioncode,
                                            lastshift: lastshift,
                                            Exceptiontype: dataAtn.Exceptiontype,
                                            shiftColor: '#F08080',
                                            notaddexc: '',
                                        }
                                    }, {
                                        upsert: true,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {
                                            // console.log(err);
                                        } else {
                                            callback(true);
                                        }
                                    })
                                }
                            }
                            if (weekly == 1) {
                                if (addToStandardHours == false && weeklyOtinclude == true) {
                                    // console.log('false-trie' +'exceptionHoursShift1');
                                    // console.log("exceptionHoursShift1......"+exceptionHoursShift1);
                                    // console.log("excHoursForm......"+excHoursForm);
                                    // console.log("normalTimeadd....."+normalTimeadd);
                                    // console.log("exception......."+exception);
                                    // console.log("addToStandardHours......."+addToStandardHours);
                                    // console.log("weeklyOtinclude......."+weeklyOtinclude);
                                    // console.log("exceptioncode........."+exceptioncode);
                                    // console.log("lastshift........."+lastshift);
                                    // console.log("Exceptiontype.........."+Exceptiontype);
                                    Attendance.update({
                                        '_id': attendanceId,
                                        'companyId': companyId
                                    }, {
                                        $set: {
                                            totalRounded: exceptionHoursShift1,
                                            Exception: excHoursForm,
                                            normalTime: normalTimeadd,
                                            ExceptionAssign: result.title,
                                            ot2Rule: '00:00:00',
                                            shift: '',
                                            addException: true,
                                            standardHours: exceptionHoursShift1,
                                            addToStandardHours: "02:00:00",
                                            weeklyOtinclude: weeklyOtinclude,
                                            exceptioncode: exceptioncode,
                                            cutException: exceptionHoursShift1,
                                            lastshift: lastshift,
                                            Exceptiontype: dataAtn.Exceptiontype,
                                            shiftColor: '#F08080',
                                            notaddexc: '',
                                        }
                                    }, {
                                        upsert: true,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {
                                            // console.log(err);
                                        } else {
                                            callback(true);
                                        }
                                    });
                                }
                                if (addToStandardHours == true && weeklyOtinclude == true) {

                                    // console.log('false-trie' +'exceptionHoursShift1');
                                    // console.log("exceptionHoursShift1......"+exceptionHoursShift1);
                                    // console.log("excHoursForm......"+excHoursForm);
                                    // console.log("normalTimeadd....."+normalTimeadd);
                                    // console.log("exception......."+exception);
                                    // console.log("addToStandardHours......."+addToStandardHours);
                                    // console.log("weeklyOtinclude......."+weeklyOtinclude);
                                    // console.log("exceptioncode........."+exceptioncode);
                                    // console.log("lastshift........."+lastshift);
                                    // console.log("Exceptiontype.........."+Exceptiontype);

                                    Attendance.update({
                                        '_id': attendanceId,
                                        'companyId': companyId
                                    }, {
                                        $set: {
                                            totalRounded: exceptionHoursShift1,
                                            Exception: excHoursForm,
                                            normalTime: normalTimeadd,
                                            ExceptionAssign: result.title,
                                            ot2Rule: '00:00:00',
                                            shift: '',
                                            addException: true,
                                            standardHours: exceptionHoursShift1,
                                            addToStandardHours: addToStandardHours,
                                            weeklyOtinclude: weeklyOtinclude,
                                            exceptioncode: exceptioncode,
                                            lastshift: lastshift,
                                            Exceptiontype: dataAtn.Exceptiontype,
                                            shiftColor: '#F08080',
                                            notaddexc: '',
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {} else {
                                            callback(true);
                                        }
                                    })
                                }
                                if (addToStandardHours == true && weeklyOtinclude == false && checkins.length <= 0) {

                                    // console.log('false-trie' +'exceptionHoursShift1');
                                    // console.log("exceptionHoursShift1......"+exceptionHoursShift1);
                                    // console.log("excHoursForm......"+excHoursForm);
                                    // console.log("normalTimeadd....."+normalTimeadd);
                                    // console.log("exception......."+exception);
                                    // console.log("addToStandardHours......."+addToStandardHours);
                                    // console.log("weeklyOtinclude......."+weeklyOtinclude);
                                    // console.log("exceptioncode........."+exceptioncode);
                                    // console.log("lastshift........."+lastshift);
                                    // console.log("Exceptiontype.........."+Exceptiontype);

                                    Attendance.update({
                                        '_id': attendanceId,
                                        'companyId': companyId
                                    }, {
                                        $set: {
                                            totalRounded: exceptionHoursShift1,
                                            Exception: excHoursForm,
                                            normalTime: normalTimeadd,
                                            ExceptionAssign: result.title,
                                            ot2Rule: '00:00:00',
                                            shift: '',
                                            addException: false,
                                            standardHours: exceptionHoursShift1,
                                            addToStandardHours: addToStandardHours,
                                            weeklyOtinclude: weeklyOtinclude,
                                            exceptioncode: exceptioncode,
                                            lastshift: lastshift,
                                            addweeklyexc: excHoursForm,
                                            Exceptiontype: dataAtn.Exceptiontype,
                                            shiftColor: '#F08080',
                                            notaddexc: exceptionHoursShift1,
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {
                                            // console.log(err);
                                        } else {
                                            callback(true);
                                        }
                                    })
                                }
                                if (addToStandardHours == true && weeklyOtinclude == false && checkins.length > 0) {
                                    // console.log('----truefalse');
                                    Attendance.update({
                                        '_id': attendanceId,
                                        'companyId': companyId
                                    }, {
                                        $set: {
                                            totalRounded: exceptionHoursShift1,
                                            Exception: excHoursForm,
                                            normalTime: exceptionHoursShift1,
                                            ExceptionAssign: result.title,
                                            ot2Rule: '00:00:00',
                                            shift: '',
                                            addException: true,
                                            standardHours: exceptionHoursShift1,
                                            addToStandardHours: true,
                                            weeklyOtinclude: false,
                                            exceptioncode: exceptioncode,
                                            addweeklyexc: excHoursForm,
                                            notaddexc: exceptionHoursShift1,
                                            lastshift: lastshift,
                                            Exceptiontype: dataAtn.Exceptiontype,
                                            shiftColor: '#F08080',
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {
                                            // console.log(err);
                                        } else {
                                            callback(true);
                                        }
                                    });
                                }
                                if (addToStandardHours == false && weeklyOtinclude == false) {
                                    // console.log('asdas'+Exceptiontype);
                                    Attendance.update({
                                        '_id': attendanceId,
                                        'companyId': companyId
                                    }, {
                                        $set: {
                                            totalRounded: exceptionHoursShift1,
                                            Exception: excHoursForm,
                                            normalTime: '00:00:00',
                                            ExceptionAssign: result.title,
                                            shift: '',
                                            addException: false,
                                            standardHours: exceptionHoursShift1,
                                            addToStandardHours: addToStandardHours,
                                            weeklyOtinclude: weeklyOtinclude,
                                            exceptioncode: exceptioncode,
                                            lastshift: lastshift,
                                            addweeklyexc: '',
                                            Exceptiontype: dataAtn.Exceptiontype,
                                            shiftColor: '#F08080',
                                            notaddexc: '',
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {} else {
                                            callback(true);
                                        }
                                    })
                                }
                            } // weekly 1
                        }
                    }); // getExceptionData
                }
            }); //getShiftException
        }
    }); //findone
}

function checkDBTask(project, dbTasks, callback) {
    var taskUpdateArray = project.tasks;

    if (dbTasks.length > 0) {
        dbTasks.forEach(function(dbtc, in1) {
            // console.log(taskUpdateArray.indexOf(dbtc.taskCode));
            // console.log(dbtc);
            var a = taskUpdateArray.map(function(e) {
                // console.log("project code " + e.taskCode);
                // console.log("task db code " + project.JC + dbtc.taskCode);
                return e.taskCode;
            }).indexOf(project.JC + dbtc.taskCode);

            // console.log(a);
            if (a == -1) {
                console.log("pushed...");
                // console.log(dbtc);
                taskUpdateArray.push({
                    'taskname': dbtc.taskname,
                    'taskCode': project.JC + dbtc.taskCode,
                });
            }

            if ((in1 + 1) == dbTasks.length) {
                console.log("----> task list <-----")
                    // console.log(taskUpdateArray);
                callback(taskUpdateArray);
            }
        });
    } else {
        callback(taskUpdateArray);
    }
}

function checkProjectDBTask(project, callback) {
    var taskUpdateArray = project.tasks;
    var taskArray = [];
    var newUpdatedTaskList = [];

    getCompanyData(project.companyId, function(compData) {
        Tasks.find({
            'companyId': project.companyId
        }, function(errs, taskDetails) {
            var taskData = taskDetails[0];
            if (taskData) {
                if (taskData.tasks.length > 0) {
                    taskData.tasks.forEach(function(t) {
                        taskArray.push({
                            'taskname': t.taskName,
                            'taskCode': t.taskCode,
                            'calcInclude': compData.isAutoTask,
                        });
                    });
                    if (taskArray.length > 0) {
                        taskArray.forEach(function(dbtc, in1) {
                            var a = taskUpdateArray.map(function(e) {
                                return e.taskCode;
                            }).indexOf(project.JC + dbtc.taskCode);

                            if (a == -1) {
                                // console.log("pushed...");
                                taskUpdateArray.push({
                                    'taskname': dbtc.taskname,
                                    'taskCode': project.JC + dbtc.taskCode,
                                    'calcInclude': compData.isAutoTask,
                                });
                            } else {
                                // console.log('updated...');
                                newUpdatedTaskList.push({
                                    'taskname': dbtc.taskname,
                                    'taskCode': project.JC + dbtc.taskCode,
                                    'calcInclude': compData.isAutoTask
                                });
                            }
                            if ((in1 + 1) == taskArray.length) {
                                console.log("----> task list <-----")

                                taskUpdateArray.forEach(function(ut, inu) {
                                    newUpdatedTaskList.forEach(function(nut) {
                                        if (nut.taskCode === ut.taskCode) {
                                            ut.taskname = nut.taskname;
                                            ut.calcInclude = nut.calcInclude;
                                        }
                                    });

                                    if (taskUpdateArray.length === inu + 1) {
                                        // console.log(taskUpdateArray);
                                        Project.update({
                                            'companyId': project.companyId,
                                            '_id': project._id
                                        }, {
                                            $set: {
                                                tasks: taskUpdateArray,
                                            }
                                        }, {
                                            upsert: true,
                                            new: false
                                        }, function(err, data) {
                                            Project.find({
                                                'companyId': project.companyId,
                                                '_id': project._id
                                            }, function(err, projectsU) {
                                                callback(projectsU[0]);
                                            });
                                        });
                                    }
                                });
                            }
                        });
                    }
                } else {
                    callback(project);
                }
            } else {
                callback(project);
            }
        });
    });
}


function setProjectFlag(companyId, callback) {
    Project.update({
        'companyId': companyId,
    }, {
        $set: {
            calFlag: false,
        }
    }, {
        upsert: false,
        new: false,
        multi: true,
    }, function(err, data) {
        if (!err) {
            console.log("project flag set...");
            callback(true);
        }
    });
}

function calculateAtn(adminDetails, holidayresult, dataCompany, employeeAttendance, callback) { // generate the employeeNo of the given companyId
    console.log("calculateAtn....");
    console.log("===================================");
    var inRounding = dataCompany.inRounding;
    var inroundupafter = dataCompany.inroundupafter;
    var outRounding = dataCompany.outRounding;
    var outroundupafter = dataCompany.outroundupafter;
    var companyId = dataCompany._id;
    var holidayStandardHours = dataCompany.holidayStandardHours;
    var holidaymultiplier = dataCompany.holidaymultiplier;
    var holidayweeklyOtinclude = dataCompany.holidayweeklyOtinclude;
    var holidayaddToStandardHours = dataCompany.holidayaddToStandardHours;
    var cmppayrollCode = dataCompany.payrollCode
    var weekly = 0;
    var overTime = '';

    if (dataCompany.isovertime) {
        if (dataCompany.overtimePeriod == "weekly") {
            weekly = 1;
        } else {
            weekly = 0;
        }
        if (dataCompany.overtimeLevel == "1") {
            overTime = 1;
        } else {
            overTime = 2;
        }
    }
    if (employeeAttendance) {
        var normalTimeAdd = '';
        var ot1Add = '';
        var ot2Add = '';
        var attendanceId = employeeAttendance._id;
        var limitIn = employeeAttendance.limitIn;
        var limitOut = employeeAttendance.limitOut;
        var shiftStart = new Date(Date.parse(employeeAttendance.shiftStart)).toUTCString();
        var startHour = Moment.utc(shiftStart).format('HH');
        var startMinute = Moment.utc(shiftStart).format('mm');
        var lastShift = employeeAttendance.lastShift;
        var ExceptionAssign = employeeAttendance.ExceptionAssign;
        var Exceptiontype = employeeAttendance.Exceptiontype;
        var payrollCode = employeeAttendance.payrollCode;
        var shift = '';
        if (ExceptionAssign) {
            shift = lastShift;
        } else {
            shift = employeeAttendance.shift;
        }
        // console.log(shift + ' ssssssssssssssshift');
        // console.log(ExceptionAssign);
        // console.log(lastShift + ' sdfffffffffffffff');
        var shiftFinish = new Date(Date.parse(employeeAttendance.shiftFinish)).toUTCString();
        var finishHour = Moment.utc(shiftFinish).format('HH');
        var finishMinute = Moment.utc(shiftFinish).format('mm');

        var shiftStartDate = Moment.utc(employeeAttendance.shiftStart).format('YYYY-MM-DD');
        var shiftFinishDate = Moment.utc(employeeAttendance.shiftFinish).format('YYYY-MM-DD');
        var lateIn = '';
        var latOut = '';
        var lateOut = '';
        var breaktaken = 'false';
        var breaktaken2 = 'false';
        console.log("checkin length" + employeeAttendance.checkin.length);
        if (employeeAttendance.checkin.length <= 0 || employeeAttendance.checkin.length % 2 != 0) {
            console.log("reset to init done **************************");
            Attendance.update({
                '_id': employeeAttendance._id
            }, {
                $set: {
                    normalTime: '00:00:00',
                    ot1Rule: '00:00:00',
                    ot2Rule: '00:00:00',
                    total: '00:00:00',
                    totalRounded: '00:00:00',
                    breaktaken: false,
                    breaktaken2: false,
                    readFlag: true,
                    allowances: []
                }
            }, {
                upsert: false,
                new: false
            }, function(err, data) {
                if (!err) {
                    console.log('Attendance update');
                }
            });
            if (employeeAttendance.holiday == true && employeeAttendance.checkin.length == 0 && shift != 'not Working') {
                // console.log("asmita.....");
                shiftHoursForHolidays(shift, companyId, function(result) {
                    // console.log("result.............");
                    // console.log(result);
                    var holidayHoursShift = result;
                    if (weekly == 0) {
                        console.log('calculateDaily---------------------------');
                        if (holidayaddToStandardHours == true && holidayHoursShift) {
                            Attendance.update({
                                '_id': employeeAttendance._id,
                                'companyId': companyId
                            }, {
                                $set: {
                                    totalRounded: holidayHoursShift,
                                    Exception: holidayHoursShift,
                                    normalTime: holidayHoursShift,
                                    addException: false,
                                    readFlag: true,
                                    exceptioncode: cmppayrollCode,
                                    Exceptiontype: 'Holiday',
                                    ExceptionAssign: 'Holiday',
                                    cutException: '',
                                    addweeklyexc: '',
                                }
                            }, {
                                upsert: false,
                                new: false
                            }, function(err, data) {
                                // if(err) {
                                console.log("holidayaddToStandardHours true Attendance err" + err);
                                // }
                            })
                        }
                        if (holidayaddToStandardHours == false && holidayHoursShift) {
                            Attendance.update({
                                '_id': employeeAttendance._id,
                                'companyId': companyId
                            }, {
                                $set: {
                                    totalRounded: holidayHoursShift,
                                    Exception: holidayHoursShift,
                                    normalTime: '00:00:00',
                                    addException: false,
                                    readFlag: true,
                                    exceptioncode: cmppayrollCode,
                                    Exceptiontype: 'Holiday',
                                    ExceptionAssign: 'Holiday',
                                    cutException: '',
                                    addweeklyexc: '',
                                }
                            }, {
                                upsert: false,
                                new: false
                            }, function(err, data) {
                                // if(err) {
                                console.log("holidayaddToStandardHours false Attendance err" + err);
                                // }
                            })
                        }
                    }
                    if (weekly == 1) {
                        console.log("calculate weekly.............");
                        if (holidayaddToStandardHours == false && holidayweeklyOtinclude == true) {
                            Attendance.update({
                                '_id': employeeAttendance._id,
                                'companyId': companyId
                            }, {
                                $set: {
                                    totalRounded: holidayHoursShift,
                                    Exception: holidayHoursShift,
                                    normalTime: holidayHoursShift,
                                    ot2Rule: '00:00:00',
                                    addException: true,
                                    readFlag: true,
                                    Exceptiontype: 'Holiday',
                                    ExceptionAssign: 'Holiday',
                                    exceptioncode: cmppayrollCode,
                                    cutException: holidayHoursShift,
                                    weeklyOtinclude: holidayweeklyOtinclude,
                                }
                            }, {
                                upsert: true,
                                new: false
                            }, function(err, data) {
                                // if(err) {
                                console.log("calculate weekly.............");
                                // }
                            })
                        }
                        if (holidayaddToStandardHours == true && holidayweeklyOtinclude == true) {
                            Attendance.update({
                                '_id': employeeAttendance._id,
                                'companyId': companyId
                            }, {
                                $set: {
                                    totalRounded: holidayHoursShift,
                                    Exception: holidayHoursShift,
                                    normalTime: holidayHoursShift,
                                    ot2Rule: '00:00:00',
                                    addException: true,
                                    readFlag: true,
                                    exceptioncode: cmppayrollCode,
                                    Exceptiontype: 'Holiday',
                                    ExceptionAssign: 'Holiday',
                                    cutException: '',
                                    addweeklyexc: '',
                                }
                            }, {
                                upsert: false,
                                new: false
                            }, function(err, data) {
                                if (err) {
                                    // console.log(err);
                                }
                            })
                        }
                        if (holidayaddToStandardHours == true && holidayweeklyOtinclude == false) {
                            Attendance.update({
                                '_id': employeeAttendance._id,
                                'companyId': companyId
                            }, {
                                $set: {
                                    totalRounded: holidayHoursShift,
                                    Exception: holidayHoursShift,
                                    normalTime: holidayHoursShift,
                                    ot2Rule: '00:00:00',
                                    addException: false,
                                    readFlag: true,
                                    exceptioncode: cmppayrollCode,
                                    Exceptiontype: 'Holiday',
                                    ExceptionAssign: 'Holiday',
                                    addweeklyexc: holidayHoursShift,
                                    weeklyOtinclude: holidayweeklyOtinclude,
                                    notaddexc: '',
                                }
                            }, {
                                upsert: false,
                                new: false
                            }, function(err, data) {
                                if (err) {
                                    // console.log(err);
                                }
                            })
                        }
                        if (holidayaddToStandardHours == false && holidayweeklyOtinclude == false) {
                            Attendance.update({
                                '_id': employeeAttendance._id,
                                'companyId': companyId
                            }, {
                                $set: {
                                    totalRounded: holidayHoursShift,
                                    Exception: holidayHoursShift,
                                    normalTime: '00:00:00',
                                    addException: false,
                                    readFlag: true,
                                    exceptioncode: cmppayrollCode,
                                    Exceptiontype: 'Holiday',
                                    ExceptionAssign: 'Holiday',
                                    cutException: '',
                                    addweeklyexc: '',
                                }
                            }, {
                                upsert: false,
                                new: false
                            }, function(err, data) {
                                if (err) {
                                    // console.log(err);
                                }
                            })
                        }
                    }
                    console.log('calculate holiday hours');
                })
            } else if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                        // if(result) {
                        //  res.json(true);
                        // }
                    })
                    // calculateExceptionHours(employeeAttendance._id,function(result){});
                    // console.log("Exception.................asmita");
                    // console.log(lastShift);
                    // shiftStart = employeeAttendance.shiftStart;
                    // shiftFinish = employeeAttendance.shiftFinish;
                    // var breakIn = employeeAttendance.breakIn;
                    // var breakTime = employeeAttendance.breakk;
                    // shiftHoursForException(lastShift, companyId, function(result){
                    //  if(result) {
                    //      // console.log("result.........."+result);
                    //      var exceptionHoursShift = result;
                    //      // console.log(exception)
                    //      getExceptionData(Exceptiontype, companyId, function(result){
                    //          // console.log(result);
                    //          var addToStandardHours = result.addToStandardHours;
                    //          var weeklyOtinclude =result.weeklyOtinclude;
                    //          var exceptioncode= result.payrollCode;
                    //          // var Exceptiontype = result.title;
                    //          var excHoursForm = '';
                    //          var normalTimeadd = '';
                    //          var exceptionHoursShift1 = '';
                    //          var addweeklyesc = '';
                    //          var checkins = employeeAttendance.checkin;
                    //          var totalR = employeeAttendance.totalRounded;
                    //          var excHoursForm = exceptionHoursShift;
                    //          exceptionHoursShift1 = exceptionHoursShift;
                    //          normalTimeadd = exceptionHoursShift1;
                    //          if(weekly == 0) {
                    //              if(addToStandardHours == true && exceptionHoursShift1){
                    //                  Attendance.update({'_id': attendanceId,'companyId':companyId},
                    //                      {$set: {
                    //                          totalRounded: exceptionHoursShift1,
                    //                          Exception : excHoursForm,
                    //                          normalTime : normalTimeadd,
                    //                          ExceptionAssign :employeeAttendance.ExceptionAssign,
                    //                          shift:'',
                    //                          addException : false,
                    //                          standardHours:exceptionHoursShift1,
                    //                          addToStandardHours:addToStandardHours,
                    //                          weeklyOtinclude:weeklyOtinclude,
                    //                          exceptioncode:exceptioncode,
                    //                          lastshift:lastShift,
                    //                          Exceptiontype:Exceptiontype,
                    //                          shiftColor:'#F08080',
                    //                          notaddexc:'',
                    //                      }},{upsert: false, new: false}, function(err,data){

                //                  })
                //              }
                //              if(addToStandardHours == false && exceptionHoursShift1){
                //                  Attendance.update({'_id': attendanceId,'companyId':companyId},
                //                      {$set: {
                //                          totalRounded: exceptionHoursShift1,
                //                          Exception : excHoursForm,
                //                          normalTime : '00:00:00',
                //                          ExceptionAssign :employeeAttendance.ExceptionAssign,
                //                          shift:'',
                //                          addException : false,
                //                          standardHours:exceptionHoursShift1,
                //                          addToStandardHours:addToStandardHours,
                //                          weeklyOtinclude:weeklyOtinclude,
                //                          exceptioncode:exceptioncode,
                //                          lastshift:lastShift,
                //                          Exceptiontype:Exceptiontype,
                //                          shiftColor:'#F08080',
                //                          notaddexc:'',
                //                      }},{upsert: true, new: false}, function(err,data){

                //                  })
                //              }
                //          }
                //          if(weekly == 1) {
                //              console.log("weekly......");
                //              console.log(addToStandardHours);
                //              console.log(weeklyOtinclude);
                //              if(addToStandardHours == false && weeklyOtinclude == true){
                //                  Attendance.update({'_id': attendanceId,'companyId':companyId},
                //                      {$set: {
                //                          totalRounded: exceptionHoursShift1,
                //                          Exception : excHoursForm,
                //                          normalTime : normalTimeadd,
                //                          ExceptionAssign : employeeAttendance.ExceptionAssign,
                //                          ot2Rule : '00:00:00',
                //                          shift:'',
                //                          addException : true,
                //                          standardHours:exceptionHoursShift1,
                //                          addToStandardHours:"02:00:00",
                //                          weeklyOtinclude:weeklyOtinclude,
                //                          exceptioncode:exceptioncode,
                //                          cutException:exceptionHoursShift1,
                //                          lastshift:lastShift,
                //                          Exceptiontype:Exceptiontype,
                //                          shiftColor:'#F08080',
                //                          notaddexc:'',
                //                      }},{upsert: true, new: false}, function(err,data){

                //                  });
                //              }
                //              if(addToStandardHours == true && weeklyOtinclude == true){
                //                  Attendance.update({'_id': attendanceId,'companyId':companyId},
                //                      {$set: {
                //                          totalRounded : exceptionHoursShift1,
                //                          Exception    : excHoursForm,
                //                          normalTime   : normalTimeadd,
                //                          ExceptionAssign : employeeAttendance.ExceptionAssign,
                //                          ot2Rule      : '00:00:00',
                //                          shift        : '',
                //                          addException : true,
                //                          standardHours:exceptionHoursShift1,
                //                          addToStandardHours:addToStandardHours,
                //                          weeklyOtinclude:weeklyOtinclude,
                //                          exceptioncode:exceptioncode,
                //                          lastshift    : lastShift,
                //                          Exceptiontype:Exceptiontype,
                //                          shiftColor:'#F08080',
                //                          notaddexc:'',
                //                      }},{upsert: false, new: false}, function(err,data) {

                //                  })
                //              }
                //              if(addToStandardHours == true && weeklyOtinclude == false) {
                //                  Attendance.update({'_id': attendanceId,'companyId':companyId},
                //                      {$set: {
                //                          totalRounded: exceptionHoursShift1,
                //                          Exception : excHoursForm,
                //                          normalTime : normalTimeadd,
                //                          ExceptionAssign :employeeAttendance.ExceptionAssign,
                //                          ot2Rule : '00:00:00',
                //                          shift:'',
                //                          addException : false,
                //                          standardHours:exceptionHoursShift1,
                //                          addToStandardHours:addToStandardHours,
                //                          weeklyOtinclude:weeklyOtinclude,
                //                          exceptioncode:exceptioncode,
                //                          lastshift:lastShift,
                //                          addweeklyexc:excHoursForm,
                //                          Exceptiontype:Exceptiontype,
                //                          shiftColor:'#F08080',
                //                          notaddexc:exceptionHoursShift1,
                //                      }},{upsert: false, new: false}, function(err,data) {
                //                  })
                //              }
                //              if(addToStandardHours == false && weeklyOtinclude == false) {
                //                  Attendance.update({'_id': attendanceId,'companyId':companyId},
                //                      {$set: {
                //                          totalRounded: exceptionHoursShift1,
                //                          Exception : excHoursForm,
                //                          normalTime : normalTimeadd,
                //                          ExceptionAssign :employeeAttendance.ExceptionAssign,
                //                          shift:'',
                //                          addException : false,
                //                          standardHours:exceptionHoursShift1,
                //                          addToStandardHours:addToStandardHours,
                //                          weeklyOtinclude:weeklyOtinclude,
                //                          exceptioncode:exceptioncode,
                //                          lastshift:lastShift,
                //                          addweeklyexc:'',
                //                          Exceptiontype:Exceptiontype,
                //                          shiftColor:'#F08080',
                //                          notaddexc:'',
                //                      }},{upsert: false, new: false}, function(err,data){
                //                  })
                //              }
                //          } // weekly 1
                //      }); //  getExceptionData
                //  }
                // });
            }
        }
        if (employeeAttendance.checkin.length > 0) {
            var n = 1;
            var nextOrder = [];
            var checkinTotal = [];
            var checkinTotalAdjusted = [];
            var checkinWorkcode = [];
            var flagForchk = 0;
            var uniqueWorkCode = [];
            employeeAttendance.checkin.sort(orderByNameAscending);
            employeeAttendance.checkin.forEach(function(checkin) {
                console.log("offf");
                flagForchk++;
                var checkTime = new Date(Date.parse(checkin.checkTime)).toUTCString();
                var checkType = checkin.checkType;
                var hours = Moment.utc(checkTime).hours();
                var minute = Moment.utc(checkTime).minutes();
                var checkTimeHour = Moment.utc(checkTime).format('HH');
                var checkTimeMinute = Moment.utc(checkTime).format('mm');
                var checkinTimeDate = Moment.utc(checkTime).format('YYYY-MM-DD');
                var workCode = checkin.workCode;
                var checkinWorkcodeVal = '';
                if (dataCompany.isrounding) {
                    console.log("if dataCompany.isrounding");
                    if (dataCompany.rounding == 'in/out') {
                        console.log('in/out+--------------------------');
                        if (adminDetails.userType == "mainAdmin" || adminDetails.userType == "subAdmin") {
                            console.log("mainAdmin....");
                            //var checkinDate = Moment.utc(checkTime).format('YYYY-MM-DD');
                            if (checkType == 1 || checkType == 2 || checkType == 'i' || checkType == 'I') {
                                if (workCode) {
                                    console.log("workCode....................");
                                    checkinWorkcode.push(workCode);
                                }
                                console.log('limitIn-------------' + limitIn);
                                var interval = parseInt(inRounding);
                                var minuteAfter = parseInt(inroundupafter);
                                var strtInt = 0;
                                var finalValue = 0;
                                var theArray = [0];
                                var remaign = 0;
                                var seconds = 0;
                                var finishSeconds = 0;
                                // console.log(interval +'interval');
                                // console.log(minuteAfter + 'minuteAfter');
                                while (strtInt < 60) {
                                    strtInt = strtInt + interval;
                                    // console.log('minute'+minute);
                                    remaign = minute % interval;
                                    theArray.push(strtInt);
                                    // console.log(theArray);
                                    // console.log(remaign);
                                }
                                var closestNumber = closest(parseInt(minute), theArray, minuteAfter);
                                if (n == 1) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(startHour + ':' + startMinute + ':00')) {
                                        lateIn = '1';
                                    } else {
                                        lateIn = '0';
                                    }
                                }
                                if (limitIn == true && n == 1) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(startHour + ':' + startMinute + ':00')) {
                                        var finalV = toSeconds(startHour + ':' + startMinute + ':00');
                                        seconds = finalV;
                                    }
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(startHour + ':' + startMinute + ':00')) {

                                        finalValue = closestNumber;
                                    } else {
                                        finalValue = parseInt(minute);
                                    }
                                } else {
                                    if (limitIn == true) {
                                        // if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                        //     var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                        //     finishSeconds = finalV;
                                        // } else if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(startHour + ':' + startMinute + ':00')) {
                                        //     var finalV = toSeconds(startHour + ':' + startMinute + ':00');
                                        //     seconds = finalV;
                                        // } else {
                                        finalValue = closestNumber;
                                        // }
                                    } else {
                                        finalValue = closestNumber;
                                    }
                                }
                                if (finishSeconds) {
                                    var Hourset = Moment.utc(checkTime).set('hours', finishHour);
                                    var date = Moment.utc(Hourset).set('minute', finishMinute);
                                } else if (seconds) {
                                    var Hourset = Moment.utc(checkTime).set('hours', startHour);
                                    var date = Moment.utc(Hourset).set('minute', startMinute);
                                } else {
                                    var date = Moment.utc(checkTime).set('minute', finalValue);
                                }
                                //console.log(date +']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]');
                                var inAdjusted = new Date(Date.parse(date)).toUTCString();
                                if (n == 1) {
                                    nextOrder.push(0);
                                    var In = checkin.checkTime;
                                    checkinTotal.push(In);
                                    checkinTotalAdjusted.push(inAdjusted);
                                    //console.log('In array');
                                } else {
                                    if (isInArray(parseInt(1), nextOrder)) {
                                        nextOrder.length = 0;
                                        nextOrder.push(0);
                                        var In = checkin.checkTime;
                                        checkinTotal.push(In);
                                        checkinTotalAdjusted.push(inAdjusted);
                                        //console.log('In');
                                    } else {
                                        checkinTotal.length = 0;
                                        checkinTotalAdjusted.length = 0;
                                        //console.log(checkinWorkcodeVal + '---------------------------------------------------------checkinWorkcodeVal');
                                        checkinWorkcode.length = 0;
                                    }
                                }
                                // console.log(checkTime + 'checkTime +++++++++++++++++++++');
                                // console.log(inAdjusted + 'inAdjusted +++++++++++++++++++');
                                Attendance.update({
                                    '_id': employeeAttendance._id,
                                    'checkin.checkTime': checkin.checkTime
                                }, {
                                    $set: {
                                        "checkin.$.inAdjusted": inAdjusted,
                                    }
                                }, {
                                    upsert: false,
                                    new: false
                                }, function(err, data) {
                                    if (err) {
                                        console.log(err);
                                    } else {
                                        // console.log("true");
                                    }
                                })
                            } else {
                                console.log('sdaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa');
                                if (workCode) {
                                    checkinWorkcode.push(workCode)
                                }
                                // console.log('sdfffffffffffffffffffffffffffffffffffffff');
                                var interval = parseInt(outRounding);
                                var minuteAfter = parseInt(outroundupafter);
                                var strtInt = 0;
                                var finalValue = 0;
                                var theArray = [0];
                                var remaign = 0;
                                while (strtInt < 60) {
                                    strtInt = strtInt + interval;
                                    remaign = minute % interval;
                                    theArray.push(strtInt);
                                }
                                var closestNumber = closest(parseInt(minute), theArray, minuteAfter);
                                if (n == (employeeAttendance.checkin.length)) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                        lateOut = '1';
                                    } else {
                                        lateOut = '0';
                                    }
                                }
                                // console.log(n+'----'+employeeAttendance.checkin.length+'--------------------------------------------------');
                                if (limitOut == true && n == (employeeAttendance.checkin.length)) {
                                    // console.log('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');
                                    if (shiftStartDate == shiftFinishDate) {
                                        if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                            // console.log('lesss');
                                            finalValue = closestNumber;
                                        } else {
                                            var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                            seconds = finalV;
                                        }
                                    } else {
                                        if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00') && checkinTimeDate == shiftFinishDate) {
                                            var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                            // console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                            seconds = finalV;
                                        } else {
                                            finalValue = closestNumber;
                                        }
                                    }
                                } else {
                                    if (limitOut == true && n == (employeeAttendance.checkin.length)) {
                                        // console.log('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');
                                        if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                            outAdjusted = checkTime;
                                            // console.log('finish Hours');
                                        } else {
                                            var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                            // console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                            seconds = finalV;
                                        }
                                    } else {
                                        if (limitOut == true) {
                                            if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                                var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                                //console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                                seconds = finalV;
                                            } else {
                                                finalValue = closestNumber;
                                            }
                                        } else {
                                            finalValue = closestNumber;
                                        }
                                    }
                                }
                                if (seconds) {
                                    var Hourset = Moment.utc(checkTime).set('hours', finishHour);
                                    var date = Moment.utc(Hourset).set('minute', finishMinute);
                                } else {
                                    var date = Moment.utc(checkTime).set('minute', finalValue);
                                }
                                var outAdjusted = new Date(Date.parse(date)).toUTCString();
                                console.log(outAdjusted + 'outAdjustedoutAdjustedoutAdjusted');
                                console.log(nextOrder + 'nextOrder');
                                if (isInArray(parseInt(0), nextOrder)) {
                                    console.log('if *  **  * nextOrder');
                                    nextOrder.length = 0;
                                    nextOrder.push(1);
                                    var Out = checkin.checkTime;
                                    checkinTotal.push(Out);
                                    checkinTotalAdjusted.push(outAdjusted);
                                    if (checkinWorkcode.length > 0) {
                                        checkinWorkcodeVal = checkinWorkcode[0];
                                    } else {
                                        checkinWorkcodeVal = '99999';
                                    }
                                    if (checkinTotal.length == 2) {
                                        var InVAlue = new Date(Date.parse(checkinTotal[0])).toUTCString();
                                        var OutValue = new Date(Date.parse(checkinTotal[1])).toUTCString();

                                        var Inadjusted = new Date(Date.parse(checkinTotalAdjusted[0])).toUTCString();
                                        var outadjusted = new Date(Date.parse(checkinTotalAdjusted[1])).toUTCString();

                                        var inn = Moment(InVAlue).format('DD/MM/YYYY HH:mm');
                                        var out = Moment(OutValue).format('DD/MM/YYYY HH:mm');

                                        console.log(Inadjusted + 'Inadjusted ===========================');
                                        console.log(outadjusted + 'outadjusted ============================');

                                        var ms = Moment(out, "DD/MM/YYYY HH:mm:ss").diff(Moment(inn, "DD/MM/YYYY HH:mm:ss"));
                                        var d = Moment.duration(ms);
                                        var totalhours = Math.floor(d.asHours()) + Moment.utc(ms).format(":mm:ss");

                                        var innAdj = Moment(Inadjusted).format('DD/MM/YYYY HH:mm');
                                        var outAdj = Moment(outadjusted).format('DD/MM/YYYY HH:mm');

                                        var msAdjusted = Moment(outAdj, "DD/MM/YYYY HH:mm:ss").diff(Moment(innAdj, "DD/MM/YYYY HH:mm:ss"));
                                        var dAdjusted = Moment.duration(msAdjusted);
                                        var totalhoursAdjusted = Math.floor(dAdjusted.asHours()) + Moment.utc(msAdjusted).format(":mm:ss");
                                        if (totalhoursAdjusted.indexOf("-") > -1) {
                                            totalhoursAdjusted = '00:00:00';
                                        }
                                        checkinTotal.length = 0;
                                        checkinTotalAdjusted.length = 0;
                                        console.log(checkinWorkcodeVal + '---------------------------------------------------------checkinWorkcodeVal');
                                        checkinWorkcode.length = 0;
                                        console.log(outAdjusted + 'outAdjusted }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                        Attendance.update({
                                                '_id': employeeAttendance._id,
                                                'checkin.checkTime': checkin.checkTime
                                            }, {
                                                $set: {
                                                    "checkin.$.outAdjusted": outAdjusted,
                                                }
                                            }, {
                                                upsert: false,
                                                new: false
                                            }, function(err, data) {
                                                if (err) {
                                                    //console.log(err);
                                                } else {
                                                    var datec = Moment(outadjusted).format('YYYY-MM-DD');
                                                    Dashboard.update({
                                                        weekEnd: {
                                                            $gte: datec
                                                        },
                                                        weekStart: {
                                                            $lte: datec
                                                        },
                                                        'companyId': companyId
                                                    }, {
                                                        $set: {
                                                            calfalg: false
                                                        }
                                                    }, {
                                                        upsert: false,
                                                        new: false,
                                                        multi: true
                                                    }, function(err, data) {
                                                        if (err) {
                                                            // console.log(err);
                                                        }
                                                    });
                                                }
                                            })
                                            // console.log("1");
                                        Attendance.update({
                                            '_id': employeeAttendance._id,
                                            'totalValues.checkinNo': {
                                                $ne: flagForchk
                                            }
                                        }, {
                                            $set: {
                                                lateIn: lateIn,
                                                lateOut: lateOut,
                                            },
                                            $push: {
                                                totalValues: {
                                                    total: totalhours,
                                                    totalAdjusted: totalhoursAdjusted,
                                                    checkinNo: flagForchk,
                                                    workCode: checkinWorkcodeVal
                                                }
                                            }
                                        }, {
                                            upsert: false,
                                            new: false
                                        }, function(err, data) {
                                            console.log("22");
                                            if (err) {
                                                // console.log(err);
                                            } else {
                                                var shift = employeeAttendance.shift;
                                                var shiftType = employeeAttendance.shiftType;
                                                // console.log("33");
                                                if (!shift) {
                                                    Attendance.update({
                                                        '_id': employeeAttendance._id
                                                    }, {
                                                        $set: {
                                                            readFlag: true,
                                                        }
                                                    }, {
                                                        upsert: false,
                                                        new: false
                                                    }, function(err, data) {
                                                        if (err) {
                                                            // console.log(err);
                                                        }
                                                    });
                                                }
                                                // console.log("44");
                                                // console.log(employeeAttendance._id)
                                                totalhoursFn(employeeAttendance._id, companyId, function(result) {
                                                        console.log("totalhours..");
                                                        var totalhours = result[0];
                                                        var totalhoursAdjustedHours = result[1];
                                                        // console.log(totalhoursAdjustedHours + 'totalhoursAdjustedHours *******************');
                                                        // console.log(totalhours+'totalWorkingHours *****************************');
                                                        var weeklyOT1 = 0;
                                                        if (ExceptionAssign) {
                                                            // console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                            shift = lastShift;
                                                        } else {
                                                            shift = employeeAttendance.shift;
                                                        }
                                                        if (shiftType == "customShift") {
                                                            console.log("if customShift..");
                                                            // console.log(employeeAttendance);
                                                            // var shift = result.name;
                                                            var shiftStartTime = new Date(Date.parse(employeeAttendance.shiftStart)).toUTCString();
                                                            var shiftFinishTime = new Date(Date.parse(employeeAttendance.shiftFinish)).toUTCString();
                                                            var startLimit = employeeAttendance.limitIn;
                                                            var finishLimit = employeeAttendance.limitOut;
                                                            // var ordinarytime = employeeAttendance.ordinarytime;
                                                            // var overTime1 = employeeAttendance.overTime1;
                                                            // var overTime2 = employeeAttendance.overTime2;
                                                            var ordinarytime = "";
                                                            var overTime1 = "";
                                                            var overTime2 = "";

                                                            var breakTime = employeeAttendance.breakk;
                                                            var breakAfter = employeeAttendance.breakAfter;
                                                            /*var ordinarytime = result.ordinarytime;
                                                            var overTime1 = result.overTime1;
                                                            var breakAfter = result.breakAfter;
                                                            var breakTime = result.breakTime;*/
                                                            var breakIn = employeeAttendance.breakIn;
                                                            var breakAfter2 = employeeAttendance.breakAfter2;
                                                            var breakTime2 = employeeAttendance.breakTime2;
                                                            var breakIn2 = employeeAttendance.breakIn2;

                                                            var OT1 = '00:00:00';
                                                            var OT2 = '00:00:00';
                                                            var allowances = employeeAttendance.allowance;
                                                            global.normalTime = '00:00:00';
                                                            if (breakAfter) {
                                                                if (!breakTime) {
                                                                    breakTime = '00:00:00';
                                                                }
                                                                if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                    if (breakIn == true) {
                                                                        var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                    } else {
                                                                        var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                    }
                                                                    // console.log(afterhours);
                                                                    var hours1 = Math.floor(afterhours / 3600);
                                                                    afterhours %= 3600;
                                                                    var minutes1 = Math.floor(afterhours / 60);
                                                                    var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                    var totalhoursAdjusted = FinalHours;
                                                                    breaktaken = true;
                                                                } else {
                                                                    var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                }
                                                            } else {
                                                                var totalhoursAdjusted = totalhoursAdjustedHours;
                                                            }
                                                            if (breakAfter2) {
                                                                if (!breakTime2) {
                                                                    breakTime2 = '00:00:00';
                                                                }
                                                                // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                    if (breakIn2 == true) {
                                                                        // console.log("iffffff");
                                                                        var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                    } else {
                                                                        // console.log("else iffffff")
                                                                        var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                    }
                                                                    // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                    var hours1 = Math.floor(afterhours / 3600);
                                                                    afterhours %= 3600;
                                                                    var minutes1 = Math.floor(afterhours / 60);
                                                                    var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                    var totalhoursAdjusted = FinalHours;
                                                                    breaktaken2 = true;
                                                                } else {
                                                                    var totalhoursAdjusted = totalhoursAdjusted;
                                                                }
                                                            }
                                                            //console.log(totalhoursAdjusted +'totalhoursAdjusted');
                                                            totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                            //console.log(totalhoursAdjusted + 'after Format');
                                                            if (dataCompany.isovertime) {
                                                                console.log('overtime');
                                                                if (weekly == 0) {
                                                                    if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                        if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                            normalTime = ordinarytime;
                                                                            totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                            var Time1 = totalSeconds;
                                                                            hours = Math.floor(Time1 / 3600);
                                                                            Time1 %= 3600;
                                                                            minutes = Math.floor(Time1 / 60);
                                                                            seconds = Time1 % 60;
                                                                            if (overTime1 != '00:00:00' && overTime1 != '') {
                                                                                if (totalSeconds > toSeconds(overTime1)) {
                                                                                    console.log('asdas');
                                                                                    OT1 = overTime1;
                                                                                    var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                    hours = Math.floor(remaigntime / 3600);
                                                                                    remaigntime %= 3600;
                                                                                    minutes = Math.floor(remaigntime / 60);
                                                                                    seconds = remaigntime % 60;
                                                                                    OT2 = hours + ':' + minutes + ':' + seconds
                                                                                } else {
                                                                                    console.log('not');
                                                                                    hours = Math.floor(totalSeconds / 3600);
                                                                                    totalSeconds %= 3600;
                                                                                    minutes = Math.floor(totalSeconds / 60);
                                                                                    seconds = totalSeconds % 60;
                                                                                    OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                    OT2 = '';
                                                                                }
                                                                            } else {
                                                                                hours = Math.floor(totalSeconds / 3600);
                                                                                totalSeconds %= 3600;
                                                                                minutes = Math.floor(totalSeconds / 60);
                                                                                seconds = totalSeconds % 60;
                                                                                OT2 = '00:00:00';
                                                                                OT1 = hours + ':' + minutes + ':' + seconds;
                                                                            }
                                                                        } else {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '';
                                                                            OT2 = '';
                                                                        }
                                                                    } else {
                                                                        if (ordinarytime == '') {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '00:00:00';
                                                                            OT2 = '00:00:00';
                                                                        } else {
                                                                            if (dataCompany.overtimeLevel == "1" && dataCompany.overtimePeriod == 'daily') {
                                                                                normalTime = '00:00:00';
                                                                                OT1 = totalhoursAdjusted;
                                                                                OT2 = '00:00:00';
                                                                            } else {
                                                                                normalTime = '00:00:00';
                                                                                OT1 = '00:00:00';
                                                                                OT2 = totalhoursAdjusted;
                                                                            }
                                                                        }
                                                                    }
                                                                } //daily
                                                                if (weekly == 1) {
                                                                    if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                        console.log(ordinarytime + 'ordinarytime');
                                                                        if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                            normalTime = ordinarytime;
                                                                            totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                            var Time1 = totalSeconds;
                                                                            hours = Math.floor(Time1 / 3600);
                                                                            Time1 %= 3600;
                                                                            minutes = Math.floor(Time1 / 60);
                                                                            seconds = Time1 % 60;
                                                                            if (totalSeconds > toSeconds(overTime1) && overTime1 != '00:00:00') {
                                                                                OT1 = overTime1;
                                                                                var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                hours = Math.floor(remaigntime / 3600);
                                                                                remaigntime %= 3600;
                                                                                minutes = Math.floor(remaigntime / 60);
                                                                                seconds = remaigntime % 60;
                                                                                OT2 = hours + ':' + minutes + ':' + seconds;
                                                                            } else {
                                                                                hours = Math.floor(totalSeconds / 3600);
                                                                                totalSeconds %= 3600;
                                                                                minutes = Math.floor(totalSeconds / 60);
                                                                                seconds = totalSeconds % 60;
                                                                                OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                OT2 = '';
                                                                            }
                                                                        } else {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '';
                                                                            OT2 = '';
                                                                        }
                                                                    } else {
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = '';
                                                                        OT2 = '';
                                                                    }
                                                                } //weekly
                                                            } else {
                                                                normalTime = totalhoursAdjusted;
                                                                OT1 = '00:00:00';
                                                                OT2 = '00:00:00';
                                                            }
                                                            if (OT1) {
                                                                OT1 = changeFormat(OT1);
                                                            }
                                                            if (OT2) {
                                                                OT2 = changeFormat(OT2);
                                                            }
                                                            var allowancesArray = [];
                                                            if (allowances) {
                                                                // console.log(allowances +'assign------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                                for (i = 0; i < allowances.length; i++) {
                                                                    // console.log(allowances[i].name);
                                                                    // console.log(allowances[i].payAfter);
                                                                    var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                    var allowanceName = allowances[i].name;
                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                        // console.log( toSeconds(totalhoursAdjusted));
                                                                        // console.log( toSeconds(payAfter));
                                                                        allowancesArray.push({
                                                                            name: allowanceName,
                                                                            status: true
                                                                        })
                                                                    } else {
                                                                        allowancesArray.push({
                                                                            name: allowanceName,
                                                                            status: false
                                                                        })
                                                                    }
                                                                }
                                                            }

                                                            // console.log(allowancesArray + '66666666666666666666666666666');
                                                            // console.log(totalhours+'Final total Hours');
                                                            // console.log(totalhoursAdjusted + 'totalhoursAdjustedHours11111111111');

                                                            console.log(normalTime + 'normalTime');
                                                            console.log(OT1 + 'ot1');
                                                            console.log(OT2 + 'ot2');
                                                            // console.log('==========');
                                                            console.log(breakAfter + 'breakAfter');
                                                            console.log(breaktaken + 'breaktaken');
                                                            normalTimeAdd = normalTime;
                                                            ot1Add = OT1;
                                                            ot2Add = OT2;
                                                            totalRoundedAdd = totalhoursAdjusted;
                                                            if (totalhours) {
                                                                totalhours = changeFormat(totalhours);
                                                            }
                                                            Attendance.update({
                                                                    '_id': employeeAttendance._id
                                                                }, {
                                                                    $set: {
                                                                        normalTime: normalTime,
                                                                        ot1Rule: OT1,
                                                                        ot2Rule: OT2,
                                                                        total: totalhours,
                                                                        totalRounded: totalhoursAdjusted,
                                                                        breaktaken: breaktaken,
                                                                        breaktaken2: breaktaken2,
                                                                        readFlag: true,
                                                                        allowances: allowancesArray
                                                                    }
                                                                }, {
                                                                    upsert: false,
                                                                    new: false
                                                                }, function(err, data) {
                                                                    if (err) {
                                                                        // console.log(err);
                                                                    } else {
                                                                        // console.log("aaaaaaaaaaaaaaaaa.......");
                                                                        if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                            calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                // if(result) {
                                                                                //  res.json(true);
                                                                                // }
                                                                            })
                                                                        }
                                                                        shiftHoursForHolidays(shift, companyId, function(result) {
                                                                            //console.log('---------------*****************************************************');
                                                                            var holidayHoursShift = result;
                                                                            var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD');
                                                                            //var shiftAssign =
                                                                            if (holidayresult.indexOf(dateGive) > -1) {
                                                                                //   console.log(dateGive);
                                                                                // console.log('shiftshiftshift' + shift);
                                                                                if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                    var finalnormalTime = '';
                                                                                    var finalOT1 = '';
                                                                                    var finalOT2 = '';
                                                                                    // console.log("17aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                    if (holidaymultiplier == 'NT') {
                                                                                        // finalnormalTime =  toSeconds(holidayHoursShift);
                                                                                        Attendance.update({
                                                                                            '_id': employeeAttendance._id,
                                                                                            'companyId': companyId
                                                                                        }, {
                                                                                            $set: {
                                                                                                normalTime: totalhoursAdjusted,
                                                                                                ot2Rule: '00:00:00',
                                                                                                ot1Rule: '00:00:00',
                                                                                                readFlag: true,
                                                                                                dayinLieu: holidayHoursShift,
                                                                                                Exception: holidayHoursShift,
                                                                                                exceptioncode: cmppayrollCode,
                                                                                                Exceptiontype: 'Holiday',
                                                                                                ExceptionAssign: 'Holiday',
                                                                                                cutException: '',
                                                                                                addweeklyexc: '',
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, data) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        })
                                                                                    }
                                                                                    if (holidaymultiplier == 'OT1') {
                                                                                        if (ot1Add == '') {
                                                                                            ot1Add = '00:00:00'
                                                                                        }
                                                                                        //console.log('holidayHoursShift');
                                                                                        // finalOT1 =  toSeconds(holidayHoursShift);
                                                                                        Attendance.update({
                                                                                            '_id': employeeAttendance._id,
                                                                                            'companyId': companyId
                                                                                        }, {
                                                                                            $set: {
                                                                                                ot1Rule: totalhoursAdjusted,
                                                                                                ot2Rule: '00:00:00',
                                                                                                normalTime: '00:00:00',
                                                                                                readFlag: true,
                                                                                                dayinLieu: holidayHoursShift,
                                                                                                Exception: holidayHoursShift,
                                                                                                exceptioncode: cmppayrollCode,
                                                                                                Exceptiontype: 'Holiday',
                                                                                                ExceptionAssign: 'Holiday',
                                                                                                cutException: '',
                                                                                                addweeklyexc: '',
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, data) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        })
                                                                                    }
                                                                                    if (holidaymultiplier == 'OT2') {
                                                                                        if (ot2Add == '') {
                                                                                            ot2Add = '00:00:00'
                                                                                        }
                                                                                        // finalOT2 =  toSeconds(holidayHoursShift);
                                                                                        Attendance.update({
                                                                                            '_id': employeeAttendance._id,
                                                                                            'companyId': companyId
                                                                                        }, {
                                                                                            $set: {
                                                                                                ot2Rule: totalhoursAdjusted,
                                                                                                ot1Rule: '00:00:00',
                                                                                                normalTime: '00:00:00',
                                                                                                readFlag: true,
                                                                                                dayinLieu: holidayHoursShift,
                                                                                                Exception: holidayHoursShift,
                                                                                                exceptioncode: cmppayrollCode,
                                                                                                Exceptiontype: 'Holiday',
                                                                                                ExceptionAssign: 'Holiday',
                                                                                                cutException: '',
                                                                                                addweeklyexc: '',
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, data) {
                                                                                            if (err) {
                                                                                                // callback(1);
                                                                                                // console.log(err);
                                                                                            }
                                                                                        })
                                                                                    }
                                                                                    //console.log('calculate holiday hours');
                                                                                }
                                                                            }
                                                                        });
                                                                    }
                                                                }) //attendance update
                                                        } else {
                                                            getShiftData(shiftType, shift, companyId, function(result) {
                                                                    var shift = result.name;
                                                                    var shiftStartTime = new Date(Date.parse(result.startTime)).toUTCString();
                                                                    var shiftFinishTime = new Date(Date.parse(result.finishTime)).toUTCString();
                                                                    var startLimit = result.startLimit;
                                                                    var finishLimit = result.finishLimit;
                                                                    var ordinarytime = result.ordinarytime;
                                                                    var overTime1 = result.overTime1;
                                                                    var overTime2 = result.overTime2;
                                                                    var breakTime = result.breakTime;
                                                                    var breakAfter = result.breakAfter;
                                                                    /*var ordinarytime = result.ordinarytime;
                                                                    var overTime1 = result.overTime1;
                                                                    var breakAfter = result.breakAfter;
                                                                    var breakTime = result.breakTime;*/
                                                                    var breakAfter2 = result.breakAfter2;
                                                                    var breakTime2 = result.breakTime2;
                                                                    var breakIn2 = result.breakIn2;
                                                                    var breakIn = result.breakIn;
                                                                    var OT1 = '00:00:00';
                                                                    var OT2 = '00:00:00';
                                                                    var allowances = result.allowance;
                                                                    var timezoneListArray = [];
                                                                    if (result.timeZones) {
                                                                        timezoneListArray = result.timeZones;
                                                                    }
                                                                    if (timezoneListArray.length > 0) {
                                                                        var timeZoneNTArray = [];
                                                                        var timeZoneOt1Array = [];
                                                                        var timeZoneOt2Array = [];
                                                                        result.timeZones.forEach(function(timezone) {
                                                                            if (timezone.payPeriod == "NT") {
                                                                                timeZoneNTArray.push({
                                                                                    zoneName: timezone.zoneName,
                                                                                    finishTime: timezone.finishTime,
                                                                                    startTime: timezone.startTime
                                                                                });
                                                                            } else if (timezone.payPeriod == "OT1") {
                                                                                timeZoneOt1Array.push({
                                                                                    zoneName: timezone.zoneName,
                                                                                    finishTime: timezone.finishTime,
                                                                                    startTime: timezone.startTime
                                                                                });
                                                                            } else if (timezone.payPeriod == "OT2") {
                                                                                timeZoneOt2Array.push({
                                                                                    zoneName: timezone.zoneName,
                                                                                    finishTime: timezone.finishTime,
                                                                                    startTime: timezone.startTime
                                                                                });
                                                                            }
                                                                        });
                                                                        var arrays = {
                                                                            ntArray: timeZoneNTArray,
                                                                            ot1Array: timeZoneOt1Array,
                                                                            ot2Array: timeZoneOt2Array
                                                                        };
                                                                        devideHourIntoNt(employeeAttendance._id, companyId, arrays, function(ntTotal) {
                                                                            console.log("ntTotal.zoneName........." + ntTotal.zoneName);
                                                                            global.normalTime = '00:00:00';
                                                                            if (breakAfter) {
                                                                                if (!breakTime) {
                                                                                    breakTime = '00:00:00';
                                                                                }
                                                                                if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                                    totalhoursAdjustedHours = ntTotal.normalTime;
                                                                                    if (breakIn == true) {
                                                                                        var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                                    } else {
                                                                                        var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                                    }
                                                                                    // console.log(afterhours);
                                                                                    var hours1 = Math.floor(afterhours / 3600);
                                                                                    afterhours %= 3600;
                                                                                    var minutes1 = Math.floor(afterhours / 60);
                                                                                    var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                    var totalhoursAdjusted = FinalHours;
                                                                                    breaktaken = true;
                                                                                } else {
                                                                                    var totalhoursAdjusted = ntTotal.normalTime;
                                                                                }
                                                                            } else {
                                                                                var totalhoursAdjusted = ntTotal.normalTime;
                                                                            }
                                                                            if (breakAfter2) {
                                                                                if (!breakTime2) {
                                                                                    breakTime2 = '00:00:00';
                                                                                }
                                                                                // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                                if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                                    if (breakIn2 == true) {
                                                                                        // console.log("iffffff");
                                                                                        var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                                    } else {
                                                                                        // console.log("else iffffff")
                                                                                        var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                                    }
                                                                                    // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                                    var hours1 = Math.floor(afterhours / 3600);
                                                                                    afterhours %= 3600;
                                                                                    var minutes1 = Math.floor(afterhours / 60);
                                                                                    var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                    var totalhoursAdjusted = FinalHours;
                                                                                    breaktaken2 = true;
                                                                                } else {
                                                                                    var totalhoursAdjusted = totalhoursAdjusted;
                                                                                }
                                                                            }
                                                                            totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = ntTotal.OT1;
                                                                            OT2 = ntTotal.OT2;
                                                                            if (OT1) {
                                                                                OT1 = changeFormat(OT1);
                                                                            }
                                                                            if (OT2) {
                                                                                OT2 = changeFormat(OT2);
                                                                            }
                                                                            var allowancesArray = [];
                                                                            if (allowances) {
                                                                                for (i = 0; i < allowances.length; i++) {
                                                                                    var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                                    var allowanceName = allowances[i].name;
                                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                                        allowancesArray.push({
                                                                                            name: allowanceName,
                                                                                            status: true
                                                                                        })
                                                                                    } else {
                                                                                        allowancesArray.push({
                                                                                            name: allowanceName,
                                                                                            status: false
                                                                                        })
                                                                                    }
                                                                                }
                                                                            }
                                                                            normalTimeAdd = normalTime;
                                                                            ot1Add = OT1;
                                                                            ot2Add = OT2;
                                                                            var NtOThours = toSeconds(OT2) + toSeconds(OT1) + toSeconds(normalTime);
                                                                            var hours1 = Math.floor(NtOThours / 3600);
                                                                            NtOThours %= 3600;
                                                                            var minutes1 = Math.floor(NtOThours / 60);
                                                                            var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                            totalRoundedAdd = FinalHours;
                                                                            if (totalhours) {
                                                                                totalhours = changeFormat(totalhours);
                                                                            }
                                                                            Attendance.update({
                                                                                    '_id': employeeAttendance._id
                                                                                }, {
                                                                                    $set: {
                                                                                        normalTime: normalTime,
                                                                                        ot1Rule: OT1,
                                                                                        ot2Rule: OT2,
                                                                                        total: totalhours,
                                                                                        totalRounded: FinalHours,
                                                                                        breaktaken: breaktaken,
                                                                                        breaktaken2: breaktaken2,
                                                                                        readFlag: true,
                                                                                        allowances: allowancesArray
                                                                                    }
                                                                                }, {
                                                                                    upsert: false,
                                                                                    new: false
                                                                                }, function(err, data) {
                                                                                    if (err) {
                                                                                        // console.log(err);
                                                                                    } else {
                                                                                        if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                                            calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                                // if(result) {
                                                                                                //  res.json(true);
                                                                                                // }
                                                                                            })
                                                                                        }
                                                                                        shiftHoursForHolidays(shift, companyId, function(result) {
                                                                                            var holidayHoursShift = result;
                                                                                            var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD hh:mm:ss');
                                                                                            if (holidayresult.indexOf(dateGive) > -1) {
                                                                                                if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                                    var finalnormalTime = '';
                                                                                                    var finalOT1 = '';
                                                                                                    var finalOT2 = '';
                                                                                                    // console.log("aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                                    if (holidaymultiplier == 'NT') {
                                                                                                        // finalnormalTime =  toSeconds(holidayHoursShift);
                                                                                                        Attendance.update({
                                                                                                            '_id': employeeAttendance._id,
                                                                                                            'companyId': companyId
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                normalTime: totalhoursAdjusted,
                                                                                                                ot2Rule: '00:00:00',
                                                                                                                ot1Rule: '00:00:00',
                                                                                                                readFlag: true,
                                                                                                                dayinLieu: holidayHoursShift,
                                                                                                                Exception: holidayHoursShift,
                                                                                                                exceptioncode: cmppayrollCode,
                                                                                                                Exceptiontype: 'Holiday',
                                                                                                                ExceptionAssign: 'Holiday',
                                                                                                                cutException: '',
                                                                                                                addweeklyexc: '',
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, data) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        })
                                                                                                    }
                                                                                                    if (holidaymultiplier == 'OT1') {
                                                                                                        if (ot1Add == '') {
                                                                                                            ot1Add = '00:00:00'
                                                                                                        }
                                                                                                        //console.log('holidayHoursShift');
                                                                                                        // finalOT1 =  toSeconds(holidayHoursShift);
                                                                                                        Attendance.update({
                                                                                                            '_id': employeeAttendance._id,
                                                                                                            'companyId': companyId
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                ot1Rule: totalhoursAdjusted,
                                                                                                                ot2Rule: '00:00:00',
                                                                                                                normalTime: '00:00:00',
                                                                                                                readFlag: true,
                                                                                                                dayinLieu: holidayHoursShift,
                                                                                                                Exception: holidayHoursShift,
                                                                                                                exceptioncode: cmppayrollCode,
                                                                                                                Exceptiontype: 'Holiday',
                                                                                                                ExceptionAssign: 'Holiday',
                                                                                                                cutException: '',
                                                                                                                addweeklyexc: '',
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, data) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        })
                                                                                                    }
                                                                                                    if (holidaymultiplier == 'OT2') {
                                                                                                        if (ot2Add == '') {
                                                                                                            ot2Add = '00:00:00'
                                                                                                        }
                                                                                                        // finalOT2 =  toSeconds(holidayHoursShift);
                                                                                                        Attendance.update({
                                                                                                            '_id': employeeAttendance._id,
                                                                                                            'companyId': companyId
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                ot2Rule: totalhoursAdjusted,
                                                                                                                ot1Rule: '00:00:00',
                                                                                                                normalTime: '00:00:00',
                                                                                                                readFlag: true,
                                                                                                                dayinLieu: holidayHoursShift,
                                                                                                                Exception: holidayHoursShift,
                                                                                                                exceptioncode: cmppayrollCode,
                                                                                                                Exceptiontype: 'Holiday',
                                                                                                                ExceptionAssign: 'Holiday',
                                                                                                                cutException: '',
                                                                                                                addweeklyexc: '',
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, data) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        })
                                                                                                    }
                                                                                                    //console.log('calculate holiday hours');
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                }) //attendance update
                                                                        });
                                                                    } else {
                                                                        global.normalTime = '00:00:00';
                                                                        if (breakAfter) {
                                                                            if (!breakTime) {
                                                                                breakTime = '00:00:00';
                                                                            }
                                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                                if (breakIn == true) {
                                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                                } else {
                                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                                }
                                                                                // console.log(afterhours);
                                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                                afterhours %= 3600;
                                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                var totalhoursAdjusted = FinalHours;
                                                                                breaktaken = true;
                                                                            } else {
                                                                                var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                            }
                                                                        } else {
                                                                            var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                        }
                                                                        if (breakAfter2) {
                                                                            if (!breakTime2) {
                                                                                breakTime2 = '00:00:00';
                                                                            }
                                                                            // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                                if (breakIn2 == true) {
                                                                                    // console.log("iffffff");
                                                                                    var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                                } else {
                                                                                    // console.log("else iffffff")
                                                                                    var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                                }
                                                                                // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                                afterhours %= 3600;
                                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                var totalhoursAdjusted = FinalHours;
                                                                                breaktaken2 = true;
                                                                            } else {
                                                                                var totalhoursAdjusted = totalhoursAdjusted;
                                                                            }
                                                                        }
                                                                        //console.log(totalhoursAdjusted +'totalhoursAdjusted');
                                                                        totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                                        //console.log(totalhoursAdjusted + 'after Format');
                                                                        if (dataCompany.isovertime) {
                                                                            // console.log('overtime');
                                                                            if (weekly == 0) {
                                                                                if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                                        normalTime = ordinarytime;
                                                                                        totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                                        var Time1 = totalSeconds;
                                                                                        hours = Math.floor(Time1 / 3600);
                                                                                        Time1 %= 3600;
                                                                                        minutes = Math.floor(Time1 / 60);
                                                                                        seconds = Time1 % 60;
                                                                                        if (overTime1 != '00:00:00' && overTime1 != '') {
                                                                                            if (totalSeconds > toSeconds(overTime1)) {
                                                                                                // console.log('asdas');
                                                                                                OT1 = overTime1;
                                                                                                var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                                hours = Math.floor(remaigntime / 3600);
                                                                                                remaigntime %= 3600;
                                                                                                minutes = Math.floor(remaigntime / 60);
                                                                                                seconds = remaigntime % 60;
                                                                                                OT2 = hours + ':' + minutes + ':' + seconds
                                                                                            } else {
                                                                                                // console.log('not');
                                                                                                hours = Math.floor(totalSeconds / 3600);
                                                                                                totalSeconds %= 3600;
                                                                                                minutes = Math.floor(totalSeconds / 60);
                                                                                                seconds = totalSeconds % 60;
                                                                                                OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                                OT2 = '';
                                                                                            }
                                                                                        } else {
                                                                                            hours = Math.floor(totalSeconds / 3600);
                                                                                            totalSeconds %= 3600;
                                                                                            minutes = Math.floor(totalSeconds / 60);
                                                                                            seconds = totalSeconds % 60;
                                                                                            OT2 = '00:00:00';
                                                                                            OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                        }
                                                                                    } else {
                                                                                        normalTime = totalhoursAdjusted;
                                                                                        OT1 = '';
                                                                                        OT2 = '';
                                                                                    }
                                                                                } else {
                                                                                    if (ordinarytime == '') {
                                                                                        normalTime = totalhoursAdjusted;
                                                                                        OT1 = '00:00:00';
                                                                                        OT2 = '00:00:00';
                                                                                    } else {
                                                                                        if (dataCompany.overtimeLevel == "1" && dataCompany.overtimePeriod == 'daily') {
                                                                                            normalTime = '00:00:00';
                                                                                            OT1 = totalhoursAdjusted;
                                                                                            OT2 = '00:00:00';
                                                                                        } else {
                                                                                            normalTime = '00:00:00';
                                                                                            OT1 = '00:00:00';
                                                                                            OT2 = totalhoursAdjusted;
                                                                                        }
                                                                                    }
                                                                                    /*if(overTime1 != '00:00:00'){
                                                                                        var totalSeconds1 =  toSeconds(totalhoursAdjusted)
                                                                                        if(totalSeconds1 > toSeconds(overTime1)){
                                                                                            console.log('asdas');
                                                                                            OT1 = overTime1;
                                                                                            var remaigntime = totalSeconds1 - toSeconds(overTime1);
                                                                                            hours = Math.floor(remaigntime / 3600);
                                                                                            remaigntime %= 3600;
                                                                                            minutes = Math.floor(remaigntime / 60);
                                                                                            seconds = remaigntime % 60;
                                                                                            OT2 = hours+':'+minutes+':'+seconds;
                                                                                        }else{
                                                                                            console.log('not');
                                                                                            hours = Math.floor(totalSeconds1 / 3600);
                                                                                            totalSeconds1 %= 3600;
                                                                                            minutes = Math.floor(totalSeconds1 / 60);
                                                                                            seconds = totalSeconds1 % 60;
                                                                                            OT1 = hours+':'+minutes+':'+seconds;
                                                                                            OT2 = '';
                                                                                        }
                                                                                    }else{
                                                                                        normalTime = '00:00:00';
                                                                                        OT1  = '00:00:00';
                                                                                        OT2 = totalhoursAdjusted;
                                                                                    }*/
                                                                                }
                                                                            } //daily
                                                                            if (weekly == 1) {
                                                                                if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                                    console.log(ordinarytime + 'ordinarytime');
                                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                                        normalTime = ordinarytime;
                                                                                        totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                                        var Time1 = totalSeconds;
                                                                                        hours = Math.floor(Time1 / 3600);
                                                                                        Time1 %= 3600;
                                                                                        minutes = Math.floor(Time1 / 60);
                                                                                        seconds = Time1 % 60;
                                                                                        if (totalSeconds > toSeconds(overTime1) && overTime1 != '00:00:00') {
                                                                                            OT1 = overTime1;
                                                                                            var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                            hours = Math.floor(remaigntime / 3600);
                                                                                            remaigntime %= 3600;
                                                                                            minutes = Math.floor(remaigntime / 60);
                                                                                            seconds = remaigntime % 60;
                                                                                            OT2 = hours + ':' + minutes + ':' + seconds;
                                                                                        } else {
                                                                                            hours = Math.floor(totalSeconds / 3600);
                                                                                            totalSeconds %= 3600;
                                                                                            minutes = Math.floor(totalSeconds / 60);
                                                                                            seconds = totalSeconds % 60;
                                                                                            OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                            OT2 = '';
                                                                                        }
                                                                                    } else {
                                                                                        normalTime = totalhoursAdjusted;
                                                                                        OT1 = '';
                                                                                        OT2 = '';
                                                                                    }
                                                                                } else {
                                                                                    normalTime = totalhoursAdjusted;
                                                                                    OT1 = '';
                                                                                    OT2 = '';
                                                                                }
                                                                            } //weekly
                                                                        } else {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '00:00:00';
                                                                            OT2 = '00:00:00';
                                                                        }
                                                                        if (OT1) {
                                                                            OT1 = changeFormat(OT1);
                                                                        }
                                                                        if (OT2) {
                                                                            OT2 = changeFormat(OT2);
                                                                        }
                                                                        var allowancesArray = [];
                                                                        if (allowances) {
                                                                            // console.log(allowances +'assign------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                                            for (i = 0; i < allowances.length; i++) {
                                                                                // console.log(allowances[i].name);
                                                                                // console.log(allowances[i].payAfter);
                                                                                var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                                var allowanceName = allowances[i].name;
                                                                                if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                                    // console.log(toSeconds(totalhoursAdjusted));
                                                                                    // console.log(toSeconds(payAfter));
                                                                                    allowancesArray.push({
                                                                                        name: allowanceName,
                                                                                        status: true
                                                                                    })
                                                                                } else {
                                                                                    allowancesArray.push({
                                                                                        name: allowanceName,
                                                                                        status: false
                                                                                    })
                                                                                }
                                                                            }
                                                                        }
                                                                        // console.log(allowancesArray + '66666666666666666666666666666');
                                                                        // console.log(totalhours+'Final total Hours');
                                                                        // console.log(totalhoursAdjusted + 'totalhoursAdjustedHours11111111111');
                                                                        /*console.log(normalTime+'normalTime');
                                                                        console.log(OT1+'ot1');
                                                                        console.log(OT2+'ot2');
                                                                        console.log('==========');
                                                                        console.log(breakAfter +'breakAfter');
                                                                        console.log(breaktaken +'breaktaken');*/
                                                                        normalTimeAdd = normalTime;
                                                                        ot1Add = OT1;
                                                                        ot2Add = OT2;
                                                                        totalRoundedAdd = totalhoursAdjusted;
                                                                        if (totalhours) {
                                                                            totalhours = changeFormat(totalhours);
                                                                        }
                                                                        Attendance.update({
                                                                                '_id': employeeAttendance._id
                                                                            }, {
                                                                                $set: {
                                                                                    normalTime: normalTime,
                                                                                    ot1Rule: OT1,
                                                                                    ot2Rule: OT2,
                                                                                    total: totalhours,
                                                                                    totalRounded: totalhoursAdjusted,
                                                                                    breaktaken: breaktaken,
                                                                                    breaktaken2: breaktaken2,
                                                                                    readFlag: true,
                                                                                    allowances: allowancesArray
                                                                                }
                                                                            }, {
                                                                                upsert: false,
                                                                                new: false
                                                                            }, function(err, data) {
                                                                                if (err) {
                                                                                    // console.log(err);
                                                                                } else {
                                                                                    // console.log("asmita........");
                                                                                    if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                                        calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                            // if(result) {
                                                                                            //  res.json(true);
                                                                                            // }
                                                                                        })
                                                                                    }
                                                                                    shiftHoursForHolidays(shift, companyId, function(result) {
                                                                                        // console.log('---------------*****************************************************');
                                                                                        var holidayHoursShift = result;
                                                                                        // console.log(result);
                                                                                        // console.log(employeeAttendance.date);
                                                                                        var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD');
                                                                                        console.log("dateGive...." + dateGive);
                                                                                        // console.log("holidayresult...")
                                                                                        // console.log(holidayresult)
                                                                                        //var shiftAssign =
                                                                                        if (holidayresult.indexOf(dateGive) > -1) {
                                                                                            //   console.log(dateGive);
                                                                                            console.log('shiftshiftshift' + shift);
                                                                                            if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                                if (holidaymultiplier == 'NT') {
                                                                                                    finalnormalTime = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            normalTime: totalhoursAdjusted,
                                                                                                            ot2Rule: '00:00:00',
                                                                                                            ot1Rule: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                if (holidaymultiplier == 'OT1') {
                                                                                                    console.log('totalRoundedAdd.....' + holidayHoursShift);
                                                                                                    finalOT1 = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            ot1Rule: totalhoursAdjusted,
                                                                                                            ot2Rule: '00:00:00',
                                                                                                            normalTime: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                if (holidaymultiplier == 'OT2') {
                                                                                                    // finalOT2 = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            ot2Rule: totalhoursAdjusted,
                                                                                                            ot1Rule: '00:00:00',
                                                                                                            normalTime: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                //console.log('calculate holiday hours');
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                }
                                                                            }) //attendance update
                                                                    }
                                                                }) //shiftData
                                                        }
                                                    }) //totalhours
                                            }
                                        })
                                    }
                                }
                            }
                            n++;
                        } else if (checkin.alterWho != employeeAttendance.employeeNo) {
                            if (checkType == 1 || checkType == 2 || checkType == 'i' || checkType == 'I') {
                                if (workCode) {
                                    checkinWorkcode.push(workCode);
                                }
                                console.log('limitIn-------------' + limitIn);
                                var interval = parseInt(inRounding);
                                var minuteAfter = parseInt(inroundupafter);
                                var strtInt = 0;
                                var finalValue = 0;
                                var theArray = [0];
                                var remaign = 0;
                                var seconds = 0;
                                var finishSeconds = 0;
                                // console.log(interval +'interval');
                                // console.log(minuteAfter + 'minuteAfter');
                                while (strtInt < 60) {
                                    strtInt = strtInt + interval;
                                    // console.log('minute'+minute);
                                    remaign = minute % interval;
                                    theArray.push(strtInt);
                                    // console.log(theArray);
                                    // console.log(remaign);
                                }
                                var closestNumber = closest(parseInt(minute), theArray, minuteAfter);
                                if (n == 1) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(startHour + ':' + startMinute + ':00')) {
                                        lateIn = '1';
                                    } else {
                                        lateIn = '0';
                                    }
                                }
                                if (limitIn == true && n == 1) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(startHour + ':' + startMinute + ':00')) {
                                        var finalV = toSeconds(startHour + ':' + startMinute + ':00');
                                        //console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                        seconds = finalV;
                                    }
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(startHour + ':' + startMinute + ':00')) {
                                        /*for(i=0; i< theArray.length; i++){
                                            if(theArray[i] == closestNumber){
                                                if(remaign>minuteAfter){
                                                    finalValue = closestNumber ;
                                                    break;
                                                } else {
                                                    finalValue = theArray[i];
                                                }
                                            }
                                        }*/
                                        finalValue = closestNumber;
                                    } else {
                                        finalValue = parseInt(minute);
                                    }
                                } else {
                                    if (limitIn == true) {
                                        // if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                        //     var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                        //     finishSeconds = finalV;
                                        // } else if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(startHour + ':' + startMinute + ':00')) {
                                        //     var finalV = toSeconds(startHour + ':' + startMinute + ':00');
                                        //     seconds = finalV;
                                        // } else {
                                        finalValue = closestNumber;
                                        // }
                                    } else {
                                        finalValue = closestNumber;
                                        /*for(i=0; i< theArray.length; i++){
                                            if(theArray[i] == closestNumber){
                                                if(remaign>minuteAfter){
                                                    console.log('ff');
                                                    finalValue = closestNumber ;
                                                    break;
                                                } else {
                                                    console.log('nn');
                                                    finalValue = theArray[i];
                                                }
                                            }
                                        }*/
                                    }
                                    // console.log('finalValue'+finalValue);
                                }
                                if (finishSeconds) {
                                    var Hourset = Moment.utc(checkTime).set('hours', finishHour);
                                    var date = Moment.utc(Hourset).set('minute', finishMinute);
                                } else if (seconds) {
                                    var Hourset = Moment.utc(checkTime).set('hours', startHour);
                                    var date = Moment.utc(Hourset).set('minute', startMinute);
                                } else {
                                    var date = Moment.utc(checkTime).set('minute', finalValue);
                                }
                                //console.log(date +']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]');
                                var inAdjusted = new Date(Date.parse(date)).toUTCString();
                                if (n == 1) {
                                    nextOrder.push(0);
                                    var In = checkin.checkTime;
                                    checkinTotal.push(In);
                                    checkinTotalAdjusted.push(inAdjusted);
                                    //console.log('In array');
                                } else {
                                    if (isInArray(parseInt(1), nextOrder)) {
                                        nextOrder.length = 0;
                                        nextOrder.push(0);
                                        var In = checkin.checkTime;
                                        checkinTotal.push(In);
                                        checkinTotalAdjusted.push(inAdjusted);
                                        //console.log('In');
                                    } else {
                                        checkinTotal.length = 0;
                                        checkinTotalAdjusted.length = 0;
                                        //console.log(checkinWorkcodeVal + '---------------------------------------------------------checkinWorkcodeVal');
                                        checkinWorkcode.length = 0;
                                    }
                                }
                                // console.log(checkTime + 'checkTime +++++++++++++++++++++');
                                // console.log(inAdjusted + 'inAdjusted +++++++++++++++++++');
                                Attendance.update({
                                    '_id': employeeAttendance._id,
                                    'checkin.checkTime': checkin.checkTime
                                }, {
                                    $set: {
                                        "checkin.$.inAdjusted": inAdjusted,
                                    }
                                }, {
                                    upsert: false,
                                    new: false
                                }, function(err, data) {
                                    if (err) {
                                        console.log(err);
                                    } else {
                                        // console.log("true");
                                    }
                                })
                            } else {
                                // console.log('sdaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa');
                                if (workCode) {
                                    checkinWorkcode.push(workCode)
                                }
                                // console.log('sdfffffffffffffffffffffffffffffffffffffff');
                                var interval = parseInt(outRounding);
                                var minuteAfter = parseInt(outroundupafter);
                                var strtInt = 0;
                                var finalValue = 0;
                                var theArray = [0];
                                var remaign = 0;
                                while (strtInt < 60) {
                                    strtInt = strtInt + interval;
                                    remaign = minute % interval;
                                    theArray.push(strtInt);
                                }
                                var closestNumber = closest(parseInt(minute), theArray, minuteAfter);
                                if (n == (employeeAttendance.checkin.length)) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                        lateOut = '1';
                                    } else {
                                        lateOut = '0';
                                    }
                                }
                                // console.log(n+'----'+employeeAttendance.checkin.length+'--------------------------------------------------');
                                if (limitOut == true && n == (employeeAttendance.checkin.length)) {
                                    // console.log('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');
                                    if (shiftStartDate == shiftFinishDate) {
                                        if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                            // console.log('lesss');
                                            finalValue = closestNumber;

                                        } else {
                                            var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                            seconds = finalV;
                                        }
                                    } else {
                                        if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00') && checkinTimeDate == shiftFinishDate) {
                                            var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                            // console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                            seconds = finalV;
                                        } else {
                                            finalValue = closestNumber;
                                            /*for(i=0; i< theArray.length; i++){
                                                if(theArray[i] == closestNumber){
                                                    if(remaign>minuteAfter){
                                                             finalValue = closestNumber ;
                                                             break;
                                                        }else{
                                                                finalValue = theArray[i];
                                                            }
                                                }
                                            }*/
                                        }
                                    }
                                } else {
                                    if (limitOut == true && n == (employeeAttendance.checkin.length)) {
                                        // console.log('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');
                                        if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                            outAdjusted = checkTime;
                                            // console.log('finish Hours');
                                        } else {
                                            var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                            // console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                            seconds = finalV;
                                        }
                                    } else {
                                        if (limitOut == true) {
                                            if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                                var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                                //console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                                seconds = finalV;
                                            } else {
                                                finalValue = closestNumber;
                                                /*for(i=0; i< theArray.length; i++){
                                                    if(theArray[i] == closestNumber){
                                                        if(remaign>minuteAfter){
                                                                 finalValue = closestNumber ;
                                                                 break;
                                                            }else{
                                                                    finalValue = theArray[i];
                                                                }
                                                    }
                                                }*/
                                            }
                                        } else {
                                            finalValue = closestNumber;
                                            /*for(i=0; i< theArray.length; i++){
                                                if(theArray[i] == closestNumber){
                                                    if(remaign>minuteAfter){
                                                             finalValue = closestNumber ;
                                                             break;
                                                        }else{
                                                                finalValue = theArray[i];
                                                            }
                                                }
                                            }*/
                                        }
                                    }
                                }
                                if (seconds) {
                                    var Hourset = Moment.utc(checkTime).set('hours', finishHour);
                                    var date = Moment.utc(Hourset).set('minute', finishMinute);
                                } else {
                                    var date = Moment.utc(checkTime).set('minute', finalValue);
                                }
                                var outAdjusted = new Date(Date.parse(date)).toUTCString();
                                console.log(outAdjusted + 'outAdjustedoutAdjustedoutAdjusted');
                                console.log(nextOrder + 'nextOrder');
                                if (isInArray(parseInt(0), nextOrder)) {
                                    // console.log("if1***");
                                    nextOrder.length = 0;
                                    nextOrder.push(1);
                                    var Out = checkin.checkTime;
                                    checkinTotal.push(Out);
                                    checkinTotalAdjusted.push(outAdjusted);
                                    if (checkinWorkcode.length > 0) {
                                        checkinWorkcodeVal = checkinWorkcode[0];
                                    } else {
                                        checkinWorkcodeVal = '99999';
                                    }
                                    if (checkinTotal.length == 2) {
                                        var InVAlue = new Date(Date.parse(checkinTotal[0])).toUTCString();
                                        var OutValue = new Date(Date.parse(checkinTotal[1])).toUTCString();

                                        var Inadjusted = new Date(Date.parse(checkinTotalAdjusted[0])).toUTCString();
                                        var outadjusted = new Date(Date.parse(checkinTotalAdjusted[1])).toUTCString();

                                        var inn = Moment(InVAlue).format('DD/MM/YYYY HH:mm');
                                        var out = Moment(OutValue).format('DD/MM/YYYY HH:mm');

                                        // console.log(Inadjusted + 'Inadjusted ===========================');
                                        // console.log(outadjusted + 'outadjusted ============================');

                                        var ms = Moment(out, "DD/MM/YYYY HH:mm:ss").diff(Moment(inn, "DD/MM/YYYY HH:mm:ss"));
                                        var d = Moment.duration(ms);
                                        var totalhours = Math.floor(d.asHours()) + Moment.utc(ms).format(":mm:ss");

                                        var innAdj = Moment(Inadjusted).format('DD/MM/YYYY HH:mm');
                                        var outAdj = Moment(outadjusted).format('DD/MM/YYYY HH:mm');

                                        var msAdjusted = Moment(outAdj, "DD/MM/YYYY HH:mm:ss").diff(Moment(innAdj, "DD/MM/YYYY HH:mm:ss"));
                                        var dAdjusted = Moment.duration(msAdjusted);
                                        var totalhoursAdjusted = Math.floor(dAdjusted.asHours()) + Moment.utc(msAdjusted).format(":mm:ss");
                                        if (totalhoursAdjusted.indexOf("-") > -1) {
                                            totalhoursAdjusted = '00:00:00';
                                        }
                                        checkinTotal.length = 0;
                                        checkinTotalAdjusted.length = 0;
                                        // console.log(checkinWorkcodeVal + '---------------------------------------------------------checkinWorkcodeVal');
                                        checkinWorkcode.length = 0;
                                        // console.log(outAdjusted + 'outAdjusted }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                        Attendance.update({
                                            '_id': employeeAttendance._id,
                                            'checkin.checkTime': checkin.checkTime
                                        }, {
                                            $set: {
                                                "checkin.$.outAdjusted": outAdjusted,
                                            }
                                        }, {
                                            upsert: false,
                                            new: false
                                        }, function(err, data) {
                                            if (err) {
                                                //console.log(err);
                                            } else {
                                                var datec = Moment(outadjusted).format('YYYY-MM-DD');
                                                Dashboard.update({
                                                    weekEnd: {
                                                        $gte: datec
                                                    },
                                                    weekStart: {
                                                        $lte: datec
                                                    },
                                                    'companyId': companyId
                                                }, {
                                                    $set: {
                                                        calfalg: false
                                                    }
                                                }, {
                                                    upsert: false,
                                                    new: false,
                                                    multi: true
                                                }, function(err, data) {
                                                    if (err) {
                                                        // console.log(err);
                                                    }
                                                });
                                            }
                                        })
                                        Attendance.update({
                                            '_id': employeeAttendance._id,
                                            'totalValues.checkinNo': {
                                                $ne: flagForchk
                                            }
                                        }, {
                                            $set: {
                                                lateIn: lateIn,
                                                lateOut: lateOut,
                                            },
                                            $push: {
                                                totalValues: {
                                                    total: totalhours,
                                                    totalAdjusted: totalhoursAdjusted,
                                                    checkinNo: flagForchk,
                                                    workCode: checkinWorkcodeVal
                                                }
                                            }
                                        }, {
                                            upsert: false,
                                            new: false
                                        }, function(err, data) {
                                            if (err) {
                                                // console.log(err);
                                            } else {
                                                var shift = employeeAttendance.shift;
                                                var shiftType = employeeAttendance.shiftType;
                                                if (!shift) {
                                                    Attendance.update({
                                                        '_id': employeeAttendance._id
                                                    }, {
                                                        $set: {
                                                            readFlag: true,
                                                        }
                                                    }, {
                                                        upsert: false,
                                                        new: false
                                                    }, function(err, data) {
                                                        if (err) {
                                                            // console.log(err);
                                                        }
                                                    });
                                                }
                                                totalhoursFn(employeeAttendance._id, companyId, function(result) {
                                                        var totalhours = result[0];
                                                        var totalhoursAdjustedHours = result[1];
                                                        console.log(totalhoursAdjustedHours + 'totalhoursAdjustedHours *******************');
                                                        console.log(totalhours + 'totalWorkingHours *****************************');
                                                        var weeklyOT1 = 0;
                                                        if (ExceptionAssign) {
                                                            // console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                            shift = lastShift;
                                                        } else {
                                                            shift = employeeAttendance.shift;
                                                        }
                                                        console.log("11111111111111111********************");
                                                        if (shiftType == "customShift") {
                                                            console.log("if customShift..");
                                                            // console.log(employeeAttendance);
                                                            // var shift = result.name;
                                                            var shiftStartTime = new Date(Date.parse(employeeAttendance.shiftStart)).toUTCString();
                                                            var shiftFinishTime = new Date(Date.parse(employeeAttendance.shiftFinish)).toUTCString();
                                                            var startLimit = employeeAttendance.limitIn;
                                                            var finishLimit = employeeAttendance.limitOut;
                                                            // var ordinarytime = employeeAttendance.ordinarytime;
                                                            // var overTime1 = employeeAttendance.overTime1;
                                                            // var overTime2 = employeeAttendance.overTime2;
                                                            var ordinarytime = "";
                                                            var overTime1 = "";
                                                            var overTime2 = "";

                                                            var breakTime = employeeAttendance.breakk;
                                                            var breakAfter = employeeAttendance.breakAfter;
                                                            /*var ordinarytime = result.ordinarytime;
                                                            var overTime1 = result.overTime1;
                                                            var breakAfter = result.breakAfter;
                                                            var breakTime = result.breakTime;*/
                                                            var breakIn = employeeAttendance.breakIn;
                                                            var breakAfter2 = employeeAttendance.breakAfter2;
                                                            var breakTime2 = employeeAttendance.breakTime2;
                                                            var breakIn2 = employeeAttendance.breakIn2;

                                                            var OT1 = '00:00:00';
                                                            var OT2 = '00:00:00';
                                                            var allowances = employeeAttendance.allowance;
                                                            global.normalTime = '00:00:00';
                                                            if (breakAfter) {
                                                                if (!breakTime) {
                                                                    breakTime = '00:00:00';
                                                                }
                                                                if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                    if (breakIn == true) {
                                                                        var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                    } else {
                                                                        var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                    }
                                                                    // console.log(afterhours);
                                                                    var hours1 = Math.floor(afterhours / 3600);
                                                                    afterhours %= 3600;
                                                                    var minutes1 = Math.floor(afterhours / 60);
                                                                    var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                    var totalhoursAdjusted = FinalHours;
                                                                    breaktaken = true;
                                                                } else {
                                                                    var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                }
                                                            } else {
                                                                var totalhoursAdjusted = totalhoursAdjustedHours;
                                                            }
                                                            if (breakAfter2) {
                                                                if (!breakTime2) {
                                                                    breakTime2 = '00:00:00';
                                                                }
                                                                // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                    if (breakIn2 == true) {
                                                                        // console.log("iffffff");
                                                                        var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                    } else {
                                                                        // console.log("else iffffff")
                                                                        var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                    }
                                                                    // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                    var hours1 = Math.floor(afterhours / 3600);
                                                                    afterhours %= 3600;
                                                                    var minutes1 = Math.floor(afterhours / 60);
                                                                    var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                    var totalhoursAdjusted = FinalHours;
                                                                    breaktaken2 = true;
                                                                } else {
                                                                    var totalhoursAdjusted = totalhoursAdjusted;
                                                                }
                                                            }
                                                            //console.log(totalhoursAdjusted +'totalhoursAdjusted');
                                                            totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                            //console.log(totalhoursAdjusted + 'after Format');
                                                            if (dataCompany.isovertime) {
                                                                console.log('overtime');
                                                                if (weekly == 0) {
                                                                    if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                        if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                            normalTime = ordinarytime;
                                                                            totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                            var Time1 = totalSeconds;
                                                                            hours = Math.floor(Time1 / 3600);
                                                                            Time1 %= 3600;
                                                                            minutes = Math.floor(Time1 / 60);
                                                                            seconds = Time1 % 60;
                                                                            if (overTime1 != '00:00:00' && overTime1 != '') {
                                                                                if (totalSeconds > toSeconds(overTime1)) {
                                                                                    // console.log('asdas');
                                                                                    OT1 = overTime1;
                                                                                    var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                    hours = Math.floor(remaigntime / 3600);
                                                                                    remaigntime %= 3600;
                                                                                    minutes = Math.floor(remaigntime / 60);
                                                                                    seconds = remaigntime % 60;
                                                                                    OT2 = hours + ':' + minutes + ':' + seconds
                                                                                } else {
                                                                                    // console.log('not');
                                                                                    hours = Math.floor(totalSeconds / 3600);
                                                                                    totalSeconds %= 3600;
                                                                                    minutes = Math.floor(totalSeconds / 60);
                                                                                    seconds = totalSeconds % 60;
                                                                                    OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                    OT2 = '';
                                                                                }
                                                                            } else {
                                                                                hours = Math.floor(totalSeconds / 3600);
                                                                                totalSeconds %= 3600;
                                                                                minutes = Math.floor(totalSeconds / 60);
                                                                                seconds = totalSeconds % 60;
                                                                                OT2 = '00:00:00';
                                                                                OT1 = hours + ':' + minutes + ':' + seconds;
                                                                            }
                                                                        } else {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '';
                                                                            OT2 = '';
                                                                        }
                                                                    } else {
                                                                        if (ordinarytime == '') {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '00:00:00';
                                                                            OT2 = '00:00:00';
                                                                        } else {
                                                                            if (dataCompany.overtimeLevel == "1" && dataCompany.overtimePeriod == 'daily') {
                                                                                normalTime = '00:00:00';
                                                                                OT1 = totalhoursAdjusted;
                                                                                OT2 = '00:00:00';
                                                                            } else {
                                                                                normalTime = '00:00:00';
                                                                                OT1 = '00:00:00';
                                                                                OT2 = totalhoursAdjusted;
                                                                            }
                                                                        }
                                                                        // if(overTime1 != '00:00:00'){
                                                                        //  var totalSeconds1 =   toSeconds(totalhoursAdjusted)
                                                                        //  if(totalSeconds1 >  toSeconds(overTime1)){
                                                                        //    console.log('asdas');
                                                                        //    OT1 = overTime1;
                                                                        //    var remaigntime = totalSeconds1 -  toSeconds(overTime1);
                                                                        //    hours = Math.floor(remaigntime / 3600);
                                                                        //    remaigntime %= 3600;
                                                                        //    minutes = Math.floor(remaigntime / 60);
                                                                        //    seconds = remaigntime % 60;
                                                                        //    OT2 = hours+':'+minutes+':'+seconds;
                                                                        //  }else{
                                                                        //    console.log('not');
                                                                        //    hours = Math.floor(totalSeconds1 / 3600);
                                                                        //    totalSeconds1 %= 3600;
                                                                        //    minutes = Math.floor(totalSeconds1 / 60);
                                                                        //    seconds = totalSeconds1 % 60;
                                                                        //    OT1 = hours+':'+minutes+':'+seconds;
                                                                        //    OT2 = '';
                                                                        //  }
                                                                        // }else{
                                                                        //  normalTime = '00:00:00';
                                                                        //  OT1  = '00:00:00';
                                                                        //  OT2 = totalhoursAdjusted;
                                                                        // }
                                                                    }
                                                                } //daily
                                                                if (weekly == 1) {
                                                                    if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                        console.log(ordinarytime + 'ordinarytime');
                                                                        if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                            normalTime = ordinarytime;
                                                                            totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                            var Time1 = totalSeconds;
                                                                            hours = Math.floor(Time1 / 3600);
                                                                            Time1 %= 3600;
                                                                            minutes = Math.floor(Time1 / 60);
                                                                            seconds = Time1 % 60;
                                                                            if (totalSeconds > toSeconds(overTime1) && overTime1 != '00:00:00') {
                                                                                OT1 = overTime1;
                                                                                var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                hours = Math.floor(remaigntime / 3600);
                                                                                remaigntime %= 3600;
                                                                                minutes = Math.floor(remaigntime / 60);
                                                                                seconds = remaigntime % 60;
                                                                                OT2 = hours + ':' + minutes + ':' + seconds;
                                                                            } else {
                                                                                hours = Math.floor(totalSeconds / 3600);
                                                                                totalSeconds %= 3600;
                                                                                minutes = Math.floor(totalSeconds / 60);
                                                                                seconds = totalSeconds % 60;
                                                                                OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                OT2 = '';
                                                                            }
                                                                        } else {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '';
                                                                            OT2 = '';
                                                                        }
                                                                    } else {
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = '';
                                                                        OT2 = '';
                                                                    }
                                                                } //weekly
                                                            } else {
                                                                normalTime = totalhoursAdjusted;
                                                                OT1 = '00:00:00';
                                                                OT2 = '00:00:00';
                                                            }
                                                            if (OT1) {
                                                                OT1 = changeFormat(OT1);
                                                            }
                                                            if (OT2) {
                                                                OT2 = changeFormat(OT2);
                                                            }
                                                            var allowancesArray = [];
                                                            if (allowances) {
                                                                // console.log(allowances +'assign------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                                for (i = 0; i < allowances.length; i++) {
                                                                    // console.log(allowances[i].name);
                                                                    // console.log(allowances[i].payAfter);
                                                                    var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                    var allowanceName = allowances[i].name;
                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                        // console.log( toSeconds(totalhoursAdjusted));
                                                                        // console.log( toSeconds(payAfter));
                                                                        allowancesArray.push({
                                                                            name: allowanceName,
                                                                            status: true
                                                                        })
                                                                    } else {
                                                                        allowancesArray.push({
                                                                            name: allowanceName,
                                                                            status: false
                                                                        })
                                                                    }
                                                                }
                                                            }

                                                            // console.log(allowancesArray + '66666666666666666666666666666');
                                                            // console.log(totalhours+'Final total Hours');
                                                            // console.log(totalhoursAdjusted + 'totalhoursAdjustedHours11111111111');
                                                            console.log(normalTime + 'normalTime');
                                                            console.log(OT1 + 'ot1');
                                                            console.log(OT2 + 'ot2');
                                                            console.log('==========');
                                                            console.log(breakAfter + 'breakAfter');
                                                            console.log(breaktaken + 'breaktaken');
                                                            normalTimeAdd = normalTime;
                                                            ot1Add = OT1;
                                                            ot2Add = OT2;
                                                            totalRoundedAdd = totalhoursAdjusted;
                                                            if (totalhours) {
                                                                totalhours = changeFormat(totalhours);
                                                            }
                                                            Attendance.update({
                                                                    '_id': employeeAttendance._id
                                                                }, {
                                                                    $set: {
                                                                        normalTime: normalTime,
                                                                        ot1Rule: OT1,
                                                                        ot2Rule: OT2,
                                                                        total: totalhours,
                                                                        totalRounded: totalhoursAdjusted,
                                                                        breaktaken: breaktaken,
                                                                        breaktaken2: breaktaken2,
                                                                        readFlag: true,
                                                                        allowances: allowancesArray
                                                                    }
                                                                }, {
                                                                    upsert: false,
                                                                    new: false
                                                                }, function(err, data) {
                                                                    if (err) {
                                                                        // console.log(err);
                                                                    } else {
                                                                        // console.log("aaaaaaaaaaaaaaaaa.......");
                                                                        if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                            calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                // if(result) {
                                                                                //  res.json(true);
                                                                                // }
                                                                            })
                                                                        }
                                                                        shiftHoursForHolidays(shift, companyId, function(result) {
                                                                            //console.log('---------------*****************************************************');
                                                                            var holidayHoursShift = result;
                                                                            var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD');
                                                                            //var shiftAssign =
                                                                            if (holidayresult.indexOf(dateGive) > -1) {
                                                                                //  console.log(dateGive);
                                                                                // console.log('shiftshiftshift' + shift);
                                                                                if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                    var finalnormalTime = '';
                                                                                    var finalOT1 = '';
                                                                                    var finalOT2 = '';
                                                                                    console.log("2222aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                    if (holidaymultiplier == 'NT') {
                                                                                        // finalnormalTime =  toSeconds(holidayHoursShift);
                                                                                        Attendance.update({
                                                                                            '_id': employeeAttendance._id,
                                                                                            'companyId': companyId
                                                                                        }, {
                                                                                            $set: {
                                                                                                normalTime: totalhoursAdjusted,
                                                                                                ot2Rule: '00:00:00',
                                                                                                ot1Rule: '00:00:00',
                                                                                                readFlag: true,
                                                                                                dayinLieu: holidayHoursShift,
                                                                                                Exception: holidayHoursShift,
                                                                                                exceptioncode: cmppayrollCode,
                                                                                                Exceptiontype: 'Holiday',
                                                                                                ExceptionAssign: 'Holiday',
                                                                                                cutException: '',
                                                                                                addweeklyexc: '',
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, data) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        })
                                                                                    }
                                                                                    if (holidaymultiplier == 'OT1') {
                                                                                        if (ot1Add == '') {
                                                                                            ot1Add = '00:00:00'
                                                                                        }
                                                                                        //console.log('totalRoundedAdd');
                                                                                        // finalOT1 =  toSeconds(holidayHoursShift);
                                                                                        Attendance.update({
                                                                                            '_id': employeeAttendance._id,
                                                                                            'companyId': companyId
                                                                                        }, {
                                                                                            $set: {
                                                                                                ot1Rule: totalhoursAdjusted,
                                                                                                ot2Rule: '00:00:00',
                                                                                                normalTime: '00:00:00',
                                                                                                readFlag: true,
                                                                                                dayinLieu: holidayHoursShift,
                                                                                                Exception: holidayHoursShift,
                                                                                                exceptioncode: cmppayrollCode,
                                                                                                Exceptiontype: 'Holiday',
                                                                                                ExceptionAssign: 'Holiday',
                                                                                                cutException: '',
                                                                                                addweeklyexc: '',
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, data) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        })
                                                                                    }
                                                                                    if (holidaymultiplier == 'OT2') {
                                                                                        if (ot2Add == '') {
                                                                                            ot2Add = '00:00:00'
                                                                                        }
                                                                                        // finalOT2 =  toSeconds(holidayHoursShift);
                                                                                        Attendance.update({
                                                                                            '_id': employeeAttendance._id,
                                                                                            'companyId': companyId
                                                                                        }, {
                                                                                            $set: {
                                                                                                ot2Rule: totalhoursAdjusted,
                                                                                                ot1Rule: '00:00:00',
                                                                                                normalTime: '00:00:00',
                                                                                                readFlag: true,
                                                                                                dayinLieu: holidayHoursShift,
                                                                                                Exception: holidayHoursShift,
                                                                                                exceptioncode: cmppayrollCode,
                                                                                                Exceptiontype: 'Holiday',
                                                                                                ExceptionAssign: 'Holiday',
                                                                                                cutException: '',
                                                                                                addweeklyexc: '',
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, data) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        })
                                                                                    }
                                                                                    //console.log('calculate holiday hours');
                                                                                }
                                                                            }
                                                                        });
                                                                    }
                                                                }) //attendance update
                                                        } else {
                                                            getShiftData(shiftType, shift, companyId, function(result) {
                                                                    var shift = result.name;
                                                                    var shiftStartTime = new Date(Date.parse(result.startTime)).toUTCString();
                                                                    var shiftFinishTime = new Date(Date.parse(result.finishTime)).toUTCString();
                                                                    var startLimit = result.startLimit;
                                                                    var finishLimit = result.finishLimit;
                                                                    var ordinarytime = result.ordinarytime;
                                                                    var overTime1 = result.overTime1;
                                                                    var overTime2 = result.overTime2;
                                                                    var breakTime = result.breakTime;
                                                                    var breakAfter = result.breakAfter;
                                                                    /*var ordinarytime = result.ordinarytime;
                                                                    var overTime1 = result.overTime1;
                                                                    var breakAfter = result.breakAfter;
                                                                    var breakTime = result.breakTime;*/
                                                                    var breakIn = result.breakIn;
                                                                    var breakAfter2 = result.breakAfter2;
                                                                    var breakTime2 = result.breakTime2;
                                                                    var breakIn2 = result.breakIn2;

                                                                    var OT1 = '00:00:00';
                                                                    var OT2 = '00:00:00';
                                                                    var allowances = result.allowance;
                                                                    var timezoneListArray = [];
                                                                    if (result.timeZones) {
                                                                        timezoneListArray = result.timeZones;
                                                                    }
                                                                    if (timezoneListArray.length > 0) {
                                                                        var timeZoneNTArray = [];
                                                                        var timeZoneOt1Array = [];
                                                                        var timeZoneOt2Array = [];
                                                                        result.timeZones.forEach(function(timezone) {
                                                                            if (timezone.payPeriod == "NT") {
                                                                                timeZoneNTArray.push({
                                                                                    zoneName: timezone.zoneName,
                                                                                    finishTime: timezone.finishTime,
                                                                                    startTime: timezone.startTime
                                                                                });
                                                                            } else if (timezone.payPeriod == "OT1") {
                                                                                timeZoneOt1Array.push({
                                                                                    zoneName: timezone.zoneName,
                                                                                    finishTime: timezone.finishTime,
                                                                                    startTime: timezone.startTime
                                                                                });
                                                                            } else if (timezone.payPeriod == "OT2") {
                                                                                timeZoneOt2Array.push({
                                                                                    zoneName: timezone.zoneName,
                                                                                    finishTime: timezone.finishTime,
                                                                                    startTime: timezone.startTime
                                                                                });
                                                                            }
                                                                        });
                                                                        var arrays = {
                                                                            ntArray: timeZoneNTArray,
                                                                            ot1Array: timeZoneOt1Array,
                                                                            ot2Array: timeZoneOt2Array
                                                                        };
                                                                        devideHourIntoNt(employeeAttendance._id, companyId, arrays, function(ntTotal) {
                                                                            console.log("ntTotal.zoneName........." + ntTotal.zoneName);
                                                                            global.normalTime = '00:00:00';
                                                                            if (breakAfter) {
                                                                                if (!breakTime) {
                                                                                    breakTime = '00:00:00';
                                                                                }
                                                                                if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                                    totalhoursAdjustedHours = ntTotal.normalTime;
                                                                                    if (breakIn == true) {
                                                                                        var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                                    } else {
                                                                                        var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                                    }
                                                                                    // console.log(afterhours);
                                                                                    var hours1 = Math.floor(afterhours / 3600);
                                                                                    afterhours %= 3600;
                                                                                    var minutes1 = Math.floor(afterhours / 60);
                                                                                    var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                    var totalhoursAdjusted = FinalHours;
                                                                                    breaktaken = true;
                                                                                } else {
                                                                                    var totalhoursAdjusted = ntTotal.normalTime;
                                                                                }
                                                                            } else {
                                                                                var totalhoursAdjusted = ntTotal.normalTime;
                                                                            }
                                                                            if (breakAfter2) {
                                                                                if (!breakTime2) {
                                                                                    breakTime2 = '00:00:00';
                                                                                }
                                                                                // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                                if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                                    if (breakIn2 == true) {
                                                                                        // console.log("iffffff");
                                                                                        var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                                    } else {
                                                                                        // console.log("else iffffff")
                                                                                        var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                                    }
                                                                                    // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                                    var hours1 = Math.floor(afterhours / 3600);
                                                                                    afterhours %= 3600;
                                                                                    var minutes1 = Math.floor(afterhours / 60);
                                                                                    var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                    var totalhoursAdjusted = FinalHours;
                                                                                    breaktaken2 = true;
                                                                                } else {
                                                                                    var totalhoursAdjusted = totalhoursAdjusted;
                                                                                }
                                                                            }
                                                                            totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = ntTotal.OT1;
                                                                            OT2 = ntTotal.OT2;
                                                                            if (OT1) {
                                                                                OT1 = changeFormat(OT1);
                                                                            }
                                                                            if (OT2) {
                                                                                OT2 = changeFormat(OT2);
                                                                            }
                                                                            var allowancesArray = [];
                                                                            if (allowances) {
                                                                                for (i = 0; i < allowances.length; i++) {
                                                                                    var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                                    var allowanceName = allowances[i].name;
                                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                                        allowancesArray.push({
                                                                                            name: allowanceName,
                                                                                            status: true
                                                                                        })
                                                                                    } else {
                                                                                        allowancesArray.push({
                                                                                            name: allowanceName,
                                                                                            status: false
                                                                                        })
                                                                                    }
                                                                                }
                                                                            }
                                                                            normalTimeAdd = normalTime;
                                                                            ot1Add = OT1;
                                                                            ot2Add = OT2;
                                                                            var NtOThours = toSeconds(OT2) + toSeconds(OT1) + toSeconds(normalTime);
                                                                            var hours1 = Math.floor(NtOThours / 3600);
                                                                            NtOThours %= 3600;
                                                                            var minutes1 = Math.floor(NtOThours / 60);
                                                                            var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                            totalRoundedAdd = FinalHours;
                                                                            if (totalhours) {
                                                                                totalhours = changeFormat(totalhours);
                                                                            }
                                                                            Attendance.update({
                                                                                    '_id': employeeAttendance._id
                                                                                }, {
                                                                                    $set: {
                                                                                        normalTime: normalTime,
                                                                                        ot1Rule: OT1,
                                                                                        ot2Rule: OT2,
                                                                                        total: totalhours,
                                                                                        totalRounded: FinalHours,
                                                                                        breaktaken: breaktaken,
                                                                                        breaktaken2: breaktaken2,
                                                                                        readFlag: true,
                                                                                        allowances: allowancesArray
                                                                                    }
                                                                                }, {
                                                                                    upsert: false,
                                                                                    new: false
                                                                                }, function(err, data) {
                                                                                    if (err) {
                                                                                        // console.log(err);
                                                                                    } else {
                                                                                        if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                                            calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                                // if(result) {
                                                                                                //  res.json(true);
                                                                                                // }
                                                                                            })
                                                                                        }
                                                                                        shiftHoursForHolidays(shift, companyId, function(result) {
                                                                                            var holidayHoursShift = result;
                                                                                            var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD hh:mm:ss');
                                                                                            if (holidayresult.indexOf(dateGive) > -1) {
                                                                                                if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                                    var finalnormalTime = '';
                                                                                                    var finalOT1 = '';
                                                                                                    var finalOT2 = '';
                                                                                                    console.log("a3333aaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                                    if (holidaymultiplier == 'NT') {
                                                                                                        // finalnormalTime =  toSeconds(holidayHoursShift);
                                                                                                        Attendance.update({
                                                                                                            '_id': employeeAttendance._id,
                                                                                                            'companyId': companyId
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                normalTime: totalhoursAdjusted,
                                                                                                                ot2Rule: '00:00:00',
                                                                                                                ot1Rule: '00:00:00',
                                                                                                                readFlag: true,
                                                                                                                dayinLieu: holidayHoursShift,
                                                                                                                Exception: holidayHoursShift,
                                                                                                                exceptioncode: cmppayrollCode,
                                                                                                                Exceptiontype: 'Holiday',
                                                                                                                ExceptionAssign: 'Holiday',
                                                                                                                cutException: '',
                                                                                                                addweeklyexc: '',
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, data) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        })
                                                                                                    }
                                                                                                    if (holidaymultiplier == 'OT1') {
                                                                                                        if (ot1Add == '') {
                                                                                                            ot1Add = '00:00:00'
                                                                                                        }
                                                                                                        //console.log('holidayHoursShift');
                                                                                                        // finalOT1 =  toSeconds(holidayHoursShift);
                                                                                                        Attendance.update({
                                                                                                            '_id': employeeAttendance._id,
                                                                                                            'companyId': companyId
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                ot1Rule: totalhoursAdjusted,
                                                                                                                ot2Rule: '00:00:00',
                                                                                                                normalTime: '00:00:00',
                                                                                                                readFlag: true,
                                                                                                                dayinLieu: holidayHoursShift,
                                                                                                                Exception: holidayHoursShift,
                                                                                                                exceptioncode: cmppayrollCode,
                                                                                                                Exceptiontype: 'Holiday',
                                                                                                                ExceptionAssign: 'Holiday',
                                                                                                                cutException: '',
                                                                                                                addweeklyexc: '',
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, data) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        })
                                                                                                    }
                                                                                                    if (holidaymultiplier == 'OT2') {
                                                                                                        if (ot2Add == '') {
                                                                                                            ot2Add = '00:00:00'
                                                                                                        }
                                                                                                        // finalOT2 =  toSeconds(holidayHoursShift);
                                                                                                        Attendance.update({
                                                                                                            '_id': employeeAttendance._id,
                                                                                                            'companyId': companyId
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                ot2Rule: totalhoursAdjusted,
                                                                                                                ot1Rule: '00:00:00',
                                                                                                                normalTime: '00:00:00',
                                                                                                                readFlag: true,
                                                                                                                dayinLieu: holidayHoursShift,
                                                                                                                Exception: holidayHoursShift,
                                                                                                                exceptioncode: cmppayrollCode,
                                                                                                                Exceptiontype: 'Holiday',
                                                                                                                ExceptionAssign: 'Holiday',
                                                                                                                cutException: '',
                                                                                                                addweeklyexc: '',
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, data) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        })
                                                                                                    }
                                                                                                    //console.log('calculate holiday hours');
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                }) //attendance update
                                                                        });
                                                                    } else {
                                                                        global.normalTime = '00:00:00';
                                                                        if (breakAfter) {
                                                                            if (!breakTime) {
                                                                                breakTime = '00:00:00';
                                                                            }
                                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                                if (breakIn == true) {
                                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                                } else {
                                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                                }
                                                                                // console.log(afterhours);
                                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                                afterhours %= 3600;
                                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                var totalhoursAdjusted = FinalHours;
                                                                                breaktaken = true;
                                                                            } else {
                                                                                var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                            }
                                                                        } else {
                                                                            var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                        }
                                                                        if (breakAfter2) {
                                                                            if (!breakTime2) {
                                                                                breakTime2 = '00:00:00';
                                                                            }
                                                                            // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                                if (breakIn2 == true) {
                                                                                    // console.log("iffffff");
                                                                                    var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                                } else {
                                                                                    // console.log("else iffffff")
                                                                                    var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                                }
                                                                                // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                                afterhours %= 3600;
                                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                var totalhoursAdjusted = FinalHours;
                                                                                breaktaken2 = true;
                                                                            } else {
                                                                                var totalhoursAdjusted = totalhoursAdjusted;
                                                                            }
                                                                        }
                                                                        //console.log(totalhoursAdjusted +'totalhoursAdjusted');
                                                                        totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                                        //console.log(totalhoursAdjusted + 'after Format');
                                                                        if (dataCompany.isovertime) {
                                                                            console.log('overtime');
                                                                            if (weekly == 0) {
                                                                                if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                                        normalTime = ordinarytime;
                                                                                        totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                                        var Time1 = totalSeconds;
                                                                                        hours = Math.floor(Time1 / 3600);
                                                                                        Time1 %= 3600;
                                                                                        minutes = Math.floor(Time1 / 60);
                                                                                        seconds = Time1 % 60;
                                                                                        if (overTime1 != '00:00:00' && overTime1 != '') {
                                                                                            if (totalSeconds > toSeconds(overTime1)) {
                                                                                                // console.log('asdas');
                                                                                                OT1 = overTime1;
                                                                                                var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                                hours = Math.floor(remaigntime / 3600);
                                                                                                remaigntime %= 3600;
                                                                                                minutes = Math.floor(remaigntime / 60);
                                                                                                seconds = remaigntime % 60;
                                                                                                OT2 = hours + ':' + minutes + ':' + seconds
                                                                                            } else {
                                                                                                // console.log('not');
                                                                                                hours = Math.floor(totalSeconds / 3600);
                                                                                                totalSeconds %= 3600;
                                                                                                minutes = Math.floor(totalSeconds / 60);
                                                                                                seconds = totalSeconds % 60;
                                                                                                OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                                OT2 = '';
                                                                                            }
                                                                                        } else {
                                                                                            hours = Math.floor(totalSeconds / 3600);
                                                                                            totalSeconds %= 3600;
                                                                                            minutes = Math.floor(totalSeconds / 60);
                                                                                            seconds = totalSeconds % 60;
                                                                                            OT2 = '00:00:00';
                                                                                            OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                        }
                                                                                    } else {
                                                                                        normalTime = totalhoursAdjusted;
                                                                                        OT1 = '';
                                                                                        OT2 = '';
                                                                                    }
                                                                                } else {
                                                                                    if (ordinarytime == '') {
                                                                                        normalTime = totalhoursAdjusted;
                                                                                        OT1 = '00:00:00';
                                                                                        OT2 = '00:00:00';
                                                                                    } else {
                                                                                        if (dataCompany.overtimeLevel == "1" && dataCompany.overtimePeriod == 'daily') {
                                                                                            normalTime = '00:00:00';
                                                                                            OT1 = totalhoursAdjusted;
                                                                                            OT2 = '00:00:00';
                                                                                        } else {
                                                                                            normalTime = '00:00:00';
                                                                                            OT1 = '00:00:00';
                                                                                            OT2 = totalhoursAdjusted;
                                                                                        }
                                                                                    }
                                                                                    // if(overTime1 != '00:00:00'){
                                                                                    //  var totalSeconds1 =   toSeconds(totalhoursAdjusted)
                                                                                    //  if(totalSeconds1 >  toSeconds(overTime1)){
                                                                                    //    console.log('asdas');
                                                                                    //    OT1 = overTime1;
                                                                                    //    var remaigntime = totalSeconds1 -  toSeconds(overTime1);
                                                                                    //    hours = Math.floor(remaigntime / 3600);
                                                                                    //    remaigntime %= 3600;
                                                                                    //    minutes = Math.floor(remaigntime / 60);
                                                                                    //    seconds = remaigntime % 60;
                                                                                    //    OT2 = hours+':'+minutes+':'+seconds;
                                                                                    //  }else{
                                                                                    //    console.log('not');
                                                                                    //    hours = Math.floor(totalSeconds1 / 3600);
                                                                                    //    totalSeconds1 %= 3600;
                                                                                    //    minutes = Math.floor(totalSeconds1 / 60);
                                                                                    //    seconds = totalSeconds1 % 60;
                                                                                    //    OT1 = hours+':'+minutes+':'+seconds;
                                                                                    //    OT2 = '';
                                                                                    //  }
                                                                                    // }else{
                                                                                    //  normalTime = '00:00:00';
                                                                                    //  OT1  = '00:00:00';
                                                                                    //  OT2 = totalhoursAdjusted;
                                                                                    // }
                                                                                }
                                                                            } //daily
                                                                            if (weekly == 1) {
                                                                                if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                                    console.log(ordinarytime + 'ordinarytime');
                                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                                        normalTime = ordinarytime;
                                                                                        totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                                        var Time1 = totalSeconds;
                                                                                        hours = Math.floor(Time1 / 3600);
                                                                                        Time1 %= 3600;
                                                                                        minutes = Math.floor(Time1 / 60);
                                                                                        seconds = Time1 % 60;
                                                                                        if (totalSeconds > toSeconds(overTime1) && overTime1 != '00:00:00') {
                                                                                            OT1 = overTime1;
                                                                                            var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                            hours = Math.floor(remaigntime / 3600);
                                                                                            remaigntime %= 3600;
                                                                                            minutes = Math.floor(remaigntime / 60);
                                                                                            seconds = remaigntime % 60;
                                                                                            OT2 = hours + ':' + minutes + ':' + seconds;
                                                                                        } else {
                                                                                            hours = Math.floor(totalSeconds / 3600);
                                                                                            totalSeconds %= 3600;
                                                                                            minutes = Math.floor(totalSeconds / 60);
                                                                                            seconds = totalSeconds % 60;
                                                                                            OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                            OT2 = '';
                                                                                        }
                                                                                    } else {
                                                                                        normalTime = totalhoursAdjusted;
                                                                                        OT1 = '';
                                                                                        OT2 = '';
                                                                                    }
                                                                                } else {
                                                                                    normalTime = totalhoursAdjusted;
                                                                                    OT1 = '';
                                                                                    OT2 = '';
                                                                                }
                                                                            } //weekly
                                                                        } else {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '00:00:00';
                                                                            OT2 = '00:00:00';
                                                                        }
                                                                        if (OT1) {
                                                                            OT1 = changeFormat(OT1);
                                                                        }
                                                                        if (OT2) {
                                                                            OT2 = changeFormat(OT2);
                                                                        }
                                                                        var allowancesArray = [];
                                                                        if (allowances) {
                                                                            // console.log(allowances +'assign------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                                            for (i = 0; i < allowances.length; i++) {
                                                                                // console.log(allowances[i].name);
                                                                                // console.log(allowances[i].payAfter);
                                                                                var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                                var allowanceName = allowances[i].name;
                                                                                if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                                    // console.log( toSeconds(totalhoursAdjusted));
                                                                                    // console.log( toSeconds(payAfter));
                                                                                    allowancesArray.push({
                                                                                        name: allowanceName,
                                                                                        status: true
                                                                                    })
                                                                                } else {
                                                                                    allowancesArray.push({
                                                                                        name: allowanceName,
                                                                                        status: false
                                                                                    })
                                                                                }
                                                                            }
                                                                        }

                                                                        // console.log(allowancesArray + '66666666666666666666666666666');
                                                                        // console.log(totalhours+'Final total Hours');
                                                                        // console.log(totalhoursAdjusted + 'totalhoursAdjustedHours11111111111');
                                                                        /*console.log(normalTime+'normalTime');
                                                                        console.log(OT1+'ot1');
                                                                        console.log(OT2+'ot2');
                                                                        console.log('==========');
                                                                        console.log(breakAfter +'breakAfter');
                                                                        console.log(breaktaken +'breaktaken');*/
                                                                        normalTimeAdd = normalTime;
                                                                        ot1Add = OT1;
                                                                        ot2Add = OT2;
                                                                        totalRoundedAdd = totalhoursAdjusted;
                                                                        if (totalhours) {
                                                                            totalhours = changeFormat(totalhours);
                                                                        }
                                                                        Attendance.update({
                                                                                '_id': employeeAttendance._id
                                                                            }, {
                                                                                $set: {
                                                                                    normalTime: normalTime,
                                                                                    ot1Rule: OT1,
                                                                                    ot2Rule: OT2,
                                                                                    total: totalhours,
                                                                                    totalRounded: totalhoursAdjusted,
                                                                                    breaktaken: breaktaken,
                                                                                    breaktaken2: breaktaken2,
                                                                                    readFlag: true,
                                                                                    allowances: allowancesArray
                                                                                }
                                                                            }, {
                                                                                upsert: false,
                                                                                new: false
                                                                            }, function(err, data) {
                                                                                if (err) {
                                                                                    // console.log(err);
                                                                                } else {
                                                                                    // console.log("aaaaaaaaaaaaaaaaa.......");
                                                                                    if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                                        calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                            // if(result) {
                                                                                            //  res.json(true);
                                                                                            // }
                                                                                        })
                                                                                    }
                                                                                    shiftHoursForHolidays(shift, companyId, function(result) {
                                                                                        //console.log('---------------*****************************************************');
                                                                                        var holidayHoursShift = result;
                                                                                        var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD');
                                                                                        //var shiftAssign =
                                                                                        if (holidayresult.indexOf(dateGive) > -1) {
                                                                                            //   console.log(dateGive);
                                                                                            // console.log('shiftshiftshift' + shift);
                                                                                            if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                                var finalnormalTime = '';
                                                                                                var finalOT1 = '';
                                                                                                var finalOT2 = '';
                                                                                                console.log("44444aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                                if (holidaymultiplier == 'NT') {
                                                                                                    // finalnormalTime =  toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            normalTime: totalhoursAdjusted,
                                                                                                            ot2Rule: '00:00:00',
                                                                                                            ot1Rule: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                if (holidaymultiplier == 'OT1') {
                                                                                                    if (ot1Add == '') {
                                                                                                        ot1Add = '00:00:00'
                                                                                                    }
                                                                                                    //console.log('holidayHoursShift');
                                                                                                    // finalOT1 =  toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            ot1Rule: totalhoursAdjusted,
                                                                                                            ot2Rule: '00:00:00',
                                                                                                            normalTime: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                if (holidaymultiplier == 'OT2') {
                                                                                                    if (ot2Add == '') {
                                                                                                        ot2Add = '00:00:00'
                                                                                                    }
                                                                                                    // finalOT2 =  toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            ot2Rule: totalhoursAdjusted,
                                                                                                            ot1Rule: '00:00:00',
                                                                                                            normalTime: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            callback(1);
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                //console.log('calculate holiday hours');
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                }
                                                                            }) //attendance update
                                                                    }
                                                                }) // shiftData
                                                        }
                                                    }) // totalhours
                                            }
                                        })
                                    }
                                }
                            }
                            n++;
                        }
                    } else {
                        console.log('totalH+++++++++++++++++++++++++++++++++++++++++++'); //in-out
                        if (adminDetails.userType == "mainAdmin" || adminDetails.userType == "subAdmin") {
                            if (checkType == 1 || checkType == 2 || checkType == 'i' || checkType == 'I') {
                                if (workCode) {
                                    checkinWorkcode.push(workCode);
                                }
                                console.log('limitIn-------------' + limitIn);
                                var interval = parseInt(inRounding);
                                var minuteAfter = parseInt(inroundupafter);
                                var strtInt = 0;
                                var finalValue = 0;
                                var theArray = [0];
                                var remaign = 0;
                                var seconds = 0;
                                var finishSeconds = 0;
                                // console.log(interval +'interval');
                                // console.log(minuteAfter + 'minuteAfter');
                                while (strtInt < 60) {
                                    strtInt = strtInt + interval;
                                    // console.log('minute'+minute);
                                    remaign = minute % interval;
                                    theArray.push(strtInt);
                                    // console.log(theArray);
                                    // console.log(remaign);
                                }
                                var closestNumber = closest(parseInt(minute), theArray, minuteAfter);
                                if (n == 1) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(startHour + ':' + startMinute + ':00')) {
                                        lateIn = '1';
                                    } else {
                                        lateIn = '0';
                                    }
                                }
                                if (limitIn == true && n == 1) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(startHour + ':' + startMinute + ':00')) {
                                        var finalV = toSeconds(startHour + ':' + startMinute + ':00');
                                        seconds = finalV;
                                    }
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(startHour + ':' + startMinute + ':00')) {

                                        finalValue = closestNumber;
                                    } else {
                                        finalValue = parseInt(minute);
                                    }
                                } else {
                                    if (limitIn == true) {
                                        if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                            var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                            finishSeconds = finalV;
                                        } else if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(startHour + ':' + startMinute + ':00')) {
                                            var finalV = toSeconds(startHour + ':' + startMinute + ':00');
                                            seconds = finalV;
                                        } else {
                                            finalValue = closestNumber;
                                        }
                                    } else {
                                        finalValue = closestNumber;
                                    }
                                }
                                if (finishSeconds) {
                                    var Hourset = Moment.utc(checkTime).set('hours', finishHour);
                                    var date = Moment.utc(Hourset).set('minute', finishMinute);
                                } else if (seconds) {
                                    var Hourset = Moment.utc(checkTime).set('hours', startHour);
                                    var date = Moment.utc(Hourset).set('minute', startMinute);
                                } else {
                                    var date = Moment.utc(checkTime).set('minute', finalValue);
                                }
                                //console.log(date +']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]');
                                var inAdjusted = new Date(Date.parse(date)).toUTCString();
                                if (n == 1) {
                                    nextOrder.push(0);
                                    var In = checkin.checkTime;
                                    checkinTotal.push(In);
                                    checkinTotalAdjusted.push(inAdjusted);
                                    //console.log('In array');
                                } else {
                                    if (isInArray(parseInt(1), nextOrder)) {
                                        nextOrder.length = 0;
                                        nextOrder.push(0);
                                        var In = checkin.checkTime;
                                        checkinTotal.push(In);
                                        checkinTotalAdjusted.push(inAdjusted);
                                        //console.log('In');
                                    } else {
                                        checkinTotal.length = 0;
                                        checkinTotalAdjusted.length = 0;
                                        //console.log(checkinWorkcodeVal + '---------------------------------------------------------checkinWorkcodeVal');
                                        checkinWorkcode.length = 0;
                                    }
                                }
                                // console.log(checkTime + 'checkTime +++++++++++++++++++++');
                                // console.log(inAdjusted + 'inAdjusted +++++++++++++++++++');
                                Attendance.update({
                                    '_id': employeeAttendance._id,
                                    'checkin.checkTime': checkin.checkTime
                                }, {
                                    $set: {
                                        "checkin.$.inAdjusted": inAdjusted,
                                    }
                                }, {
                                    upsert: false,
                                    new: false
                                }, function(err, data) {
                                    if (err) {
                                        console.log(err);
                                    } else {
                                        // console.log("true");
                                    }
                                })
                            } else {
                                // console.log('sdaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa');
                                if (workCode) {
                                    checkinWorkcode.push(workCode)
                                }
                                // console.log('sdfffffffffffffffffffffffffffffffffffffff');
                                var interval = parseInt(outRounding);
                                var minuteAfter = parseInt(outroundupafter);
                                var strtInt = 0;
                                var finalValue = 0;
                                var theArray = [0];
                                var remaign = 0;
                                while (strtInt < 60) {
                                    strtInt = strtInt + interval;
                                    remaign = minute % interval;
                                    theArray.push(strtInt);
                                }
                                var closestNumber = closest(parseInt(minute), theArray, minuteAfter);
                                if (n == (employeeAttendance.checkin.length)) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                        lateOut = '1';
                                    } else {
                                        lateOut = '0';
                                    }
                                }
                                // console.log(n+'----'+employeeAttendance.checkin.length+'--------------------------------------------------');
                                if (limitOut == true && n == (employeeAttendance.checkin.length)) {
                                    // console.log('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');
                                    if (shiftStartDate == shiftFinishDate) {
                                        if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                            // console.log('lesss');
                                            finalValue = closestNumber;
                                        } else {
                                            var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                            seconds = finalV;
                                        }
                                    } else {
                                        if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00') && checkinTimeDate == shiftFinishDate) {
                                            var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                            // console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                            seconds = finalV;
                                        } else {
                                            finalValue = closestNumber;
                                        }
                                    }
                                } else {
                                    if (limitOut == true && n == (employeeAttendance.checkin.length)) {
                                        // console.log('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');
                                        if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                            outAdjusted = checkTime;
                                            // console.log('finish Hours');
                                        } else {
                                            var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                            // console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                            seconds = finalV;
                                        }
                                    } else {
                                        if (limitOut == true) {
                                            if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                                var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                                //console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                                seconds = finalV;
                                            } else {
                                                finalValue = closestNumber;
                                            }
                                        } else {
                                            finalValue = closestNumber;
                                        }
                                    }
                                }
                                if (seconds) {
                                    var Hourset = Moment.utc(checkTime).set('hours', finishHour);
                                    var date = Moment.utc(Hourset).set('minute', finishMinute);
                                } else {
                                    var date = Moment.utc(checkTime).set('minute', finalValue);
                                }
                                var outAdjusted = new Date(Date.parse(date)).toUTCString();
                                // console.log(outAdjusted + 'outAdjustedoutAdjustedoutAdjusted');
                                // console.log(nextOrder + 'nextOrder');
                                if (isInArray(parseInt(0), nextOrder)) {
                                    nextOrder.length = 0;
                                    nextOrder.push(1);
                                    var Out = checkin.checkTime;
                                    checkinTotal.push(Out);
                                    checkinTotalAdjusted.push(outAdjusted);
                                    if (checkinWorkcode.length > 0) {
                                        checkinWorkcodeVal = checkinWorkcode[0];
                                    } else {
                                        checkinWorkcodeVal = '99999';
                                    }
                                    if (checkinTotal.length == 2) {
                                        var InVAlue = new Date(Date.parse(checkinTotal[0])).toUTCString();
                                        var OutValue = new Date(Date.parse(checkinTotal[1])).toUTCString();

                                        var Inadjusted = new Date(Date.parse(checkinTotalAdjusted[0])).toUTCString();
                                        var outadjusted = new Date(Date.parse(checkinTotalAdjusted[1])).toUTCString();

                                        var inn = Moment(InVAlue).format('DD/MM/YYYY HH:mm');
                                        var out = Moment(OutValue).format('DD/MM/YYYY HH:mm');

                                        //   console.log(Inadjusted + 'Inadjusted ===========================');
                                        // console.log(outadjusted + 'outadjusted ============================');

                                        var ms = Moment(out, "DD/MM/YYYY HH:mm:ss").diff(Moment(inn, "DD/MM/YYYY HH:mm:ss"));
                                        var d = Moment.duration(ms);
                                        var totalhours = Math.floor(d.asHours()) + Moment.utc(ms).format(":mm:ss");

                                        var innAdj = Moment(Inadjusted).format('DD/MM/YYYY HH:mm');
                                        var outAdj = Moment(outadjusted).format('DD/MM/YYYY HH:mm');

                                        var msAdjusted = Moment(outAdj, "DD/MM/YYYY HH:mm:ss").diff(Moment(innAdj, "DD/MM/YYYY HH:mm:ss"));
                                        var dAdjusted = Moment.duration(msAdjusted);
                                        var totalhoursAdjusted = Math.floor(dAdjusted.asHours()) + Moment.utc(msAdjusted).format(":mm:ss");
                                        if (totalhoursAdjusted.indexOf("-") > -1) {
                                            totalhoursAdjusted = '00:00:00';
                                        }
                                        checkinTotal.length = 0;
                                        checkinTotalAdjusted.length = 0;
                                        //console.log(checkinWorkcodeVal + '---------------------------------------------------------checkinWorkcodeVal');
                                        checkinWorkcode.length = 0;
                                        //console.log(outAdjusted + 'outAdjusted }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                        Attendance.update({
                                            '_id': employeeAttendance._id,
                                            'checkin.checkTime': checkin.checkTime
                                        }, {
                                            $set: {
                                                "checkin.$.outAdjusted": outAdjusted,
                                            }
                                        }, {
                                            upsert: false,
                                            new: false
                                        }, function(err, data) {
                                            if (err) {
                                                //console.log(err);
                                            } else {
                                                var datec = Moment(outadjusted).format('YYYY-MM-DD');
                                                Dashboard.update({
                                                    weekEnd: {
                                                        $gte: datec
                                                    },
                                                    weekStart: {
                                                        $lte: datec
                                                    },
                                                    'companyId': companyId
                                                }, {
                                                    $set: {
                                                        calfalg: false
                                                    }
                                                }, {
                                                    upsert: false,
                                                    new: false,
                                                    multi: true
                                                }, function(err, data) {
                                                    if (err) {
                                                        // console.log(err);
                                                    }
                                                });
                                            }
                                        })
                                        Attendance.update({
                                            '_id': employeeAttendance._id,
                                            'totalValues.checkinNo': {
                                                $ne: flagForchk
                                            }
                                        }, {
                                            $set: {
                                                lateIn: lateIn,
                                                lateOut: lateOut,
                                            },
                                            $push: {
                                                totalValues: {
                                                    total: totalhours,
                                                    totalAdjusted: totalhoursAdjusted,
                                                    checkinNo: flagForchk,
                                                    workCode: checkinWorkcodeVal
                                                }
                                            }
                                        }, {
                                            upsert: false,
                                            new: false
                                        }, function(err, data) {
                                            if (err) {
                                                // console.log(err);
                                            } else {
                                                var shift = employeeAttendance.shift;
                                                var shiftType = employeeAttendance.shiftType;
                                                if (!shift) {
                                                    Attendance.update({
                                                        '_id': employeeAttendance._id
                                                    }, {
                                                        $set: {
                                                            readFlag: true,
                                                        }
                                                    }, {
                                                        upsert: false,
                                                        new: false
                                                    }, function(err, data) {
                                                        if (err) {
                                                            // console.log(err);
                                                        }
                                                    });
                                                }
                                                totalhoursFn(employeeAttendance._id, companyId, function(result) {
                                                        var totalhours = result[0];
                                                        var totalhoursAdjustedHours = result[1];
                                                        // console.log(totalhoursAdjustedHours + 'totalhoursAdjustedHours *******************');
                                                        // console.log(totalhours+'totalWorkingHours *****************************');
                                                        var weeklyOT1 = 0;
                                                        if (ExceptionAssign) {
                                                            // console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                            shift = lastShift;
                                                        } else {
                                                            shift = employeeAttendance.shift;
                                                        }
                                                        if (shiftType == "customShift") {
                                                            console.log("if customShift..");
                                                            // console.log(employeeAttendance);
                                                            // var shift = result.name;
                                                            var shiftStartTime = new Date(Date.parse(employeeAttendance.shiftStart)).toUTCString();
                                                            var shiftFinishTime = new Date(Date.parse(employeeAttendance.shiftFinish)).toUTCString();
                                                            var startLimit = employeeAttendance.limitIn;
                                                            var finishLimit = employeeAttendance.limitOut;
                                                            // var ordinarytime = employeeAttendance.ordinarytime;
                                                            // var overTime1 = employeeAttendance.overTime1;
                                                            // var overTime2 = employeeAttendance.overTime2;
                                                            var ordinarytime = "";
                                                            var overTime1 = "";
                                                            var overTime2 = "";

                                                            var breakTime = employeeAttendance.breakk;
                                                            var breakAfter = employeeAttendance.breakAfter;
                                                            /*var ordinarytime = result.ordinarytime;
                                                            var overTime1 = result.overTime1;
                                                            var breakAfter = result.breakAfter;
                                                            var breakTime = result.breakTime;*/
                                                            var breakIn = employeeAttendance.breakIn;
                                                            var breakAfter2 = employeeAttendance.breakAfter2;
                                                            var breakTime2 = employeeAttendance.breakTime2;
                                                            var breakIn2 = employeeAttendance.breakIn2;

                                                            var OT1 = '00:00:00';
                                                            var OT2 = '00:00:00';
                                                            var allowances = employeeAttendance.allowance;
                                                            global.normalTime = '00:00:00';
                                                            if (breakAfter) {
                                                                if (!breakTime) {
                                                                    breakTime = '00:00:00';
                                                                }
                                                                if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                    if (breakIn == true) {
                                                                        var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                    } else {
                                                                        var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                    }
                                                                    // console.log(afterhours);
                                                                    var hours1 = Math.floor(afterhours / 3600);
                                                                    afterhours %= 3600;
                                                                    var minutes1 = Math.floor(afterhours / 60);
                                                                    var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                    var totalhoursAdjusted = FinalHours;
                                                                    breaktaken = true;
                                                                } else {
                                                                    var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                }
                                                            } else {
                                                                var totalhoursAdjusted = totalhoursAdjustedHours;
                                                            }
                                                            if (breakAfter2) {
                                                                if (!breakTime2) {
                                                                    breakTime2 = '00:00:00';
                                                                }
                                                                // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                    if (breakIn2 == true) {
                                                                        // console.log("iffffff");
                                                                        var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                    } else {
                                                                        // console.log("else iffffff")
                                                                        var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                    }
                                                                    // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                    var hours1 = Math.floor(afterhours / 3600);
                                                                    afterhours %= 3600;
                                                                    var minutes1 = Math.floor(afterhours / 60);
                                                                    var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                    var totalhoursAdjusted = FinalHours;
                                                                    breaktaken2 = true;
                                                                } else {
                                                                    var totalhoursAdjusted = totalhoursAdjusted;
                                                                }
                                                            }
                                                            //console.log(totalhoursAdjusted +'totalhoursAdjusted');
                                                            totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                            //console.log(totalhoursAdjusted + 'after Format');
                                                            if (dataCompany.isovertime) {
                                                                console.log('overtime');
                                                                if (weekly == 0) {
                                                                    if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                        if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                            normalTime = ordinarytime;
                                                                            totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                            var Time1 = totalSeconds;
                                                                            hours = Math.floor(Time1 / 3600);
                                                                            Time1 %= 3600;
                                                                            minutes = Math.floor(Time1 / 60);
                                                                            seconds = Time1 % 60;
                                                                            if (overTime1 != '00:00:00' && overTime1 != '') {
                                                                                if (totalSeconds > toSeconds(overTime1)) {
                                                                                    console.log('asdas');
                                                                                    OT1 = overTime1;
                                                                                    var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                    hours = Math.floor(remaigntime / 3600);
                                                                                    remaigntime %= 3600;
                                                                                    minutes = Math.floor(remaigntime / 60);
                                                                                    seconds = remaigntime % 60;
                                                                                    OT2 = hours + ':' + minutes + ':' + seconds
                                                                                } else {
                                                                                    console.log('not');
                                                                                    hours = Math.floor(totalSeconds / 3600);
                                                                                    totalSeconds %= 3600;
                                                                                    minutes = Math.floor(totalSeconds / 60);
                                                                                    seconds = totalSeconds % 60;
                                                                                    OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                    OT2 = '';
                                                                                }
                                                                            } else {
                                                                                hours = Math.floor(totalSeconds / 3600);
                                                                                totalSeconds %= 3600;
                                                                                minutes = Math.floor(totalSeconds / 60);
                                                                                seconds = totalSeconds % 60;
                                                                                OT2 = '00:00:00';
                                                                                OT1 = hours + ':' + minutes + ':' + seconds;
                                                                            }
                                                                        } else {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '';
                                                                            OT2 = '';
                                                                        }
                                                                    } else {
                                                                        if (ordinarytime == '') {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '00:00:00';
                                                                            OT2 = '00:00:00';
                                                                        } else {
                                                                            if (dataCompany.overtimeLevel == "1" && dataCompany.overtimePeriod == 'daily') {
                                                                                normalTime = '00:00:00';
                                                                                OT1 = totalhoursAdjusted;
                                                                                OT2 = '00:00:00';
                                                                            } else {
                                                                                normalTime = '00:00:00';
                                                                                OT1 = '00:00:00';
                                                                                OT2 = totalhoursAdjusted;
                                                                            }
                                                                        }
                                                                        // if(overTime1 != '00:00:00'){
                                                                        //  var totalSeconds1 =  toSeconds(totalhoursAdjusted)
                                                                        //  if(totalSeconds1 > toSeconds(overTime1)){
                                                                        //    console.log('asdas');
                                                                        //    OT1 = overTime1;
                                                                        //    var remaigntime = totalSeconds1 - toSeconds(overTime1);
                                                                        //    hours = Math.floor(remaigntime / 3600);
                                                                        //    remaigntime %= 3600;
                                                                        //    minutes = Math.floor(remaigntime / 60);
                                                                        //    seconds = remaigntime % 60;
                                                                        //    OT2 = hours+':'+minutes+':'+seconds;
                                                                        //  }else{
                                                                        //    console.log('not');
                                                                        //    hours = Math.floor(totalSeconds1 / 3600);
                                                                        //    totalSeconds1 %= 3600;
                                                                        //    minutes = Math.floor(totalSeconds1 / 60);
                                                                        //    seconds = totalSeconds1 % 60;
                                                                        //    OT1 = hours+':'+minutes+':'+seconds;
                                                                        //    OT2 = '';
                                                                        //  }
                                                                        // }else{
                                                                        //  normalTime = '00:00:00';
                                                                        //  OT1  = '00:00:00';
                                                                        //  OT2 = totalhoursAdjusted;
                                                                        // }
                                                                    }
                                                                } //daily
                                                                if (weekly == 1) {
                                                                    if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                        console.log(ordinarytime + 'ordinarytime');
                                                                        if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                            normalTime = ordinarytime;
                                                                            totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                            var Time1 = totalSeconds;
                                                                            hours = Math.floor(Time1 / 3600);
                                                                            Time1 %= 3600;
                                                                            minutes = Math.floor(Time1 / 60);
                                                                            seconds = Time1 % 60;
                                                                            if (totalSeconds > toSeconds(overTime1) && overTime1 != '00:00:00') {
                                                                                OT1 = overTime1;
                                                                                var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                hours = Math.floor(remaigntime / 3600);
                                                                                remaigntime %= 3600;
                                                                                minutes = Math.floor(remaigntime / 60);
                                                                                seconds = remaigntime % 60;
                                                                                OT2 = hours + ':' + minutes + ':' + seconds;
                                                                            } else {
                                                                                hours = Math.floor(totalSeconds / 3600);
                                                                                totalSeconds %= 3600;
                                                                                minutes = Math.floor(totalSeconds / 60);
                                                                                seconds = totalSeconds % 60;
                                                                                OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                OT2 = '';
                                                                            }
                                                                        } else {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '';
                                                                            OT2 = '';
                                                                        }
                                                                    } else {
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = '';
                                                                        OT2 = '';
                                                                    }
                                                                } //weekly
                                                            } else {
                                                                normalTime = totalhoursAdjusted;
                                                                OT1 = '00:00:00';
                                                                OT2 = '00:00:00';
                                                            }
                                                            if (OT1) {
                                                                OT1 = changeFormat(OT1);
                                                            }
                                                            if (OT2) {
                                                                OT2 = changeFormat(OT2);
                                                            }
                                                            var allowancesArray = [];
                                                            if (allowances) {
                                                                // console.log(allowances +'assign------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                                for (i = 0; i < allowances.length; i++) {
                                                                    // console.log(allowances[i].name);
                                                                    // console.log(allowances[i].payAfter);
                                                                    var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                    var allowanceName = allowances[i].name;
                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                        // console.log(toSeconds(totalhoursAdjusted));
                                                                        // console.log(toSeconds(payAfter));
                                                                        allowancesArray.push({
                                                                            name: allowanceName,
                                                                            status: true
                                                                        })
                                                                    } else {
                                                                        allowancesArray.push({
                                                                            name: allowanceName,
                                                                            status: false
                                                                        })
                                                                    }
                                                                }
                                                            }

                                                            // console.log(allowancesArray + '66666666666666666666666666666');
                                                            // console.log(totalhours+'Final total Hours');
                                                            // console.log(totalhoursAdjusted + 'totalhoursAdjustedHours11111111111');
                                                            console.log(normalTime + 'normalTime');
                                                            console.log(OT1 + 'ot1');
                                                            console.log(OT2 + 'ot2');
                                                            console.log('==========');
                                                            console.log(breakAfter + 'breakAfter');
                                                            console.log(breaktaken + 'breaktaken');
                                                            normalTimeAdd = normalTime;
                                                            ot1Add = OT1;
                                                            ot2Add = OT2;
                                                            totalRoundedAdd = totalhoursAdjusted;
                                                            if (totalhours) {
                                                                totalhours = changeFormat(totalhours);
                                                            }
                                                            Attendance.update({
                                                                    '_id': employeeAttendance._id
                                                                }, {
                                                                    $set: {
                                                                        normalTime: normalTime,
                                                                        ot1Rule: OT1,
                                                                        ot2Rule: OT2,
                                                                        total: totalhours,
                                                                        totalRounded: totalhoursAdjusted,
                                                                        breaktaken: breaktaken,
                                                                        breaktaken2: breaktaken2,
                                                                        readFlag: true,
                                                                        allowances: allowancesArray
                                                                    }
                                                                }, {
                                                                    upsert: false,
                                                                    new: false
                                                                }, function(err, data) {
                                                                    if (err) {
                                                                        // console.log(err);
                                                                    } else {
                                                                        console.log("aaaaaaaaaaaaaaaaa.......");
                                                                        if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                            calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                // if(result) {
                                                                                //  res.json(true);
                                                                                // }
                                                                            })
                                                                        }
                                                                        shiftHoursForHolidays(shift, companyId, function(result) {
                                                                            //console.log('---------------*****************************************************');
                                                                            var holidayHoursShift = result;
                                                                            var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD');
                                                                            //var shiftAssign =
                                                                            if (holidayresult.indexOf(dateGive) > -1) {
                                                                                //   console.log(dateGive);
                                                                                // console.log('shiftshiftshift' + shift);
                                                                                if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                    var finalnormalTime = '';
                                                                                    var finalOT1 = '';
                                                                                    var finalOT2 = '';
                                                                                    console.log("5555aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                    if (holidaymultiplier == 'NT') {
                                                                                        finalnormalTime = toSeconds(holidayHoursShift);
                                                                                        Attendance.update({
                                                                                            '_id': employeeAttendance._id,
                                                                                            'companyId': companyId
                                                                                        }, {
                                                                                            $set: {
                                                                                                normalTime: totalhoursAdjusted,
                                                                                                ot2Rule: '00:00:00',
                                                                                                ot1Rule: '00:00:00',
                                                                                                readFlag: true,
                                                                                                dayinLieu: holidayHoursShift,
                                                                                                Exception: holidayHoursShift,
                                                                                                exceptioncode: cmppayrollCode,
                                                                                                Exceptiontype: 'Holiday',
                                                                                                ExceptionAssign: 'Holiday',
                                                                                                cutException: '',
                                                                                                addweeklyexc: '',
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, data) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        })
                                                                                    }
                                                                                    if (holidaymultiplier == 'OT1') {
                                                                                        if (ot1Add == '') {
                                                                                            ot1Add = '00:00:00'
                                                                                        }
                                                                                        //console.log('holidayHoursShift');
                                                                                        finalOT1 = toSeconds(holidayHoursShift);
                                                                                        Attendance.update({
                                                                                            '_id': employeeAttendance._id,
                                                                                            'companyId': companyId
                                                                                        }, {
                                                                                            $set: {
                                                                                                ot1Rule: totalhoursAdjusted,
                                                                                                ot2Rule: '00:00:00',
                                                                                                normalTime: '00:00:00',
                                                                                                readFlag: true,
                                                                                                dayinLieu: holidayHoursShift,
                                                                                                Exception: holidayHoursShift,
                                                                                                exceptioncode: cmppayrollCode,
                                                                                                Exceptiontype: 'Holiday',
                                                                                                ExceptionAssign: 'Holiday',
                                                                                                cutException: '',
                                                                                                addweeklyexc: '',
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, data) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        })
                                                                                    }
                                                                                    if (holidaymultiplier == 'OT2') {
                                                                                        if (ot2Add == '') {
                                                                                            ot2Add = '00:00:00'
                                                                                        }
                                                                                        finalOT2 = toSeconds(holidayHoursShift);
                                                                                        Attendance.update({
                                                                                            '_id': employeeAttendance._id,
                                                                                            'companyId': companyId
                                                                                        }, {
                                                                                            $set: {
                                                                                                ot2Rule: totalhoursAdjusted,
                                                                                                ot1Rule: '00:00:00',
                                                                                                normalTime: '00:00:00',
                                                                                                readFlag: true,
                                                                                                dayinLieu: holidayHoursShift,
                                                                                                Exception: holidayHoursShift,
                                                                                                exceptioncode: cmppayrollCode,
                                                                                                Exceptiontype: 'Holiday',
                                                                                                ExceptionAssign: 'Holiday',
                                                                                                cutException: '',
                                                                                                addweeklyexc: '',
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, data) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        })
                                                                                    }
                                                                                    //console.log('calculate holiday hours');
                                                                                }
                                                                            }
                                                                        });
                                                                    }
                                                                }) //attendance update
                                                        } else {
                                                            getShiftData(shiftType, shift, companyId, function(result) {
                                                                    var shift = result.name;
                                                                    var shiftStartTime = new Date(Date.parse(result.startTime)).toUTCString();
                                                                    var shiftFinishTime = new Date(Date.parse(result.finishTime)).toUTCString();
                                                                    var startLimit = result.startLimit;
                                                                    var finishLimit = result.finishLimit;
                                                                    var ordinarytime = result.ordinarytime;
                                                                    var overTime1 = result.overTime1;
                                                                    var overTime2 = result.overTime2;
                                                                    var breakTime = result.breakTime;
                                                                    var breakAfter = result.breakAfter;
                                                                    var breakAfter2 = result.breakAfter2;
                                                                    var breakTime2 = result.breakTime2;
                                                                    var breakIn2 = result.breakIn2;
                                                                    /*var ordinarytime = result.ordinarytime;
                                                                    var overTime1 = result.overTime1;
                                                                    */
                                                                    var breakIn = result.breakIn;
                                                                    var breakAfter2 = result.breakAfter2;
                                                                    var breakTime2 = result.breakTime2;
                                                                    var breakIn2 = result.breakIn2;

                                                                    var OT1 = '00:00:00';
                                                                    var OT2 = '00:00:00';
                                                                    var allowances = result.allowance;
                                                                    var timezoneListArray = [];
                                                                    if (result.timeZones) {
                                                                        timezoneListArray = result.timeZones;
                                                                    }
                                                                    if (timezoneListArray.length > 0) {
                                                                        var timeZoneNTArray = [];
                                                                        var timeZoneOt1Array = [];
                                                                        var timeZoneOt2Array = [];
                                                                        result.timeZones.forEach(function(timezone) {
                                                                            if (timezone.payPeriod == "NT") {
                                                                                timeZoneNTArray.push({
                                                                                    zoneName: timezone.zoneName,
                                                                                    finishTime: timezone.finishTime,
                                                                                    startTime: timezone.startTime
                                                                                });
                                                                            } else if (timezone.payPeriod == "OT1") {
                                                                                timeZoneOt1Array.push({
                                                                                    zoneName: timezone.zoneName,
                                                                                    finishTime: timezone.finishTime,
                                                                                    startTime: timezone.startTime
                                                                                });
                                                                            } else if (timezone.payPeriod == "OT2") {
                                                                                timeZoneOt2Array.push({
                                                                                    zoneName: timezone.zoneName,
                                                                                    finishTime: timezone.finishTime,
                                                                                    startTime: timezone.startTime
                                                                                });
                                                                            }
                                                                        });
                                                                        var arrays = {
                                                                            ntArray: timeZoneNTArray,
                                                                            ot1Array: timeZoneOt1Array,
                                                                            ot2Array: timeZoneOt2Array
                                                                        };
                                                                        devideHourIntoNt(employeeAttendance._id, companyId, arrays, function(ntTotal) {
                                                                            console.log("ntTotal.zoneName........." + ntTotal.zoneName);
                                                                            global.normalTime = '00:00:00';
                                                                            if (breakAfter) {
                                                                                if (!breakTime) {
                                                                                    breakTime = '00:00:00';
                                                                                }
                                                                                if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                                    totalhoursAdjustedHours = ntTotal.normalTime;
                                                                                    if (breakIn == true) {
                                                                                        var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                                    } else {
                                                                                        var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                                    }
                                                                                    // console.log(afterhours);
                                                                                    var hours1 = Math.floor(afterhours / 3600);
                                                                                    afterhours %= 3600;
                                                                                    var minutes1 = Math.floor(afterhours / 60);
                                                                                    var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                    var totalhoursAdjusted = FinalHours;
                                                                                    breaktaken = true;
                                                                                } else {
                                                                                    var totalhoursAdjusted = ntTotal.normalTime;
                                                                                }
                                                                            } else {
                                                                                var totalhoursAdjusted = ntTotal.normalTime;
                                                                            }
                                                                            if (breakAfter2) {
                                                                                if (!breakTime2) {
                                                                                    breakTime2 = '00:00:00';
                                                                                }
                                                                                // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                                if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                                    if (breakIn2 == true) {
                                                                                        // console.log("iffffff");
                                                                                        var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                                    } else {
                                                                                        // console.log("else iffffff")
                                                                                        var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                                    }
                                                                                    // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                                    var hours1 = Math.floor(afterhours / 3600);
                                                                                    afterhours %= 3600;
                                                                                    var minutes1 = Math.floor(afterhours / 60);
                                                                                    var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                    var totalhoursAdjusted = FinalHours;
                                                                                    breaktaken2 = true;
                                                                                } else {
                                                                                    var totalhoursAdjusted = totalhoursAdjusted;
                                                                                }
                                                                            }
                                                                            totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = ntTotal.OT1;
                                                                            OT2 = ntTotal.OT2;
                                                                            if (OT1) {
                                                                                OT1 = changeFormat(OT1);
                                                                            }
                                                                            if (OT2) {
                                                                                OT2 = changeFormat(OT2);
                                                                            }
                                                                            var allowancesArray = [];
                                                                            if (allowances) {
                                                                                for (i = 0; i < allowances.length; i++) {
                                                                                    var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                                    var allowanceName = allowances[i].name;
                                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                                        allowancesArray.push({
                                                                                            name: allowanceName,
                                                                                            status: true
                                                                                        })
                                                                                    } else {
                                                                                        allowancesArray.push({
                                                                                            name: allowanceName,
                                                                                            status: false
                                                                                        })
                                                                                    }
                                                                                }
                                                                            }
                                                                            normalTimeAdd = normalTime;
                                                                            ot1Add = OT1;
                                                                            ot2Add = OT2;
                                                                            var NtOThours = toSeconds(OT2) + toSeconds(OT1) + toSeconds(normalTime);
                                                                            var hours1 = Math.floor(NtOThours / 3600);
                                                                            NtOThours %= 3600;
                                                                            var minutes1 = Math.floor(NtOThours / 60);
                                                                            var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                            totalRoundedAdd = FinalHours;
                                                                            if (totalhours) {
                                                                                totalhours = changeFormat(totalhours);
                                                                            }
                                                                            Attendance.update({
                                                                                    '_id': employeeAttendance._id
                                                                                }, {
                                                                                    $set: {
                                                                                        normalTime: normalTime,
                                                                                        ot1Rule: OT1,
                                                                                        ot2Rule: OT2,
                                                                                        total: totalhours,
                                                                                        totalRounded: FinalHours,
                                                                                        breaktaken: breaktaken,
                                                                                        breaktaken2: breaktaken2,
                                                                                        readFlag: true,
                                                                                        allowances: allowancesArray
                                                                                    }
                                                                                }, {
                                                                                    upsert: false,
                                                                                    new: false
                                                                                }, function(err, data) {
                                                                                    if (err) {
                                                                                        // console.log(err);
                                                                                    } else {
                                                                                        if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                                            calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                                // if(result) {
                                                                                                //  res.json(true);
                                                                                                // }
                                                                                            })
                                                                                        }
                                                                                        shiftHoursForHolidays(shift, companyId, function(result) {
                                                                                            var holidayHoursShift = result;
                                                                                            var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD hh:mm:ss');
                                                                                            if (holidayresult.indexOf(dateGive) > -1) {
                                                                                                if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                                    var finalnormalTime = '';
                                                                                                    var finalOT1 = '';
                                                                                                    var finalOT2 = '';
                                                                                                    console.log("6666aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                                    if (holidaymultiplier == 'NT') {
                                                                                                        finalnormalTime = toSeconds(holidayHoursShift);
                                                                                                        Attendance.update({
                                                                                                            '_id': employeeAttendance._id,
                                                                                                            'companyId': companyId
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                normalTime: totalhoursAdjusted,
                                                                                                                ot2Rule: '00:00:00',
                                                                                                                ot1Rule: '00:00:00',
                                                                                                                readFlag: true,
                                                                                                                dayinLieu: holidayHoursShift,
                                                                                                                Exception: holidayHoursShift,
                                                                                                                exceptioncode: cmppayrollCode,
                                                                                                                Exceptiontype: 'Holiday',
                                                                                                                ExceptionAssign: 'Holiday',
                                                                                                                cutException: '',
                                                                                                                addweeklyexc: '',
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, data) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        })
                                                                                                    }
                                                                                                    if (holidaymultiplier == 'OT1') {
                                                                                                        if (ot1Add == '') {
                                                                                                            ot1Add = '00:00:00'
                                                                                                        }
                                                                                                        //console.log('holidayHoursShift');
                                                                                                        finalOT1 = toSeconds(holidayHoursShift);
                                                                                                        Attendance.update({
                                                                                                            '_id': employeeAttendance._id,
                                                                                                            'companyId': companyId
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                ot1Rule: totalhoursAdjusted,
                                                                                                                ot2Rule: '00:00:00',
                                                                                                                normalTime: '00:00:00',
                                                                                                                readFlag: true,
                                                                                                                dayinLieu: holidayHoursShift,
                                                                                                                Exception: holidayHoursShift,
                                                                                                                exceptioncode: cmppayrollCode,
                                                                                                                Exceptiontype: 'Holiday',
                                                                                                                ExceptionAssign: 'Holiday',
                                                                                                                cutException: '',
                                                                                                                addweeklyexc: '',
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, data) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        })
                                                                                                    }
                                                                                                    if (holidaymultiplier == 'OT2') {
                                                                                                        if (ot2Add == '') {
                                                                                                            ot2Add = '00:00:00'
                                                                                                        }
                                                                                                        finalOT2 = toSeconds(holidayHoursShift);
                                                                                                        Attendance.update({
                                                                                                            '_id': employeeAttendance._id,
                                                                                                            'companyId': companyId
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                ot2Rule: totalhoursAdjusted,
                                                                                                                ot1Rule: '00:00:00',
                                                                                                                normalTime: '00:00:00',
                                                                                                                readFlag: true,
                                                                                                                dayinLieu: holidayHoursShift,
                                                                                                                Exception: holidayHoursShift,
                                                                                                                exceptioncode: cmppayrollCode,
                                                                                                                Exceptiontype: 'Holiday',
                                                                                                                ExceptionAssign: 'Holiday',
                                                                                                                cutException: '',
                                                                                                                addweeklyexc: '',
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, data) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        })
                                                                                                    }
                                                                                                    //console.log('calculate holiday hours');
                                                                                                }
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                }) //attendance update
                                                                        });
                                                                    } else {
                                                                        global.normalTime = '00:00:00';
                                                                        if (breakAfter) {
                                                                            if (!breakTime) {
                                                                                breakTime = '00:00:00';
                                                                            }
                                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                                if (breakIn == true) {
                                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                                } else {
                                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                                }
                                                                                // console.log(afterhours);
                                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                                afterhours %= 3600;
                                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                var totalhoursAdjusted = FinalHours;
                                                                                breaktaken = true;
                                                                            } else {
                                                                                var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                            }
                                                                        } else {
                                                                            var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                        }
                                                                        if (breakAfter2) {
                                                                            if (!breakTime2) {
                                                                                breakTime2 = '00:00:00';
                                                                            }
                                                                            // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                                if (breakIn2 == true) {
                                                                                    // console.log("iffffff");
                                                                                    var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                                } else {
                                                                                    // console.log("else iffffff")
                                                                                    var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                                }
                                                                                // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                                afterhours %= 3600;
                                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                var totalhoursAdjusted = FinalHours;
                                                                                breaktaken2 = true;
                                                                            } else {
                                                                                var totalhoursAdjusted = totalhoursAdjusted;
                                                                            }
                                                                        }
                                                                        //console.log(totalhoursAdjusted +'totalhoursAdjusted');
                                                                        totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                                        //console.log(totalhoursAdjusted + 'after Format');
                                                                        if (dataCompany.isovertime) {
                                                                            console.log('overtime');
                                                                            if (weekly == 0) {
                                                                                if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                                        normalTime = ordinarytime;
                                                                                        totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                                        var Time1 = totalSeconds;
                                                                                        hours = Math.floor(Time1 / 3600);
                                                                                        Time1 %= 3600;
                                                                                        minutes = Math.floor(Time1 / 60);
                                                                                        seconds = Time1 % 60;
                                                                                        if (overTime1 != '00:00:00' && overTime1 != '') {
                                                                                            if (totalSeconds > toSeconds(overTime1)) {
                                                                                                console.log('asdas');
                                                                                                OT1 = overTime1;
                                                                                                var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                                hours = Math.floor(remaigntime / 3600);
                                                                                                remaigntime %= 3600;
                                                                                                minutes = Math.floor(remaigntime / 60);
                                                                                                seconds = remaigntime % 60;
                                                                                                OT2 = hours + ':' + minutes + ':' + seconds
                                                                                            } else {
                                                                                                console.log('not');
                                                                                                hours = Math.floor(totalSeconds / 3600);
                                                                                                totalSeconds %= 3600;
                                                                                                minutes = Math.floor(totalSeconds / 60);
                                                                                                seconds = totalSeconds % 60;
                                                                                                OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                                OT2 = '';
                                                                                            }
                                                                                        } else {
                                                                                            hours = Math.floor(totalSeconds / 3600);
                                                                                            totalSeconds %= 3600;
                                                                                            minutes = Math.floor(totalSeconds / 60);
                                                                                            seconds = totalSeconds % 60;
                                                                                            OT2 = '00:00:00';
                                                                                            OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                        }
                                                                                    } else {
                                                                                        normalTime = totalhoursAdjusted;
                                                                                        OT1 = '';
                                                                                        OT2 = '';
                                                                                    }
                                                                                } else {
                                                                                    if (ordinarytime == '') {
                                                                                        normalTime = totalhoursAdjusted;
                                                                                        OT1 = '00:00:00';
                                                                                        OT2 = '00:00:00';
                                                                                    } else {
                                                                                        if (dataCompany.overtimeLevel == "1" && dataCompany.overtimePeriod == 'daily') {
                                                                                            normalTime = '00:00:00';
                                                                                            OT1 = totalhoursAdjusted;
                                                                                            OT2 = '00:00:00';
                                                                                        } else {
                                                                                            normalTime = '00:00:00';
                                                                                            OT1 = '00:00:00';
                                                                                            OT2 = totalhoursAdjusted;
                                                                                        }
                                                                                    }
                                                                                    /*if(overTime1 != '00:00:00'){
                                                                                        var totalSeconds1 =  toSeconds(totalhoursAdjusted)
                                                                                        if(totalSeconds1 > toSeconds(overTime1)){
                                                                                            console.log('asdas');
                                                                                            OT1 = overTime1;
                                                                                            var remaigntime = totalSeconds1 - toSeconds(overTime1);
                                                                                            hours = Math.floor(remaigntime / 3600);
                                                                                            remaigntime %= 3600;
                                                                                            minutes = Math.floor(remaigntime / 60);
                                                                                            seconds = remaigntime % 60;
                                                                                            OT2 = hours+':'+minutes+':'+seconds;
                                                                                        }else{
                                                                                            console.log('not');
                                                                                            hours = Math.floor(totalSeconds1 / 3600);
                                                                                            totalSeconds1 %= 3600;
                                                                                            minutes = Math.floor(totalSeconds1 / 60);
                                                                                            seconds = totalSeconds1 % 60;
                                                                                            OT1 = hours+':'+minutes+':'+seconds;
                                                                                            OT2 = '';
                                                                                        }
                                                                                    }else{
                                                                                        normalTime = '00:00:00';
                                                                                        OT1  = '00:00:00';
                                                                                        OT2 = totalhoursAdjusted;
                                                                                    }*/
                                                                                }
                                                                            } //daily
                                                                            if (weekly == 1) {
                                                                                if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                                    console.log(ordinarytime + 'ordinarytime');
                                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                                        normalTime = ordinarytime;
                                                                                        totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                                        var Time1 = totalSeconds;
                                                                                        hours = Math.floor(Time1 / 3600);
                                                                                        Time1 %= 3600;
                                                                                        minutes = Math.floor(Time1 / 60);
                                                                                        seconds = Time1 % 60;
                                                                                        if (totalSeconds > toSeconds(overTime1) && overTime1 != '00:00:00') {
                                                                                            OT1 = overTime1;
                                                                                            var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                            hours = Math.floor(remaigntime / 3600);
                                                                                            remaigntime %= 3600;
                                                                                            minutes = Math.floor(remaigntime / 60);
                                                                                            seconds = remaigntime % 60;
                                                                                            OT2 = hours + ':' + minutes + ':' + seconds;
                                                                                        } else {
                                                                                            hours = Math.floor(totalSeconds / 3600);
                                                                                            totalSeconds %= 3600;
                                                                                            minutes = Math.floor(totalSeconds / 60);
                                                                                            seconds = totalSeconds % 60;
                                                                                            OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                            OT2 = '';
                                                                                        }
                                                                                    } else {
                                                                                        normalTime = totalhoursAdjusted;
                                                                                        OT1 = '';
                                                                                        OT2 = '';
                                                                                    }
                                                                                } else {
                                                                                    normalTime = totalhoursAdjusted;
                                                                                    OT1 = '';
                                                                                    OT2 = '';
                                                                                }
                                                                            } //weekly
                                                                        } else {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '00:00:00';
                                                                            OT2 = '00:00:00';
                                                                        }
                                                                        if (OT1) {
                                                                            OT1 = changeFormat(OT1);
                                                                        }
                                                                        if (OT2) {
                                                                            OT2 = changeFormat(OT2);
                                                                        }
                                                                        var allowancesArray = [];
                                                                        if (allowances) {
                                                                            // console.log(allowances +'assign------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                                            for (i = 0; i < allowances.length; i++) {
                                                                                // console.log(allowances[i].name);
                                                                                // console.log(allowances[i].payAfter);
                                                                                var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                                var allowanceName = allowances[i].name;
                                                                                if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                                    // console.log(toSeconds(totalhoursAdjusted));
                                                                                    // console.log(toSeconds(payAfter));
                                                                                    allowancesArray.push({
                                                                                        name: allowanceName,
                                                                                        status: true
                                                                                    })
                                                                                } else {
                                                                                    allowancesArray.push({
                                                                                        name: allowanceName,
                                                                                        status: false
                                                                                    })
                                                                                }
                                                                            }
                                                                        }
                                                                        // console.log(allowancesArray + '66666666666666666666666666666');
                                                                        // console.log(totalhours+'Final total Hours');
                                                                        // console.log(totalhoursAdjusted + 'totalhoursAdjustedHours11111111111');
                                                                        /*console.log(normalTime+'normalTime');
                                                                        console.log(OT1+'ot1');
                                                                        console.log(OT2+'ot2');
                                                                        console.log('==========');
                                                                        console.log(breakAfter +'breakAfter');
                                                                        console.log(breaktaken +'breaktaken');*/
                                                                        normalTimeAdd = normalTime;
                                                                        ot1Add = OT1;
                                                                        ot2Add = OT2;
                                                                        totalRoundedAdd = totalhoursAdjusted;
                                                                        if (totalhours) {
                                                                            totalhours = changeFormat(totalhours);
                                                                        }
                                                                        Attendance.update({
                                                                                '_id': employeeAttendance._id
                                                                            }, {
                                                                                $set: {
                                                                                    normalTime: normalTime,
                                                                                    ot1Rule: OT1,
                                                                                    ot2Rule: OT2,
                                                                                    total: totalhours,
                                                                                    totalRounded: totalhoursAdjusted,
                                                                                    breaktaken: breaktaken,
                                                                                    breaktaken2: breaktaken2,
                                                                                    readFlag: true,
                                                                                    allowances: allowancesArray
                                                                                }
                                                                            }, {
                                                                                upsert: false,
                                                                                new: false
                                                                            }, function(err, data) {
                                                                                if (err) {
                                                                                    // console.log(err);
                                                                                } else {
                                                                                    console.log("aaaaaaaaaaaaaaaaa");
                                                                                    if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                                        calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                            // if(result) {
                                                                                            //  res.json(true);
                                                                                            // }
                                                                                        })
                                                                                    }
                                                                                    shiftHoursForHolidays(shift, companyId, function(result) {
                                                                                        console.log('---------------*****************************************************');
                                                                                        var holidayHoursShift = result;
                                                                                        // console.log(result);
                                                                                        // console.log(employeeAttendance.date);
                                                                                        var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD hh:mm:ss');
                                                                                        // console.log(dateGive);
                                                                                        //var shiftAssign =
                                                                                        if (holidayresult.indexOf(dateGive) > -1) {
                                                                                            //   console.log(dateGive);
                                                                                            console.log('shiftshiftshift' + shift);
                                                                                            if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                                var finalnormalTime = '';
                                                                                                var finalOT1 = '';
                                                                                                var finalOT2 = '';
                                                                                                console.log("7777aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                                if (holidaymultiplier == 'NT') {
                                                                                                    finalnormalTime = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            normalTime: totalhoursAdjusted,
                                                                                                            ot2Rule: '00:00:00',
                                                                                                            ot1Rule: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                if (holidaymultiplier == 'OT1') {
                                                                                                    if (ot1Add == '') {
                                                                                                        ot1Add = '00:00:00'
                                                                                                    }
                                                                                                    //console.log('holidayHoursShift');
                                                                                                    finalOT1 = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            ot1Rule: totalhoursAdjusted,
                                                                                                            ot2Rule: '00:00:00',
                                                                                                            normalTime: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                if (holidaymultiplier == 'OT2') {
                                                                                                    if (ot2Add == '') {
                                                                                                        ot2Add = '00:00:00'
                                                                                                    }
                                                                                                    finalOT2 = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            ot2Rule: totalhoursAdjusted,
                                                                                                            ot1Rule: '00:00:00',
                                                                                                            normalTime: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                //console.log('calculate holiday hours');
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                }
                                                                            }) //attendance update
                                                                    }
                                                                }) //shiftData
                                                        }
                                                    }) //totalhours
                                            }
                                        })
                                    }
                                }
                            }
                            n++;
                        } else if (checkin.alterWho != employeeAttendance.employeeNo) {
                            console.log("iffff admin.................");
                            if (checkType == 1 || checkType == 2 || checkType == 'i' || checkType == 'I') {
                                if (workCode) {
                                    checkinWorkcode.push(workCode)
                                }
                                var inAdjusted = '';
                                if (n == 1) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(startHour + ':' + startMinute + ':00')) {
                                        lateIn = '1';
                                    } else {
                                        lateIn = '0';
                                    }
                                }
                                if (limitIn == true && n == 1) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(startHour + ':' + startMinute + ':00')) {
                                        var finalV = toSeconds(startHour + ':' + startMinute + ':00');
                                        //console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                        seconds = finalV;
                                        var Hourset = Moment.utc(checkTime).set('hours', startHour);
                                        var date = Moment.utc(Hourset).set('minute', startMinute);
                                        inAdjusted = new Date(Date.parse(date)).toUTCString();
                                    } else {
                                        inAdjusted = checkTime;
                                    }
                                } else {
                                    if (limitIn == true) {
                                        if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                            var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                            //console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                            seconds = finalV;
                                            var Hourset = Moment.utc(checkTime).set('hours', finishHour);
                                            var date = Moment.utc(Hourset).set('minute', finishMinute);
                                            inAdjusted = new Date(Date.parse(date)).toUTCString();
                                            // console.log(inAdjusted + 'inAdjustedinAdjustedinAdjustedinAdjustedinAdjusted');
                                        } else if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(startHour + ':' + startMinute + ':00')) {
                                            var finalV = toSeconds(startHour + ':' + startMinute + ':00');
                                            //console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                            seconds = finalV;
                                            var Hourset = Moment.utc(checkTime).set('hours', startHour);
                                            var date = Moment.utc(Hourset).set('minute', startMinute);
                                            inAdjusted = new Date(Date.parse(date)).toUTCString();
                                            // console.log(inAdjusted + 'innnnnnnnnnnnnnnnnnnnnnaaaaaaaaaaaaaaaaaaaaaaaaaaffffff');
                                        } else {
                                            inAdjusted = checkTime;
                                        }
                                    } else {
                                        inAdjusted = checkTime;
                                    }
                                }
                                Attendance.update({
                                    '_id': employeeAttendance._id,
                                    'checkin.checkTime': checkTime
                                }, {
                                    $set: {
                                        "checkin.$.inAdjusted": inAdjusted,
                                    }
                                }, {
                                    upsert: false,
                                    new: false
                                }, function(err, data) {
                                    if (err) {
                                        // console.log(err);
                                    } else {
                                        // console.log(true);
                                    }
                                })
                                if (n == 1) {
                                    nextOrder.push(0);
                                    var In = checkin.checkTime;
                                    checkinTotal.push(In);
                                    checkinTotalAdjusted.push(inAdjusted);
                                } else {
                                    if (isInArray(parseInt(1), nextOrder)) {
                                        nextOrder.length = 0;
                                        nextOrder.push(0);
                                        var In = checkin.checkTime;
                                        checkinTotal.push(In);
                                        checkinTotalAdjusted.push(inAdjusted);
                                    } else {
                                        checkinTotal.length = 0;
                                        checkinTotalAdjusted.length = 0;
                                        //console.log(checkinWorkcodeVal + '---------------------------------------------------------checkinWorkcodeVal');
                                        checkinWorkcode.length = 0;
                                    }
                                }
                            } else {
                                if (workCode) {
                                    checkinWorkcode.push(workCode)
                                }
                                var outAdjusted = '';
                                if (n == (employeeAttendance.checkin.length)) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                        lateOut = '1';
                                    } else {
                                        lateOut = '0';
                                    }
                                }
                                if (limitOut == true && n == (employeeAttendance.checkin.length)) {
                                    if (shiftStartDate == shiftFinishDate) {
                                        if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                            outAdjusted = checkTime;
                                        } else {
                                            var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                            seconds = finalV;
                                            var Hourset = Moment.utc(checkTime).set('hours', finishHour);
                                            var date = Moment.utc(Hourset).set('minute', finishMinute);
                                            outAdjusted = new Date(Date.parse(date)).toUTCString();
                                        }
                                    } else {
                                        outAdjusted = checkTime;
                                    }
                                } else {
                                    if (limitOut == true) {
                                        if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                            var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                            seconds = finalV;
                                            var Hourset = Moment.utc(checkTime).set('hours', finishHour);
                                            var date = Moment.utc(Hourset).set('minute', finishMinute);
                                            outAdjusted = new Date(Date.parse(date)).toUTCString();
                                        } else {
                                            outAdjusted = checkTime;
                                        }
                                    } else {
                                        outAdjusted = checkTime;
                                    }
                                }
                                if (isInArray(parseInt(0), nextOrder)) {
                                    nextOrder.length = 0;
                                    nextOrder.push(1);
                                    var Out = checkin.checkTime;
                                    checkinTotal.push(Out);
                                    checkinTotalAdjusted.push(outAdjusted);
                                    if (checkinWorkcode.length > 0) {
                                        checkinWorkcodeVal = checkinWorkcode[0];
                                    } else {
                                        checkinWorkcodeVal = '99999';
                                    }
                                    if (checkinTotal.length == 2) {
                                        var InVAlue = new Date(Date.parse(checkinTotal[0])).toUTCString();
                                        var OutValue = new Date(Date.parse(checkinTotal[1])).toUTCString();

                                        var Inadjusted = new Date(Date.parse(checkinTotalAdjusted[0])).toUTCString();
                                        var outadjusted = new Date(Date.parse(checkinTotalAdjusted[1])).toUTCString();

                                        var inn = Moment(InVAlue).format('DD/MM/YYYY HH:mm');
                                        var out = Moment(OutValue).format('DD/MM/YYYY HH:mm');

                                        // console.log(Inadjusted + 'Inadjusted ===========================');
                                        // console.log(outadjusted + 'outadjusted ============================');

                                        var ms = Moment(out, "DD/MM/YYYY HH:mm:ss").diff(Moment(inn, "DD/MM/YYYY HH:mm:ss"));
                                        var d = Moment.duration(ms);
                                        var totalhours = Math.floor(d.asHours()) + Moment.utc(ms).format(":mm:ss");

                                        var innAdj = Moment(Inadjusted).format('DD/MM/YYYY HH:mm');
                                        var outAdj = Moment(outadjusted).format('DD/MM/YYYY HH:mm');

                                        var msAdjusted = Moment(outAdj, "DD/MM/YYYY HH:mm:ss").diff(Moment(innAdj, "DD/MM/YYYY HH:mm:ss"));
                                        var dAdjusted = Moment.duration(msAdjusted);
                                        var totalhoursAdjusted = Math.floor(dAdjusted.asHours()) + Moment.utc(msAdjusted).format(":mm:ss");

                                        //console.log(totalhoursAdjusted);
                                        if (totalhoursAdjusted.indexOf("-") > -1) {
                                            totalhoursAdjusted = '00:00:00';
                                        }
                                        checkinTotal.length = 0;
                                        checkinTotalAdjusted.length = 0;
                                        //console.log(checkinWorkcodeVal + '---------------------------------------------------------checkinWorkcodeVal');
                                        checkinWorkcode.length = 0;
                                        Attendance.update({
                                                '_id': employeeAttendance._id,
                                                'checkin.checkTime': checkTime
                                            }, {
                                                $set: {
                                                    "checkin.$.outAdjusted": outAdjusted,
                                                }
                                            }, {
                                                upsert: true,
                                                new: false
                                            }, function(err, data) {
                                                if (err) {
                                                    // console.log(err);
                                                } else {
                                                    var datec = Moment(outadjusted).format('YYYY-MM-DD');
                                                    Dashboard.update({
                                                        weekEnd: {
                                                            $gte: datec
                                                        },
                                                        weekStart: {
                                                            $lte: datec
                                                        },
                                                        'companyId': companyId
                                                    }, {
                                                        $set: {
                                                            calfalg: false
                                                        }
                                                    }, {
                                                        upsert: false,
                                                        new: false,
                                                        multi: true
                                                    }, function(err, data) {
                                                        if (err) {
                                                            // console.log(err);
                                                        }
                                                    });
                                                }
                                            })
                                            // console.log('flagForchk'+flagForchk);
                                            // console.log(totalhoursAdjusted+'checkinTotalAdjusted+++++++++++++++++++++++++++++');
                                        Attendance.update({
                                            '_id': employeeAttendance._id,
                                            'totalValues.checkinNo': {
                                                $ne: flagForchk
                                            }
                                        }, {
                                            $set: {
                                                lateIn: lateIn,
                                                lateOut: lateOut,
                                            },
                                            $push: {
                                                totalValues: {
                                                    total: totalhours,
                                                    totalAdjusted: totalhoursAdjusted,
                                                    checkinNo: flagForchk,
                                                    workCode: checkinWorkcodeVal
                                                }
                                            }
                                        }, {
                                            upsert: false,
                                            new: false
                                        }, function(err, data) {
                                            if (err) {
                                                // console.log(err +'mongo');
                                            } else {
                                                var shift = employeeAttendance.shift;
                                                var shiftType = employeeAttendance.shiftType;
                                                if (!shift) {
                                                    Attendance.update({
                                                        '_id': employeeAttendance._id
                                                    }, {
                                                        $set: {
                                                            readFlag: true,
                                                        }
                                                    }, {
                                                        upsert: false,
                                                        new: false
                                                    }, function(err, data) {
                                                        if (err) {
                                                            // console.log(err );
                                                        }
                                                    });
                                                }
                                                totalhoursFn(employeeAttendance._id, companyId, function(result) {
                                                        var totalhours = result[0];
                                                        var totalhoursAdjustedHours = result[1];
                                                        // console.log(totalhoursAdjustedHours + 'totalhoursAdjustedHours *******************');
                                                        // console.log(totalhours+'totalWorkingHours *****************************');
                                                        var weeklyOT1 = 0;
                                                        if (ExceptionAssign) {
                                                            // console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                            shift = lastShift;
                                                        } else {
                                                            shift = employeeAttendance.shift;
                                                        }
                                                        if (shiftType == "customShift") {
                                                            console.log("if customShift..");
                                                            // console.log(employeeAttendance);
                                                            // var shift = result.name;
                                                            var shiftStartTime = new Date(Date.parse(employeeAttendance.shiftStart)).toUTCString();
                                                            var shiftFinishTime = new Date(Date.parse(employeeAttendance.shiftFinish)).toUTCString();
                                                            var startLimit = employeeAttendance.limitIn;
                                                            var finishLimit = employeeAttendance.limitOut;
                                                            // var ordinarytime = employeeAttendance.ordinarytime;
                                                            // var overTime1 = employeeAttendance.overTime1;
                                                            // var overTime2 = employeeAttendance.overTime2;
                                                            var ordinarytime = "";
                                                            var overTime1 = "";
                                                            var overTime2 = "";

                                                            var breakTime = employeeAttendance.breakk;
                                                            var breakAfter = employeeAttendance.breakAfter;
                                                            /*var ordinarytime = result.ordinarytime;
                                                            var overTime1 = result.overTime1;
                                                            var breakAfter = result.breakAfter;
                                                            var breakTime = result.breakTime;*/
                                                            var breakIn = employeeAttendance.breakIn;
                                                            var breakAfter2 = employeeAttendance.breakAfter2;
                                                            var breakTime2 = employeeAttendance.breakTime2;
                                                            var breakIn2 = employeeAttendance.breakIn2;

                                                            var OT1 = '00:00:00';
                                                            var OT2 = '00:00:00';
                                                            var allowances = employeeAttendance.allowance;
                                                            global.normalTime = '00:00:00';
                                                            if (breakAfter) {
                                                                if (!breakTime) {
                                                                    breakTime = '00:00:00';
                                                                }
                                                                if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                    if (breakIn == true) {
                                                                        var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                    } else {
                                                                        var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                    }
                                                                    // console.log(afterhours);
                                                                    var hours1 = Math.floor(afterhours / 3600);
                                                                    afterhours %= 3600;
                                                                    var minutes1 = Math.floor(afterhours / 60);
                                                                    var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                    var totalhoursAdjusted = FinalHours;
                                                                    breaktaken = true;
                                                                } else {
                                                                    var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                }
                                                            } else {
                                                                var totalhoursAdjusted = totalhoursAdjustedHours;
                                                            }
                                                            if (breakAfter2) {
                                                                if (!breakTime2) {
                                                                    breakTime2 = '00:00:00';
                                                                }
                                                                // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                    if (breakIn2 == true) {
                                                                        // console.log("iffffff");
                                                                        var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                    } else {
                                                                        // console.log("else iffffff")
                                                                        var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                    }
                                                                    // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                    var hours1 = Math.floor(afterhours / 3600);
                                                                    afterhours %= 3600;
                                                                    var minutes1 = Math.floor(afterhours / 60);
                                                                    var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                    var totalhoursAdjusted = FinalHours;
                                                                    breaktaken2 = true;
                                                                } else {
                                                                    var totalhoursAdjusted = totalhoursAdjusted;
                                                                }
                                                            }
                                                            //console.log(totalhoursAdjusted +'totalhoursAdjusted');
                                                            totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                            //console.log(totalhoursAdjusted + 'after Format');
                                                            if (dataCompany.isovertime) {
                                                                console.log('overtime');
                                                                if (weekly == 0) {
                                                                    if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                        if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                            normalTime = ordinarytime;
                                                                            totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                            var Time1 = totalSeconds;
                                                                            hours = Math.floor(Time1 / 3600);
                                                                            Time1 %= 3600;
                                                                            minutes = Math.floor(Time1 / 60);
                                                                            seconds = Time1 % 60;
                                                                            if (overTime1 != '00:00:00' && overTime1 != '') {
                                                                                if (totalSeconds > toSeconds(overTime1)) {
                                                                                    console.log('asdas');
                                                                                    OT1 = overTime1;
                                                                                    var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                    hours = Math.floor(remaigntime / 3600);
                                                                                    remaigntime %= 3600;
                                                                                    minutes = Math.floor(remaigntime / 60);
                                                                                    seconds = remaigntime % 60;
                                                                                    OT2 = hours + ':' + minutes + ':' + seconds
                                                                                } else {
                                                                                    console.log('not');
                                                                                    hours = Math.floor(totalSeconds / 3600);
                                                                                    totalSeconds %= 3600;
                                                                                    minutes = Math.floor(totalSeconds / 60);
                                                                                    seconds = totalSeconds % 60;
                                                                                    OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                    OT2 = '';
                                                                                }
                                                                            } else {
                                                                                hours = Math.floor(totalSeconds / 3600);
                                                                                totalSeconds %= 3600;
                                                                                minutes = Math.floor(totalSeconds / 60);
                                                                                seconds = totalSeconds % 60;
                                                                                OT2 = '00:00:00';
                                                                                OT1 = hours + ':' + minutes + ':' + seconds;
                                                                            }
                                                                        } else {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '';
                                                                            OT2 = '';
                                                                        }
                                                                    } else {
                                                                        if (ordinarytime == '') {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '00:00:00';
                                                                            OT2 = '00:00:00';
                                                                        } else {
                                                                            if (dataCompany.overtimeLevel == "1" && dataCompany.overtimePeriod == 'daily') {
                                                                                normalTime = '00:00:00';
                                                                                OT1 = totalhoursAdjusted;
                                                                                OT2 = '00:00:00';
                                                                            } else {
                                                                                normalTime = '00:00:00';
                                                                                OT1 = '00:00:00';
                                                                                OT2 = totalhoursAdjusted;
                                                                            }
                                                                        }
                                                                        // if(overTime1 != '00:00:00'){
                                                                        //  var totalSeconds1 =  toSeconds(totalhoursAdjusted)
                                                                        //  if(totalSeconds1 > toSeconds(overTime1)){
                                                                        //    console.log('asdas');
                                                                        //    OT1 = overTime1;
                                                                        //    var remaigntime = totalSeconds1 - toSeconds(overTime1);
                                                                        //    hours = Math.floor(remaigntime / 3600);
                                                                        //    remaigntime %= 3600;
                                                                        //    minutes = Math.floor(remaigntime / 60);
                                                                        //    seconds = remaigntime % 60;
                                                                        //    OT2 = hours+':'+minutes+':'+seconds;
                                                                        //  }else{
                                                                        //    console.log('not');
                                                                        //    hours = Math.floor(totalSeconds1 / 3600);
                                                                        //    totalSeconds1 %= 3600;
                                                                        //    minutes = Math.floor(totalSeconds1 / 60);
                                                                        //    seconds = totalSeconds1 % 60;
                                                                        //    OT1 = hours+':'+minutes+':'+seconds;
                                                                        //    OT2 = '';
                                                                        //  }
                                                                        // }else{
                                                                        //  normalTime = '00:00:00';
                                                                        //  OT1  = '00:00:00';
                                                                        //  OT2 = totalhoursAdjusted;
                                                                        // }
                                                                    }
                                                                } //daily
                                                                if (weekly == 1) {
                                                                    if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                        console.log(ordinarytime + 'ordinarytime');
                                                                        if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                            normalTime = ordinarytime;
                                                                            totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                            var Time1 = totalSeconds;
                                                                            hours = Math.floor(Time1 / 3600);
                                                                            Time1 %= 3600;
                                                                            minutes = Math.floor(Time1 / 60);
                                                                            seconds = Time1 % 60;
                                                                            if (totalSeconds > toSeconds(overTime1) && overTime1 != '00:00:00') {
                                                                                OT1 = overTime1;
                                                                                var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                hours = Math.floor(remaigntime / 3600);
                                                                                remaigntime %= 3600;
                                                                                minutes = Math.floor(remaigntime / 60);
                                                                                seconds = remaigntime % 60;
                                                                                OT2 = hours + ':' + minutes + ':' + seconds;
                                                                            } else {
                                                                                hours = Math.floor(totalSeconds / 3600);
                                                                                totalSeconds %= 3600;
                                                                                minutes = Math.floor(totalSeconds / 60);
                                                                                seconds = totalSeconds % 60;
                                                                                OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                OT2 = '';
                                                                            }
                                                                        } else {
                                                                            normalTime = totalhoursAdjusted;
                                                                            OT1 = '';
                                                                            OT2 = '';
                                                                        }
                                                                    } else {
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = '';
                                                                        OT2 = '';
                                                                    }
                                                                } //weekly
                                                            } else {
                                                                normalTime = totalhoursAdjusted;
                                                                OT1 = '00:00:00';
                                                                OT2 = '00:00:00';
                                                            }
                                                            if (OT1) {
                                                                OT1 = changeFormat(OT1);
                                                            }
                                                            if (OT2) {
                                                                OT2 = changeFormat(OT2);
                                                            }
                                                            var allowancesArray = [];
                                                            if (allowances) {
                                                                // console.log(allowances +'assign------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                                for (i = 0; i < allowances.length; i++) {
                                                                    // console.log(allowances[i].name);
                                                                    // console.log(allowances[i].payAfter);
                                                                    var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                    var allowanceName = allowances[i].name;
                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                        // console.log(toSeconds(totalhoursAdjusted));
                                                                        // console.log(toSeconds(payAfter));
                                                                        allowancesArray.push({
                                                                            name: allowanceName,
                                                                            status: true
                                                                        })
                                                                    } else {
                                                                        allowancesArray.push({
                                                                            name: allowanceName,
                                                                            status: false
                                                                        })
                                                                    }
                                                                }
                                                            }

                                                            // console.log(allowancesArray + '66666666666666666666666666666');
                                                            // console.log(totalhours+'Final total Hours');
                                                            // console.log(totalhoursAdjusted + 'totalhoursAdjustedHours11111111111');
                                                            console.log(normalTime + 'normalTime');
                                                            console.log(OT1 + 'ot1');
                                                            console.log(OT2 + 'ot2');
                                                            console.log('==========');
                                                            console.log(breakAfter + 'breakAfter');
                                                            console.log(breaktaken + 'breaktaken');
                                                            normalTimeAdd = normalTime;
                                                            ot1Add = OT1;
                                                            ot2Add = OT2;
                                                            totalRoundedAdd = totalhoursAdjusted;
                                                            if (totalhours) {
                                                                totalhours = changeFormat(totalhours);
                                                            }
                                                            Attendance.update({
                                                                    '_id': employeeAttendance._id
                                                                }, {
                                                                    $set: {
                                                                        normalTime: normalTime,
                                                                        ot1Rule: OT1,
                                                                        ot2Rule: OT2,
                                                                        total: totalhours,
                                                                        totalRounded: totalhoursAdjusted,
                                                                        breaktaken: breaktaken,
                                                                        breaktaken2: breaktaken2,
                                                                        readFlag: true,
                                                                        allowances: allowancesArray
                                                                    }
                                                                }, {
                                                                    upsert: false,
                                                                    new: false
                                                                }, function(err, data) {
                                                                    if (err) {
                                                                        // console.log(err);
                                                                    } else {
                                                                        console.log("aaaaaaaaaaaaaaaaa.......");
                                                                        if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                            calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                // if(result) {
                                                                                //  res.json(true);
                                                                                // }
                                                                            })
                                                                        }
                                                                        shiftHoursForHolidays(shift, companyId, function(result) {
                                                                            //console.log('---------------*****************************************************');
                                                                            var holidayHoursShift = result;
                                                                            var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD');
                                                                            //var shiftAssign =
                                                                            if (holidayresult.indexOf(dateGive) > -1) {
                                                                                //   console.log(dateGive);
                                                                                // console.log('shiftshiftshift' + shift);
                                                                                if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                    var finalnormalTime = '';
                                                                                    var finalOT1 = '';
                                                                                    var finalOT2 = '';
                                                                                    console.log("888aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                    if (holidaymultiplier == 'NT') {
                                                                                        finalnormalTime = toSeconds(holidayHoursShift);
                                                                                        Attendance.update({
                                                                                            '_id': employeeAttendance._id,
                                                                                            'companyId': companyId
                                                                                        }, {
                                                                                            $set: {
                                                                                                normalTime: totalhoursAdjusted,
                                                                                                ot2Rule: '00:00:00',
                                                                                                ot1Rule: '00:00:00',
                                                                                                readFlag: true,
                                                                                                dayinLieu: holidayHoursShift,
                                                                                                Exception: holidayHoursShift,
                                                                                                exceptioncode: cmppayrollCode,
                                                                                                Exceptiontype: 'Holiday',
                                                                                                ExceptionAssign: 'Holiday',
                                                                                                cutException: '',
                                                                                                addweeklyexc: '',
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, data) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        })
                                                                                    }
                                                                                    if (holidaymultiplier == 'OT1') {
                                                                                        if (ot1Add == '') {
                                                                                            ot1Add = '00:00:00'
                                                                                        }
                                                                                        //console.log('holidayHoursShift');
                                                                                        finalOT1 = toSeconds(holidayHoursShift);
                                                                                        Attendance.update({
                                                                                            '_id': employeeAttendance._id,
                                                                                            'companyId': companyId
                                                                                        }, {
                                                                                            $set: {
                                                                                                ot1Rule: totalhoursAdjusted,
                                                                                                ot2Rule: '00:00:00',
                                                                                                normalTime: '00:00:00',
                                                                                                readFlag: true,
                                                                                                dayinLieu: holidayHoursShift,
                                                                                                Exception: holidayHoursShift,
                                                                                                exceptioncode: cmppayrollCode,
                                                                                                Exceptiontype: 'Holiday',
                                                                                                ExceptionAssign: 'Holiday',
                                                                                                cutException: '',
                                                                                                addweeklyexc: '',
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, data) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        })
                                                                                    }
                                                                                    if (holidaymultiplier == 'OT2') {
                                                                                        if (ot2Add == '') {
                                                                                            ot2Add = '00:00:00'
                                                                                        }
                                                                                        finalOT2 = toSeconds(holidayHoursShift);
                                                                                        Attendance.update({
                                                                                            '_id': employeeAttendance._id,
                                                                                            'companyId': companyId
                                                                                        }, {
                                                                                            $set: {
                                                                                                ot2Rule: totalhoursAdjusted,
                                                                                                ot1Rule: '00:00:00',
                                                                                                normalTime: '00:00:00',
                                                                                                readFlag: true,
                                                                                                dayinLieu: holidayHoursShift,
                                                                                                Exception: holidayHoursShift,
                                                                                                exceptioncode: cmppayrollCode,
                                                                                                Exceptiontype: 'Holiday',
                                                                                                ExceptionAssign: 'Holiday',
                                                                                                cutException: '',
                                                                                                addweeklyexc: '',
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, data) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        })
                                                                                    }
                                                                                    //console.log('calculate holiday hours');
                                                                                }
                                                                            }
                                                                        });
                                                                    }
                                                                }) //attendance update
                                                        } else {
                                                            getShiftData(shiftType, shift, companyId, function(result) {
                                                                var shift = result.name;
                                                                var shiftStartTime = new Date(Date.parse(result.startTime)).toUTCString();
                                                                var shiftFinishTime = new Date(Date.parse(result.finishTime)).toUTCString();
                                                                var startLimit = result.startLimit;
                                                                var finishLimit = result.finishLimit;
                                                                var ordinarytime = result.ordinarytime;
                                                                var overTime1 = result.overTime1;
                                                                var overTime2 = result.overTime2;
                                                                var breakTime = result.breakTime;
                                                                var breakAfter = result.breakAfter;
                                                                /*var ordinarytime = result.ordinarytime;
                                                                var overTime1 = result.overTime1;
                                                                var breakAfter = result.breakAfter;
                                                                var breakTime = result.breakTime;*/
                                                                var breakIn = result.breakIn;
                                                                var breakAfter2 = result.breakAfter2;
                                                                var breakTime2 = result.breakTime2;
                                                                var breakIn2 = result.breakIn2;
                                                                var OT1 = '00:00:00';
                                                                var OT2 = '00:00:00';
                                                                var allowances = result.allowance;
                                                                var timezoneListArray = [];
                                                                if (result.timeZones) {
                                                                    timezoneListArray = result.timeZones;
                                                                }
                                                                if (timezoneListArray.length > 0) {
                                                                    var timeZoneNTArray = [];
                                                                    var timeZoneOt1Array = [];
                                                                    var timeZoneOt2Array = [];
                                                                    result.timeZones.forEach(function(timezone) {
                                                                        if (timezone.payPeriod == "NT") {
                                                                            timeZoneNTArray.push({
                                                                                zoneName: timezone.zoneName,
                                                                                finishTime: timezone.finishTime,
                                                                                startTime: timezone.startTime
                                                                            });
                                                                        } else if (timezone.payPeriod == "OT1") {
                                                                            timeZoneOt1Array.push({
                                                                                zoneName: timezone.zoneName,
                                                                                finishTime: timezone.finishTime,
                                                                                startTime: timezone.startTime
                                                                            });
                                                                        } else if (timezone.payPeriod == "OT2") {
                                                                            timeZoneOt2Array.push({
                                                                                zoneName: timezone.zoneName,
                                                                                finishTime: timezone.finishTime,
                                                                                startTime: timezone.startTime
                                                                            });
                                                                        }
                                                                    });
                                                                    var arrays = {
                                                                        ntArray: timeZoneNTArray,
                                                                        ot1Array: timeZoneOt1Array,
                                                                        ot2Array: timeZoneOt2Array
                                                                    };
                                                                    devideHourIntoNt(employeeAttendance._id, companyId, arrays, function(ntTotal) {
                                                                        console.log("ntTotal.zoneName........." + ntTotal.zoneName);
                                                                        global.normalTime = '00:00:00';
                                                                        if (breakAfter) {
                                                                            if (!breakTime) {
                                                                                breakTime = '00:00:00';
                                                                            }
                                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                                totalhoursAdjustedHours = ntTotal.normalTime;
                                                                                if (breakIn == true) {
                                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                                } else {
                                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                                }
                                                                                // console.log(afterhours);
                                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                                afterhours %= 3600;
                                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                var totalhoursAdjusted = FinalHours;
                                                                                breaktaken = true;
                                                                            } else {
                                                                                var totalhoursAdjusted = ntTotal.normalTime;
                                                                            }
                                                                        } else {
                                                                            var totalhoursAdjusted = ntTotal.normalTime;
                                                                        }
                                                                        if (breakAfter2) {
                                                                            if (!breakTime2) {
                                                                                breakTime2 = '00:00:00';
                                                                            }
                                                                            // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                                if (breakIn2 == true) {
                                                                                    // console.log("iffffff");
                                                                                    var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                                } else {
                                                                                    // console.log("else iffffff")
                                                                                    var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                                }
                                                                                // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                                afterhours %= 3600;
                                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                var totalhoursAdjusted = FinalHours;
                                                                                breaktaken2 = true;
                                                                            } else {
                                                                                var totalhoursAdjusted = totalhoursAdjusted;
                                                                            }
                                                                        }
                                                                        totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = ntTotal.OT1;
                                                                        OT2 = ntTotal.OT2;
                                                                        if (OT1) {
                                                                            OT1 = changeFormat(OT1);
                                                                        }
                                                                        if (OT2) {
                                                                            OT2 = changeFormat(OT2);
                                                                        }
                                                                        var allowancesArray = [];
                                                                        if (allowances) {
                                                                            for (i = 0; i < allowances.length; i++) {
                                                                                var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                                var allowanceName = allowances[i].name;
                                                                                if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                                    allowancesArray.push({
                                                                                        name: allowanceName,
                                                                                        status: true
                                                                                    })
                                                                                } else {
                                                                                    allowancesArray.push({
                                                                                        name: allowanceName,
                                                                                        status: false
                                                                                    })
                                                                                }
                                                                            }
                                                                        }
                                                                        normalTimeAdd = normalTime;
                                                                        ot1Add = OT1;
                                                                        ot2Add = OT2;
                                                                        var NtOThours = toSeconds(OT2) + toSeconds(OT1) + toSeconds(normalTime);
                                                                        var hours1 = Math.floor(NtOThours / 3600);
                                                                        NtOThours %= 3600;
                                                                        var minutes1 = Math.floor(NtOThours / 60);
                                                                        var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                        totalRoundedAdd = FinalHours;
                                                                        if (totalhours) {
                                                                            totalhours = changeFormat(totalhours);
                                                                        }
                                                                        Attendance.update({
                                                                                '_id': employeeAttendance._id
                                                                            }, {
                                                                                $set: {
                                                                                    normalTime: normalTime,
                                                                                    ot1Rule: OT1,
                                                                                    ot2Rule: OT2,
                                                                                    total: totalhours,
                                                                                    totalRounded: FinalHours,
                                                                                    breaktaken: breaktaken,
                                                                                    breaktaken2: breaktaken2,
                                                                                    readFlag: true,
                                                                                    allowances: allowancesArray
                                                                                }
                                                                            }, {
                                                                                upsert: false,
                                                                                new: false
                                                                            }, function(err, data) {
                                                                                if (err) {
                                                                                    // console.log(err);
                                                                                } else {
                                                                                    if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                                        calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                            // if(result) {
                                                                                            //  res.json(true);
                                                                                            // }
                                                                                        })
                                                                                    }
                                                                                    shiftHoursForHolidays(shift, companyId, function(result) {
                                                                                        var holidayHoursShift = result;
                                                                                        var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD hh:mm:ss');
                                                                                        if (holidayresult.indexOf(dateGive) > -1) {
                                                                                            if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                                var finalnormalTime = '';
                                                                                                var finalOT1 = '';
                                                                                                var finalOT2 = '';
                                                                                                console.log("99999aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                                if (holidaymultiplier == 'NT') {
                                                                                                    finalnormalTime = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            normalTime: totalhoursAdjusted,
                                                                                                            ot2Rule: '00:00:00',
                                                                                                            ot1Rule: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                if (holidaymultiplier == 'OT1') {
                                                                                                    if (ot1Add == '') {
                                                                                                        ot1Add = '00:00:00'
                                                                                                    }
                                                                                                    //console.log('holidayHoursShift');
                                                                                                    finalOT1 = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            ot1Rule: totalhoursAdjusted,
                                                                                                            ot2Rule: '00:00:00',
                                                                                                            normalTime: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                if (holidaymultiplier == 'OT2') {
                                                                                                    if (ot2Add == '') {
                                                                                                        ot2Add = '00:00:00'
                                                                                                    }
                                                                                                    finalOT2 = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            ot2Rule: totalhoursAdjusted,
                                                                                                            ot1Rule: '00:00:00',
                                                                                                            normalTime: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                //console.log('calculate holiday hours');
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                }
                                                                            }) //attendance update
                                                                    });
                                                                } else {
                                                                    global.normalTime = '00:00:00';
                                                                    if (breakAfter) {
                                                                        if (!breakTime) {
                                                                            breakTime = '00:00:00';
                                                                        }
                                                                        if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                            if (breakIn == true) {
                                                                                var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);

                                                                            } else {
                                                                                var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                            }
                                                                            // console.log(afterhours);
                                                                            var hours1 = Math.floor(afterhours / 3600);
                                                                            afterhours %= 3600;
                                                                            var minutes1 = Math.floor(afterhours / 60);
                                                                            var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                            var totalhoursAdjusted = FinalHours;
                                                                            breaktaken = true;
                                                                        } else {
                                                                            var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                        }
                                                                    } else {
                                                                        var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                    }
                                                                    if (breakAfter2) {
                                                                        if (!breakTime2) {
                                                                            breakTime2 = '00:00:00';
                                                                        }
                                                                        // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                        if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                            if (breakIn2 == true) {
                                                                                // console.log("iffffff");
                                                                                var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                            } else {
                                                                                // console.log("else iffffff")
                                                                                var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                            }
                                                                            // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                            var hours1 = Math.floor(afterhours / 3600);
                                                                            afterhours %= 3600;
                                                                            var minutes1 = Math.floor(afterhours / 60);
                                                                            var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                            var totalhoursAdjusted = FinalHours;
                                                                            breaktaken2 = true;
                                                                        } else {
                                                                            var totalhoursAdjusted = totalhoursAdjusted;
                                                                        }
                                                                    }
                                                                    // console.log(totalhoursAdjusted +'totalhoursAdjusted');
                                                                    totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                                    // console.log(totalhoursAdjusted + 'after Format');
                                                                    if (dataCompany.isovertime) {
                                                                        if (weekly == 0) {
                                                                            if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                                if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                                    normalTime = ordinarytime;
                                                                                    totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                                    var Time1 = totalSeconds;
                                                                                    hours = Math.floor(Time1 / 3600);
                                                                                    Time1 %= 3600;
                                                                                    minutes = Math.floor(Time1 / 60);
                                                                                    seconds = Time1 % 60;
                                                                                    if (overTime1 != '00:00:00' && overTime1 != '') {
                                                                                        if (totalSeconds > toSeconds(overTime1)) {
                                                                                            console.log('asdas');
                                                                                            OT1 = overTime1;
                                                                                            var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                            hours = Math.floor(remaigntime / 3600);
                                                                                            remaigntime %= 3600;
                                                                                            minutes = Math.floor(remaigntime / 60);
                                                                                            seconds = remaigntime % 60;
                                                                                            OT2 = hours + ':' + minutes + ':' + seconds
                                                                                        } else {
                                                                                            console.log('not');
                                                                                            hours = Math.floor(totalSeconds / 3600);
                                                                                            totalSeconds %= 3600;
                                                                                            minutes = Math.floor(totalSeconds / 60);
                                                                                            seconds = totalSeconds % 60;
                                                                                            OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                            OT2 = '';
                                                                                        }
                                                                                    } else {
                                                                                        hours = Math.floor(totalSeconds / 3600);
                                                                                        totalSeconds %= 3600;
                                                                                        minutes = Math.floor(totalSeconds / 60);
                                                                                        seconds = totalSeconds % 60;
                                                                                        OT2 = '00:00:00';
                                                                                        OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                    }
                                                                                } else {
                                                                                    normalTime = totalhoursAdjusted;
                                                                                    OT1 = '';
                                                                                    OT2 = '';
                                                                                }
                                                                            } else {
                                                                                if (ordinarytime == '') {
                                                                                    normalTime = totalhoursAdjusted;
                                                                                    OT1 = '00:00:00';
                                                                                    OT2 = '00:00:00';
                                                                                } else {
                                                                                    if (dataCompany.overtimeLevel == "1" && dataCompany.overtimePeriod == 'daily') {
                                                                                        normalTime = '00:00:00';
                                                                                        OT1 = totalhoursAdjusted;
                                                                                        OT2 = '00:00:00';
                                                                                    } else {
                                                                                        normalTime = '00:00:00';
                                                                                        OT1 = '00:00:00';
                                                                                        OT2 = totalhoursAdjusted;
                                                                                    }
                                                                                }
                                                                                /*if(overTime1 != '00:00:00'){
                                                                                    var totalSeconds1 =  toSeconds(totalhoursAdjusted)
                                                                                    if(totalSeconds1 > toSeconds(overTime1)){
                                                                                        console.log('asdas');
                                                                                        OT1 = overTime1;
                                                                                        var remaigntime = totalSeconds1 - toSeconds(overTime1);
                                                                                        hours = Math.floor(remaigntime / 3600);
                                                                                        remaigntime %= 3600;
                                                                                        minutes = Math.floor(remaigntime / 60);
                                                                                        seconds = remaigntime % 60;
                                                                                        OT2 = hours+':'+minutes+':'+seconds;
                                                                                    }else{
                                                                                        console.log('not');
                                                                                        hours = Math.floor(totalSeconds1 / 3600);
                                                                                        totalSeconds1 %= 3600;
                                                                                        minutes = Math.floor(totalSeconds1 / 60);
                                                                                        seconds = totalSeconds1 % 60;
                                                                                        OT1 = hours+':'+minutes+':'+seconds;
                                                                                        OT2 = '';
                                                                                    }
                                                                                }else{
                                                                                    normalTime = '00:00:00';
                                                                                    OT1  = '00:00:00';
                                                                                    OT2 = totalhoursAdjusted;
                                                                                }*/
                                                                            }
                                                                        } //daily
                                                                        if (weekly == 1) {
                                                                            if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                                console.log(ordinarytime + 'ordinarytime');
                                                                                if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                                    normalTime = ordinarytime;
                                                                                    totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                                    var Time1 = totalSeconds;
                                                                                    hours = Math.floor(Time1 / 3600);
                                                                                    Time1 %= 3600;
                                                                                    minutes = Math.floor(Time1 / 60);
                                                                                    seconds = Time1 % 60;
                                                                                    if (totalSeconds > toSeconds(overTime1) && overTime1 != '00:00:00') {
                                                                                        OT1 = overTime1;
                                                                                        var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                        hours = Math.floor(remaigntime / 3600);
                                                                                        remaigntime %= 3600;
                                                                                        minutes = Math.floor(remaigntime / 60);
                                                                                        seconds = remaigntime % 60;
                                                                                        OT2 = hours + ':' + minutes + ':' + seconds;
                                                                                    } else {
                                                                                        hours = Math.floor(totalSeconds / 3600);
                                                                                        totalSeconds %= 3600;
                                                                                        minutes = Math.floor(totalSeconds / 60);
                                                                                        seconds = totalSeconds % 60;
                                                                                        OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                        OT2 = '';
                                                                                    }
                                                                                } else {
                                                                                    normalTime = totalhoursAdjusted;
                                                                                    OT1 = '';
                                                                                    OT2 = '';
                                                                                }
                                                                            } else {
                                                                                normalTime = totalhoursAdjusted;
                                                                                OT1 = '';
                                                                                OT2 = '';
                                                                            }
                                                                        } //weekly
                                                                    } else {
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = '00:00:00';
                                                                        OT2 = '00:00:00';
                                                                    }
                                                                    if (OT1) {
                                                                        OT1 = changeFormat(OT1);
                                                                    }
                                                                    if (OT2) {
                                                                        OT2 = changeFormat(OT2);
                                                                    }
                                                                    var allowancesArray = [];
                                                                    if (allowances) {
                                                                        // console.log(allowances +'assign------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                                        for (i = 0; i < allowances.length; i++) {
                                                                            // console.log(allowances[i].name);
                                                                            // console.log(allowances[i].payAfter);
                                                                            var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                            var allowanceName = allowances[i].name;
                                                                            if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                                // console.log(toSeconds(totalhoursAdjusted));
                                                                                // console.log(toSeconds(payAfter));
                                                                                allowancesArray.push({
                                                                                    name: allowanceName,
                                                                                    status: true
                                                                                })
                                                                            } else {
                                                                                allowancesArray.push({
                                                                                    name: allowanceName,
                                                                                    status: false
                                                                                })
                                                                            }
                                                                        }
                                                                    }
                                                                    // console.log(allowancesArray + '66666666666666666666666666666');
                                                                    // console.log(totalhours+'Final total Hours');
                                                                    // console.log(totalhoursAdjusted + 'totalhoursAdjustedHours11111111111');
                                                                    // console.log(normalTime+'normalTime');
                                                                    // console.log(OT1+'ot1');
                                                                    // console.log(OT2+'ot2');
                                                                    // console.log('==========');
                                                                    // console.log(breakAfter +'breakAfter');
                                                                    // console.log(breaktaken +'breaktaken');
                                                                    normalTimeAdd = normalTime;
                                                                    ot1Add = OT1;
                                                                    ot2Add = OT2;
                                                                    totalRoundedAdd = totalhoursAdjusted;
                                                                    if (totalhours) {
                                                                        totalhours = changeFormat(totalhours);
                                                                    }
                                                                    Attendance.update({
                                                                        '_id': employeeAttendance._id
                                                                    }, {
                                                                        $set: {
                                                                            normalTime: normalTime,
                                                                            ot1Rule: OT1,
                                                                            ot2Rule: OT2,
                                                                            total: totalhours,
                                                                            totalRounded: totalhoursAdjusted,
                                                                            breaktaken: breaktaken,
                                                                            breaktaken2: breaktaken2,
                                                                            readFlag: true,
                                                                            allowances: allowancesArray
                                                                        }
                                                                    }, {
                                                                        upsert: false,
                                                                        new: false
                                                                    }, function(err, data) {
                                                                        if (err) {
                                                                            // console.log(err);
                                                                        } else {
                                                                            if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                                calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                    // if(result) {
                                                                                    //  res.json(true);
                                                                                    // }
                                                                                })
                                                                            }
                                                                            shiftHoursForHolidays(shift, companyId, function(result) {
                                                                                var holidayHoursShift = result;
                                                                                var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD');
                                                                                //var shiftAssign =
                                                                                if (holidayresult.indexOf(dateGive) > -1) {
                                                                                    // console.log(dateGive);
                                                                                    // console.log('shiftshiftshift' + shift);
                                                                                    if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                        var finalnormalTime = '';
                                                                                        var finalOT1 = '';
                                                                                        var finalOT2 = '';
                                                                                        console.log("1000aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                        if (holidaymultiplier == 'NT') {
                                                                                            finalnormalTime = toSeconds(holidayHoursShift);
                                                                                            Attendance.update({
                                                                                                '_id': employeeAttendance._id,
                                                                                                'companyId': companyId
                                                                                            }, {
                                                                                                $set: {
                                                                                                    normalTime: totalhoursAdjusted,
                                                                                                    ot2Rule: '00:00:00',
                                                                                                    ot1Rule: '00:00:00',
                                                                                                    readFlag: true,
                                                                                                    dayinLieu: holidayHoursShift,
                                                                                                    Exception: holidayHoursShift,
                                                                                                    exceptioncode: cmppayrollCode,
                                                                                                    Exceptiontype: 'Holiday',
                                                                                                    ExceptionAssign: 'Holiday',
                                                                                                    cutException: '',
                                                                                                    addweeklyexc: '',
                                                                                                }
                                                                                            }, {
                                                                                                upsert: false,
                                                                                                new: false
                                                                                            }, function(err, data) {
                                                                                                if (err) {
                                                                                                    // console.log(err);
                                                                                                }
                                                                                            })
                                                                                        }

                                                                                        if (holidaymultiplier == 'OT1') {
                                                                                            if (ot1Add == '') {
                                                                                                ot1Add = '00:00:00'
                                                                                            }
                                                                                            // console.log('holidayHoursShift');
                                                                                            finalOT1 = toSeconds(holidayHoursShift);
                                                                                            Attendance.update({
                                                                                                '_id': employeeAttendance._id,
                                                                                                'companyId': companyId
                                                                                            }, {
                                                                                                $set: {
                                                                                                    ot1Rule: totalhoursAdjusted,
                                                                                                    ot2Rule: '00:00:00',
                                                                                                    normalTime: '00:00:00',
                                                                                                    readFlag: true,
                                                                                                    dayinLieu: holidayHoursShift,
                                                                                                    Exception: holidayHoursShift,
                                                                                                    exceptioncode: cmppayrollCode,
                                                                                                    Exceptiontype: 'Holiday',
                                                                                                    ExceptionAssign: 'Holiday',
                                                                                                    cutException: '',
                                                                                                    addweeklyexc: '',
                                                                                                }
                                                                                            }, {
                                                                                                upsert: false,
                                                                                                new: false
                                                                                            }, function(err, data) {
                                                                                                if (err) {
                                                                                                    // console.log(err);
                                                                                                }
                                                                                            })
                                                                                        }

                                                                                        if (holidaymultiplier == 'OT2') {
                                                                                            if (ot2Add == '') {
                                                                                                ot2Add = '00:00:00'
                                                                                            }
                                                                                            finalOT2 = toSeconds(holidayHoursShift);
                                                                                            Attendance.update({
                                                                                                '_id': employeeAttendance._id,
                                                                                                'companyId': companyId
                                                                                            }, {
                                                                                                $set: {
                                                                                                    ot2Rule: totalhoursAdjusted,
                                                                                                    ot1Rule: '00:00:00',
                                                                                                    normalTime: '00:00:00',
                                                                                                    readFlag: true,
                                                                                                    dayinLieu: holidayHoursShift,
                                                                                                    Exception: holidayHoursShift,
                                                                                                    exceptioncode: cmppayrollCode,
                                                                                                    Exceptiontype: 'Holiday',
                                                                                                    ExceptionAssign: 'Holiday',
                                                                                                    cutException: '',
                                                                                                    addweeklyexc: '',
                                                                                                }
                                                                                            }, {
                                                                                                upsert: false,
                                                                                                new: false
                                                                                            }, function(err, data) {
                                                                                                if (err) {
                                                                                                    // console.log(err);
                                                                                                }
                                                                                            })
                                                                                        }
                                                                                        // console.log('calculate holiday hours');
                                                                                    }

                                                                                }
                                                                            });
                                                                        }
                                                                    }); //attendance update
                                                                }
                                                            }); //shiftData
                                                        }
                                                    }) //totalhours
                                            }
                                        })
                                    }
                                }
                            }
                            n++;
                        }
                    } //in-out else and totalH
                } else {
                    //rounding
                    console.log("else not dataCompany.isrounding");
                    // console.log(adminDetails);
                    // console.log(checkin.alterWho);
                    // console.log(employeeAttendance.employeeNo);
                    // console.log(checkType);

                    if (adminDetails.userType == "mainAdmin" || adminDetails.userType == "subAdmin") {
                        if (checkType == 1 || checkType == 2 || checkType == 'i' || checkType == 'I') {
                            if (workCode) {
                                checkinWorkcode.push(workCode);
                            }
                            console.log('limitIn-------------' + limitIn);
                            var interval = parseInt(inRounding);
                            var minuteAfter = parseInt(inroundupafter);
                            var strtInt = 0;
                            var finalValue = 0;
                            var theArray = [0];
                            var remaign = 0;
                            var seconds = 0;
                            var finishSeconds = 0;
                            console.log(interval + 'interval');
                            console.log(minuteAfter + 'minuteAfter');
                            while (strtInt < 60) {
                                strtInt = strtInt + interval;
                                // console.log('minute'+minute);
                                remaign = minute % interval;
                                theArray.push(strtInt);
                                // console.log(theArray);
                                // console.log(remaign);
                            }
                            var closestNumber = closest(parseInt(minute), theArray, minuteAfter);
                            if (n == 1) {
                                if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(startHour + ':' + startMinute + ':00')) {
                                    lateIn = '1';
                                } else {
                                    lateIn = '0';
                                }
                            }
                            if (limitIn == true && n == 1) {
                                if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(startHour + ':' + startMinute + ':00')) {
                                    var finalV = toSeconds(startHour + ':' + startMinute + ':00');
                                    seconds = finalV;
                                }
                                if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(startHour + ':' + startMinute + ':00')) {

                                    finalValue = closestNumber;
                                } else {
                                    finalValue = parseInt(minute);
                                }
                            } else {
                                if (limitIn == true) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                        var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                        finishSeconds = finalV;
                                    } else if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(startHour + ':' + startMinute + ':00')) {
                                        var finalV = toSeconds(startHour + ':' + startMinute + ':00');
                                        seconds = finalV;
                                    } else {
                                        finalValue = closestNumber;
                                    }
                                } else {
                                    finalValue = closestNumber;
                                }
                            }
                            if (finishSeconds) {
                                var Hourset = Moment.utc(checkTime).set('hours', finishHour);
                                var date = Moment.utc(Hourset).set('minute', finishMinute);
                            } else if (seconds) {
                                var Hourset = Moment.utc(checkTime).set('hours', startHour);
                                var date = Moment.utc(Hourset).set('minute', startMinute);
                            } else {
                                var date = Moment.utc(checkTime).set('minute', finalValue);
                            }
                            console.log(date + ']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]');
                            var inAdjusted = new Date(Date.parse(date)).toUTCString();
                            if (n == 1) {
                                nextOrder.push(0);
                                var In = checkin.checkTime;
                                checkinTotal.push(In);
                                checkinTotalAdjusted.push(inAdjusted);
                                //console.log('In array');
                            } else {
                                if (isInArray(parseInt(1), nextOrder)) {
                                    nextOrder.length = 0;
                                    nextOrder.push(0);
                                    var In = checkin.checkTime;
                                    checkinTotal.push(In);
                                    checkinTotalAdjusted.push(inAdjusted);
                                    //console.log('In');
                                } else {
                                    checkinTotal.length = 0;
                                    checkinTotalAdjusted.length = 0;
                                    //console.log(checkinWorkcodeVal + '---------------------------------------------------------checkinWorkcodeVal');
                                    checkinWorkcode.length = 0;
                                }
                            }
                            console.log(checkTime + 'checkTime +++++++++++++++++++++');
                            console.log(inAdjusted + 'inAdjusted +++++++++++++++++++');
                            Attendance.update({
                                '_id': employeeAttendance._id,
                                'checkin.checkTime': checkin.checkTime
                            }, {
                                $set: {
                                    "checkin.$.inAdjusted": inAdjusted,
                                }
                            }, {
                                upsert: false,
                                new: false
                            }, function(err, data) {
                                if (err) {
                                    console.log(err);
                                } else {
                                    // console.log("true");
                                    // if(flagForchk == employeeAttendance.checkin.length) {
                                    //  callback(1);
                                    // }
                                }
                            })
                        } else {
                            console.log('checkType....' + checkType);
                            if (workCode) {
                                checkinWorkcode.push(workCode)
                            }
                            console.log('sdfffffffffffffffffffffffffffffffffffffff');
                            var interval = parseInt(outRounding);
                            var minuteAfter = parseInt(outroundupafter);
                            var strtInt = 0;
                            var finalValue = 0;
                            var theArray = [0];
                            var remaign = 0;
                            while (strtInt < 60) {
                                strtInt = strtInt + interval;
                                remaign = minute % interval;
                                theArray.push(strtInt);
                            }
                            var closestNumber = closest(parseInt(minute), theArray, minuteAfter);
                            if (n == (employeeAttendance.checkin.length)) {
                                if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                    lateOut = '1';
                                } else {
                                    lateOut = '0';
                                }
                            }
                            // console.log(n+'----'+employeeAttendance.checkin.length+'--------------------------------------------------');
                            if (limitOut == true && n == (employeeAttendance.checkin.length)) {
                                // console.log('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');
                                if (shiftStartDate == shiftFinishDate) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                        // console.log('lesss');
                                        finalValue = closestNumber;
                                    } else {
                                        var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                        seconds = finalV;
                                    }
                                } else {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00') && checkinTimeDate == shiftFinishDate) {
                                        var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                        // console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                        seconds = finalV;
                                    } else {
                                        finalValue = closestNumber;
                                    }
                                }
                            } else {
                                if (limitOut == true && n == (employeeAttendance.checkin.length)) {
                                    // console.log('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                        outAdjusted = checkTime;
                                        // console.log('finish Hours');
                                    } else {
                                        var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                        // console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                        seconds = finalV;
                                    }
                                } else {
                                    if (limitOut == true) {
                                        if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                            var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                            //console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                            seconds = finalV;
                                        } else {
                                            finalValue = closestNumber;
                                        }
                                    } else {
                                        finalValue = closestNumber;
                                    }
                                }
                            }
                            if (seconds) {
                                var Hourset = Moment.utc(checkTime).set('hours', finishHour);
                                var date = Moment.utc(Hourset).set('minute', finishMinute);
                            } else {
                                var date = Moment.utc(checkTime).set('minute', finalValue);
                            }
                            var outAdjusted = new Date(Date.parse(date)).toUTCString();
                            // console.log(outAdjusted + 'outAdjustedoutAdjustedoutAdjusted');
                            // console.log(nextOrder + 'nextOrder');
                            if (isInArray(parseInt(0), nextOrder)) {
                                nextOrder.length = 0;
                                nextOrder.push(1);
                                var Out = checkin.checkTime;
                                checkinTotal.push(Out);
                                checkinTotalAdjusted.push(outAdjusted);
                                if (checkinWorkcode.length > 0) {
                                    checkinWorkcodeVal = checkinWorkcode[0];
                                } else {
                                    checkinWorkcodeVal = '99999';
                                }
                                if (checkinTotal.length == 2) {
                                    var InVAlue = new Date(Date.parse(checkinTotal[0])).toUTCString();
                                    var OutValue = new Date(Date.parse(checkinTotal[1])).toUTCString();

                                    var Inadjusted = new Date(Date.parse(checkinTotalAdjusted[0])).toUTCString();
                                    var outadjusted = new Date(Date.parse(checkinTotalAdjusted[1])).toUTCString();

                                    var inn = Moment(InVAlue).format('DD/MM/YYYY HH:mm');
                                    var out = Moment(OutValue).format('DD/MM/YYYY HH:mm');

                                    //   console.log(Inadjusted + 'Inadjusted ===========================');
                                    // console.log(outadjusted + 'outadjusted ============================');

                                    var ms = Moment(out, "DD/MM/YYYY HH:mm:ss").diff(Moment(inn, "DD/MM/YYYY HH:mm:ss"));
                                    var d = Moment.duration(ms);
                                    var totalhours = Math.floor(d.asHours()) + Moment.utc(ms).format(":mm:ss");

                                    var innAdj = Moment(Inadjusted).format('DD/MM/YYYY HH:mm');
                                    var outAdj = Moment(outadjusted).format('DD/MM/YYYY HH:mm');

                                    var msAdjusted = Moment(outAdj, "DD/MM/YYYY HH:mm:ss").diff(Moment(innAdj, "DD/MM/YYYY HH:mm:ss"));
                                    var dAdjusted = Moment.duration(msAdjusted);
                                    var totalhoursAdjusted = Math.floor(dAdjusted.asHours()) + Moment.utc(msAdjusted).format(":mm:ss");
                                    if (totalhoursAdjusted.indexOf("-") > -1) {
                                        totalhoursAdjusted = '00:00:00';
                                    }
                                    checkinTotal.length = 0;
                                    checkinTotalAdjusted.length = 0;
                                    //console.log(checkinWorkcodeVal + '---------------------------------------------------------checkinWorkcodeVal');
                                    checkinWorkcode.length = 0;
                                    //console.log(outAdjusted + 'outAdjusted }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                    Attendance.update({
                                        '_id': employeeAttendance._id,
                                        'checkin.checkTime': checkin.checkTime
                                    }, {
                                        $set: {
                                            "checkin.$.outAdjusted": outAdjusted,
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {
                                            //console.log(err);
                                        } else {
                                            var datec = Moment(outadjusted).format('YYYY-MM-DD');
                                            Dashboard.update({
                                                weekEnd: {
                                                    $gte: datec
                                                },
                                                weekStart: {
                                                    $lte: datec
                                                },
                                                'companyId': companyId
                                            }, {
                                                $set: {
                                                    calfalg: false
                                                }
                                            }, {
                                                upsert: false,
                                                new: false,
                                                multi: true
                                            }, function(err, data) {
                                                if (err) {
                                                    // console.log(err);
                                                }
                                            });
                                        }
                                    })
                                    Attendance.update({
                                        '_id': employeeAttendance._id,
                                        'totalValues.checkinNo': {
                                            $ne: flagForchk
                                        }
                                    }, {
                                        $set: {
                                            lateIn: lateIn,
                                            lateOut: lateOut,
                                        },
                                        $push: {
                                            totalValues: {
                                                total: totalhours,
                                                totalAdjusted: totalhoursAdjusted,
                                                checkinNo: flagForchk,
                                                workCode: checkinWorkcodeVal
                                            }
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {
                                            // console.log(err);
                                        } else {
                                            var shift = employeeAttendance.shift;
                                            var shiftType = employeeAttendance.shiftType;
                                            if (!shift) {
                                                Attendance.update({
                                                    '_id': employeeAttendance._id
                                                }, {
                                                    $set: {
                                                        readFlag: true,
                                                    }
                                                }, {
                                                    upsert: false,
                                                    new: false
                                                }, function(err, data) {
                                                    if (err) {
                                                        // console.log(err);
                                                    }
                                                });
                                            }
                                            console.log("totalhoursFn...");
                                            totalhoursFn(employeeAttendance._id, companyId, function(result) {
                                                    var totalhours = result[0];
                                                    var totalhoursAdjustedHours = result[1];
                                                    // console.log(totalhoursAdjustedHours + 'totalhoursAdjustedHours *******************');
                                                    // console.log(totalhours+'totalWorkingHours *****************************');
                                                    var weeklyOT1 = 0;
                                                    if (ExceptionAssign) {
                                                        // console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                        shift = lastShift;
                                                    } else {
                                                        shift = employeeAttendance.shift;
                                                    }
                                                    if (shiftType == "customShift") {
                                                        console.log("if customShift..");
                                                        // console.log(employeeAttendance);
                                                        // var shift = result.name;
                                                        var shiftStartTime = new Date(Date.parse(employeeAttendance.shiftStart)).toUTCString();
                                                        var shiftFinishTime = new Date(Date.parse(employeeAttendance.shiftFinish)).toUTCString();
                                                        var startLimit = employeeAttendance.limitIn;
                                                        var finishLimit = employeeAttendance.limitOut;
                                                        // var ordinarytime = employeeAttendance.ordinarytime;
                                                        // var overTime1 = employeeAttendance.overTime1;
                                                        // var overTime2 = employeeAttendance.overTime2;
                                                        var ordinarytime = "";
                                                        var overTime1 = "";
                                                        var overTime2 = "";

                                                        var breakTime = employeeAttendance.breakk;
                                                        var breakAfter = employeeAttendance.breakAfter;
                                                        /*var ordinarytime = result.ordinarytime;
                                                        var overTime1 = result.overTime1;
                                                        var breakAfter = result.breakAfter;
                                                        var breakTime = result.breakTime;*/
                                                        var breakIn = employeeAttendance.breakIn;
                                                        var breakAfter2 = employeeAttendance.breakAfter2;
                                                        var breakTime2 = employeeAttendance.breakTime2;
                                                        var breakIn2 = employeeAttendance.breakIn2;

                                                        var OT1 = '00:00:00';
                                                        var OT2 = '00:00:00';
                                                        var allowances = employeeAttendance.allowance;
                                                        global.normalTime = '00:00:00';
                                                        if (breakAfter) {
                                                            if (!breakTime) {
                                                                breakTime = '00:00:00';
                                                            }
                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                if (breakIn == true) {
                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                } else {
                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                }
                                                                // console.log(afterhours);
                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                afterhours %= 3600;
                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                var totalhoursAdjusted = FinalHours;
                                                                breaktaken = true;
                                                            } else {
                                                                var totalhoursAdjusted = totalhoursAdjustedHours;
                                                            }
                                                        } else {
                                                            var totalhoursAdjusted = totalhoursAdjustedHours;
                                                        }
                                                        if (breakAfter2) {
                                                            if (!breakTime2) {
                                                                breakTime2 = '00:00:00';
                                                            }
                                                            // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                if (breakIn2 == true) {
                                                                    // console.log("iffffff");
                                                                    var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                } else {
                                                                    // console.log("else iffffff")
                                                                    var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                }
                                                                // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                afterhours %= 3600;
                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                var totalhoursAdjusted = FinalHours;
                                                                breaktaken2 = true;
                                                            } else {
                                                                var totalhoursAdjusted = totalhoursAdjusted;
                                                            }
                                                        }
                                                        //console.log(totalhoursAdjusted +'totalhoursAdjusted');
                                                        totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                        //console.log(totalhoursAdjusted + 'after Format');
                                                        if (dataCompany.isovertime) {
                                                            console.log('overtime');
                                                            if (weekly == 0) {
                                                                if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                        normalTime = ordinarytime;
                                                                        totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                        var Time1 = totalSeconds;
                                                                        hours = Math.floor(Time1 / 3600);
                                                                        Time1 %= 3600;
                                                                        minutes = Math.floor(Time1 / 60);
                                                                        seconds = Time1 % 60;
                                                                        if (overTime1 != '00:00:00' && overTime1 != '') {
                                                                            if (totalSeconds > toSeconds(overTime1)) {
                                                                                console.log('asdas');
                                                                                OT1 = overTime1;
                                                                                var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                hours = Math.floor(remaigntime / 3600);
                                                                                remaigntime %= 3600;
                                                                                minutes = Math.floor(remaigntime / 60);
                                                                                seconds = remaigntime % 60;
                                                                                OT2 = hours + ':' + minutes + ':' + seconds
                                                                            } else {
                                                                                console.log('not');
                                                                                hours = Math.floor(totalSeconds / 3600);
                                                                                totalSeconds %= 3600;
                                                                                minutes = Math.floor(totalSeconds / 60);
                                                                                seconds = totalSeconds % 60;
                                                                                OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                OT2 = '';
                                                                            }
                                                                        } else {
                                                                            hours = Math.floor(totalSeconds / 3600);
                                                                            totalSeconds %= 3600;
                                                                            minutes = Math.floor(totalSeconds / 60);
                                                                            seconds = totalSeconds % 60;
                                                                            OT2 = '00:00:00';
                                                                            OT1 = hours + ':' + minutes + ':' + seconds;
                                                                        }
                                                                    } else {
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = '';
                                                                        OT2 = '';
                                                                    }
                                                                } else {
                                                                    if (ordinarytime == '') {
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = '00:00:00';
                                                                        OT2 = '00:00:00';
                                                                    } else {
                                                                        if (dataCompany.overtimeLevel == "1" && dataCompany.overtimePeriod == 'daily') {
                                                                            normalTime = '00:00:00';
                                                                            OT1 = totalhoursAdjusted;
                                                                            OT2 = '00:00:00';
                                                                        } else {
                                                                            normalTime = '00:00:00';
                                                                            OT1 = '00:00:00';
                                                                            OT2 = totalhoursAdjusted;
                                                                        }
                                                                    }
                                                                    // if(overTime1 != '00:00:00'){
                                                                    //  var totalSeconds1 =  toSeconds(totalhoursAdjusted)
                                                                    //  if(totalSeconds1 > toSeconds(overTime1)){
                                                                    //    console.log('asdas');
                                                                    //    OT1 = overTime1;
                                                                    //    var remaigntime = totalSeconds1 - toSeconds(overTime1);
                                                                    //    hours = Math.floor(remaigntime / 3600);
                                                                    //    remaigntime %= 3600;
                                                                    //    minutes = Math.floor(remaigntime / 60);
                                                                    //    seconds = remaigntime % 60;
                                                                    //    OT2 = hours+':'+minutes+':'+seconds;
                                                                    //  }else{
                                                                    //    console.log('not');
                                                                    //    hours = Math.floor(totalSeconds1 / 3600);
                                                                    //    totalSeconds1 %= 3600;
                                                                    //    minutes = Math.floor(totalSeconds1 / 60);
                                                                    //    seconds = totalSeconds1 % 60;
                                                                    //    OT1 = hours+':'+minutes+':'+seconds;
                                                                    //    OT2 = '';
                                                                    //  }
                                                                    // }else{
                                                                    //  normalTime = '00:00:00';
                                                                    //  OT1  = '00:00:00';
                                                                    //  OT2 = totalhoursAdjusted;
                                                                    // }
                                                                }
                                                            } //daily
                                                            if (weekly == 1) {
                                                                if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                    console.log(ordinarytime + 'ordinarytime');
                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                        normalTime = ordinarytime;
                                                                        totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                        var Time1 = totalSeconds;
                                                                        hours = Math.floor(Time1 / 3600);
                                                                        Time1 %= 3600;
                                                                        minutes = Math.floor(Time1 / 60);
                                                                        seconds = Time1 % 60;
                                                                        if (totalSeconds > toSeconds(overTime1) && overTime1 != '00:00:00') {
                                                                            OT1 = overTime1;
                                                                            var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                            hours = Math.floor(remaigntime / 3600);
                                                                            remaigntime %= 3600;
                                                                            minutes = Math.floor(remaigntime / 60);
                                                                            seconds = remaigntime % 60;
                                                                            OT2 = hours + ':' + minutes + ':' + seconds;
                                                                        } else {
                                                                            hours = Math.floor(totalSeconds / 3600);
                                                                            totalSeconds %= 3600;
                                                                            minutes = Math.floor(totalSeconds / 60);
                                                                            seconds = totalSeconds % 60;
                                                                            OT1 = hours + ':' + minutes + ':' + seconds;
                                                                            OT2 = '';
                                                                        }
                                                                    } else {
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = '';
                                                                        OT2 = '';
                                                                    }
                                                                } else {
                                                                    normalTime = totalhoursAdjusted;
                                                                    OT1 = '';
                                                                    OT2 = '';
                                                                }
                                                            } //weekly
                                                        } else {
                                                            normalTime = totalhoursAdjusted;
                                                            OT1 = '00:00:00';
                                                            OT2 = '00:00:00';
                                                        }
                                                        if (OT1) {
                                                            OT1 = changeFormat(OT1);
                                                        }
                                                        if (OT2) {
                                                            OT2 = changeFormat(OT2);
                                                        }
                                                        var allowancesArray = [];
                                                        if (allowances) {
                                                            // console.log(allowances +'assign------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                            for (i = 0; i < allowances.length; i++) {
                                                                // console.log(allowances[i].name);
                                                                // console.log(allowances[i].payAfter);
                                                                var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                var allowanceName = allowances[i].name;
                                                                if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                    // console.log(toSeconds(totalhoursAdjusted));
                                                                    // console.log(toSeconds(payAfter));
                                                                    allowancesArray.push({
                                                                        name: allowanceName,
                                                                        status: true
                                                                    })
                                                                } else {
                                                                    allowancesArray.push({
                                                                        name: allowanceName,
                                                                        status: false
                                                                    })
                                                                }
                                                            }
                                                        }

                                                        // console.log(allowancesArray + '66666666666666666666666666666');
                                                        // console.log(totalhours+'Final total Hours');
                                                        // console.log(totalhoursAdjusted + 'totalhoursAdjustedHours11111111111');
                                                        console.log(normalTime + 'normalTime');
                                                        console.log(OT1 + 'ot1');
                                                        console.log(OT2 + 'ot2');
                                                        console.log('==========');
                                                        console.log(breakAfter + 'breakAfter');
                                                        console.log(breaktaken + 'breaktaken');
                                                        normalTimeAdd = normalTime;
                                                        ot1Add = OT1;
                                                        ot2Add = OT2;
                                                        totalRoundedAdd = totalhoursAdjusted;
                                                        if (totalhours) {
                                                            totalhours = changeFormat(totalhours);
                                                        }
                                                        Attendance.update({
                                                                '_id': employeeAttendance._id
                                                            }, {
                                                                $set: {
                                                                    normalTime: normalTime,
                                                                    ot1Rule: OT1,
                                                                    ot2Rule: OT2,
                                                                    total: totalhours,
                                                                    totalRounded: totalhoursAdjusted,
                                                                    breaktaken: breaktaken,
                                                                    breaktaken2: breaktaken2,
                                                                    readFlag: true,
                                                                    allowances: allowancesArray
                                                                }
                                                            }, {
                                                                upsert: false,
                                                                new: false
                                                            }, function(err, data) {
                                                                if (err) {
                                                                    // console.log(err);
                                                                } else {
                                                                    console.log("aaaaaaaaaaaaaaaaa.......");
                                                                    if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                        calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                            // if(result) {
                                                                            //  res.json(true);
                                                                            // }
                                                                        })
                                                                    }
                                                                    shiftHoursForHolidays(shift, companyId, function(result) {
                                                                        //console.log('---------------*****************************************************');
                                                                        var holidayHoursShift = result;
                                                                        var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD');
                                                                        //var shiftAssign =
                                                                        if (holidayresult.indexOf(dateGive) > -1) {
                                                                            //   console.log(dateGive);
                                                                            // console.log('shiftshiftshift' + shift);
                                                                            if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                var finalnormalTime = '';
                                                                                var finalOT1 = '';
                                                                                var finalOT2 = '';
                                                                                console.log("1111aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                if (holidaymultiplier == 'NT') {
                                                                                    finalnormalTime = toSeconds(holidayHoursShift);
                                                                                    Attendance.update({
                                                                                        '_id': employeeAttendance._id,
                                                                                        'companyId': companyId
                                                                                    }, {
                                                                                        $set: {
                                                                                            normalTime: totalhoursAdjusted,
                                                                                            ot2Rule: '00:00:00',
                                                                                            ot1Rule: '00:00:00',
                                                                                            readFlag: true,
                                                                                            dayinLieu: holidayHoursShift,
                                                                                            Exception: holidayHoursShift,
                                                                                            exceptioncode: cmppayrollCode,
                                                                                            Exceptiontype: 'Holiday',
                                                                                            ExceptionAssign: 'Holiday',
                                                                                            cutException: '',
                                                                                            addweeklyexc: '',
                                                                                        }
                                                                                    }, {
                                                                                        upsert: false,
                                                                                        new: false
                                                                                    }, function(err, data) {
                                                                                        if (err) {
                                                                                            // console.log(err);
                                                                                        }
                                                                                    })
                                                                                }
                                                                                if (holidaymultiplier == 'OT1') {
                                                                                    if (ot1Add == '') {
                                                                                        ot1Add = '00:00:00'
                                                                                    }
                                                                                    //console.log('holidayHoursShift');
                                                                                    finalOT1 = toSeconds(holidayHoursShift);
                                                                                    Attendance.update({
                                                                                        '_id': employeeAttendance._id,
                                                                                        'companyId': companyId
                                                                                    }, {
                                                                                        $set: {
                                                                                            ot1Rule: totalhoursAdjusted,
                                                                                            ot2Rule: '00:00:00',
                                                                                            normalTime: '00:00:00',
                                                                                            readFlag: true,
                                                                                            dayinLieu: holidayHoursShift,
                                                                                            Exception: holidayHoursShift,
                                                                                            exceptioncode: cmppayrollCode,
                                                                                            Exceptiontype: 'Holiday',
                                                                                            ExceptionAssign: 'Holiday',
                                                                                            cutException: '',
                                                                                            addweeklyexc: '',
                                                                                        }
                                                                                    }, {
                                                                                        upsert: false,
                                                                                        new: false
                                                                                    }, function(err, data) {
                                                                                        if (err) {
                                                                                            // console.log(err);
                                                                                        }
                                                                                    })
                                                                                }
                                                                                if (holidaymultiplier == 'OT2') {
                                                                                    if (ot2Add == '') {
                                                                                        ot2Add = '00:00:00'
                                                                                    }
                                                                                    finalOT2 = toSeconds(holidayHoursShift);
                                                                                    Attendance.update({
                                                                                        '_id': employeeAttendance._id,
                                                                                        'companyId': companyId
                                                                                    }, {
                                                                                        $set: {
                                                                                            ot2Rule: totalhoursAdjusted,
                                                                                            ot1Rule: '00:00:00',
                                                                                            normalTime: '00:00:00',
                                                                                            readFlag: true,
                                                                                            dayinLieu: holidayHoursShift,
                                                                                            Exception: holidayHoursShift,
                                                                                            exceptioncode: cmppayrollCode,
                                                                                            Exceptiontype: 'Holiday',
                                                                                            ExceptionAssign: 'Holiday',
                                                                                            cutException: '',
                                                                                            addweeklyexc: '',
                                                                                        }
                                                                                    }, {
                                                                                        upsert: false,
                                                                                        new: false
                                                                                    }, function(err, data) {
                                                                                        if (err) {
                                                                                            // console.log(err);
                                                                                        }
                                                                                    })
                                                                                }
                                                                                //console.log('calculate holiday hours');
                                                                            }
                                                                        }
                                                                    });
                                                                }
                                                            }) //attendance update
                                                    } else {
                                                        getShiftData(shiftType, shift, companyId, function(result) {
                                                                // console.log(result);
                                                                var shift = result.name;
                                                                var shiftStartTime = new Date(Date.parse(result.startTime)).toUTCString();
                                                                var shiftFinishTime = new Date(Date.parse(result.finishTime)).toUTCString();
                                                                var startLimit = result.startLimit;
                                                                var finishLimit = result.finishLimit;
                                                                var ordinarytime = result.ordinarytime;
                                                                var overTime1 = result.overTime1;
                                                                var overTime2 = result.overTime2;
                                                                var breakTime = result.breakTime;
                                                                var breakAfter = result.breakAfter;
                                                                var breakIn = result.breakIn;
                                                                var breakAfter2 = result.breakAfter2;
                                                                var breakTime2 = result.breakTime2;
                                                                var breakIn2 = result.breakIn2;
                                                                var OT1 = '00:00:00';
                                                                var OT2 = '00:00:00';
                                                                var allowances = result.allowance;
                                                                var timezoneListArray = [];
                                                                if (result.timeZones) {
                                                                    timezoneListArray = result.timeZones;
                                                                }
                                                                if (timezoneListArray.length > 0) {
                                                                    var timeZoneNTArray = [];
                                                                    var timeZoneOt1Array = [];
                                                                    var timeZoneOt2Array = [];
                                                                    result.timeZones.forEach(function(timezone) {
                                                                        if (timezone.payPeriod == "NT") {
                                                                            timeZoneNTArray.push({
                                                                                zoneName: timezone.zoneName,
                                                                                finishTime: timezone.finishTime,
                                                                                startTime: timezone.startTime
                                                                            });
                                                                        } else if (timezone.payPeriod == "OT1") {
                                                                            timeZoneOt1Array.push({
                                                                                zoneName: timezone.zoneName,
                                                                                finishTime: timezone.finishTime,
                                                                                startTime: timezone.startTime
                                                                            });
                                                                        } else if (timezone.payPeriod == "OT2") {
                                                                            timeZoneOt2Array.push({
                                                                                zoneName: timezone.zoneName,
                                                                                finishTime: timezone.finishTime,
                                                                                startTime: timezone.startTime
                                                                            });
                                                                        }
                                                                    });
                                                                    var arrays = {
                                                                        ntArray: timeZoneNTArray,
                                                                        ot1Array: timeZoneOt1Array,
                                                                        ot2Array: timeZoneOt2Array
                                                                    };
                                                                    devideHourIntoNt(employeeAttendance._id, companyId, arrays, function(ntTotal) {
                                                                        console.log("ntTotal.zoneName........." + ntTotal.zoneName);
                                                                        global.normalTime = '00:00:00';
                                                                        if (breakAfter) {
                                                                            if (!breakTime) {
                                                                                breakTime = '00:00:00';
                                                                            }
                                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                                totalhoursAdjustedHours = ntTotal.normalTime;
                                                                                if (breakIn == true) {
                                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                                } else {
                                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                                }
                                                                                // console.log(afterhours);
                                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                                afterhours %= 3600;
                                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                var totalhoursAdjusted = FinalHours;
                                                                                breaktaken = true;
                                                                            } else {
                                                                                var totalhoursAdjusted = ntTotal.normalTime;
                                                                            }
                                                                        } else {
                                                                            var totalhoursAdjusted = ntTotal.normalTime;
                                                                        }
                                                                        if (breakAfter2) {
                                                                            if (!breakTime2) {
                                                                                breakTime2 = '00:00:00';
                                                                            }
                                                                            // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                                if (breakIn2 == true) {
                                                                                    // console.log("iffffff");
                                                                                    var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                                } else {
                                                                                    // console.log("else iffffff")
                                                                                    var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                                }
                                                                                // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                                afterhours %= 3600;
                                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                var totalhoursAdjusted = FinalHours;
                                                                                breaktaken2 = true;
                                                                            } else {
                                                                                var totalhoursAdjusted = totalhoursAdjusted;
                                                                            }
                                                                        }
                                                                        totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = ntTotal.OT1;
                                                                        OT2 = ntTotal.OT2;
                                                                        if (OT1) {
                                                                            OT1 = changeFormat(OT1);
                                                                        }
                                                                        if (OT2) {
                                                                            OT2 = changeFormat(OT2);
                                                                        }
                                                                        var allowancesArray = [];
                                                                        if (allowances) {
                                                                            for (i = 0; i < allowances.length; i++) {
                                                                                var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                                var allowanceName = allowances[i].name;
                                                                                if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                                    allowancesArray.push({
                                                                                        name: allowanceName,
                                                                                        status: true
                                                                                    })
                                                                                } else {
                                                                                    allowancesArray.push({
                                                                                        name: allowanceName,
                                                                                        status: false
                                                                                    })
                                                                                }
                                                                            }
                                                                        }
                                                                        normalTimeAdd = normalTime;
                                                                        ot1Add = OT1;
                                                                        ot2Add = OT2;

                                                                        var NtOThours = toSeconds(OT2) + toSeconds(OT1) + toSeconds(normalTime);
                                                                        var hours1 = Math.floor(NtOThours / 3600);
                                                                        NtOThours %= 3600;
                                                                        var minutes1 = Math.floor(NtOThours / 60);
                                                                        var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                        totalRoundedAdd = FinalHours;

                                                                        if (totalhours) {
                                                                            totalhours = changeFormat(totalhours);
                                                                        }
                                                                        Attendance.update({
                                                                                '_id': employeeAttendance._id
                                                                            }, {
                                                                                $set: {
                                                                                    normalTime: normalTime,
                                                                                    ot1Rule: OT1,
                                                                                    ot2Rule: OT2,
                                                                                    total: totalhours,
                                                                                    totalRounded: FinalHours,
                                                                                    breaktaken: breaktaken,
                                                                                    breaktaken2: breaktaken2,
                                                                                    readFlag: true,
                                                                                    allowances: allowancesArray
                                                                                }
                                                                            }, {
                                                                                upsert: false,
                                                                                new: false
                                                                            }, function(err, data) {
                                                                                if (err) {
                                                                                    // console.log(err);
                                                                                } else {
                                                                                    if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                                        calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                            // if(result) {
                                                                                            //  res.json(true);
                                                                                            // }
                                                                                        })
                                                                                    }
                                                                                    shiftHoursForHolidays(shift, companyId, function(result) {
                                                                                        var holidayHoursShift = result;
                                                                                        var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD hh:mm:ss');
                                                                                        if (holidayresult.indexOf(dateGive) > -1) {
                                                                                            if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                                var finalnormalTime = '';
                                                                                                var finalOT1 = '';
                                                                                                var finalOT2 = '';
                                                                                                console.log("12aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                                if (holidaymultiplier == 'NT') {
                                                                                                    finalnormalTime = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            normalTime: totalhoursAdjusted,
                                                                                                            ot2Rule: '00:00:00',
                                                                                                            ot1Rule: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                if (holidaymultiplier == 'OT1') {
                                                                                                    if (ot1Add == '') {
                                                                                                        ot1Add = '00:00:00'
                                                                                                    }
                                                                                                    //console.log('holidayHoursShift');
                                                                                                    finalOT1 = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            ot1Rule: totalhoursAdjusted,
                                                                                                            ot2Rule: '00:00:00',
                                                                                                            normalTime: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                if (holidaymultiplier == 'OT2') {
                                                                                                    if (ot2Add == '') {
                                                                                                        ot2Add = '00:00:00'
                                                                                                    }
                                                                                                    finalOT2 = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            ot2Rule: totalhoursAdjusted,
                                                                                                            ot1Rule: '00:00:00',
                                                                                                            normalTime: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                //console.log('calculate holiday hours');
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                }
                                                                            }) //attendance update
                                                                    });
                                                                } else {
                                                                    console.log("else...");
                                                                    global.normalTime = '00:00:00';
                                                                    if (breakAfter) {
                                                                        if (!breakTime) {
                                                                            breakTime = '00:00:00';
                                                                        }
                                                                        if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                            if (breakIn == true) {
                                                                                var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                            } else {
                                                                                var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                            }
                                                                            // console.log(afterhours);
                                                                            var hours1 = Math.floor(afterhours / 3600);
                                                                            afterhours %= 3600;
                                                                            var minutes1 = Math.floor(afterhours / 60);
                                                                            var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                            var totalhoursAdjusted = FinalHours;
                                                                            breaktaken = true;
                                                                        } else {
                                                                            var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                        }
                                                                    } else {
                                                                        var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                    }
                                                                    if (breakAfter2) {
                                                                        if (!breakTime2) {
                                                                            breakTime2 = '00:00:00';
                                                                        }
                                                                        // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                        if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                            if (breakIn2 == true) {
                                                                                // console.log("iffffff");
                                                                                var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                            } else {
                                                                                // console.log("else iffffff")
                                                                                var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                            }
                                                                            // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                            var hours1 = Math.floor(afterhours / 3600);
                                                                            afterhours %= 3600;
                                                                            var minutes1 = Math.floor(afterhours / 60);
                                                                            var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                            var totalhoursAdjusted = FinalHours;
                                                                            breaktaken2 = true;
                                                                        } else {
                                                                            var totalhoursAdjusted = totalhoursAdjusted;
                                                                        }
                                                                    }
                                                                    //console.log(totalhoursAdjusted +'totalhoursAdjusted');
                                                                    totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                                    //console.log(totalhoursAdjusted + 'after Format');
                                                                    if (dataCompany.isovertime) {
                                                                        console.log('overtime');
                                                                        if (weekly == 0) {
                                                                            if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                                if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                                    normalTime = ordinarytime;
                                                                                    totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                                    var Time1 = totalSeconds;
                                                                                    hours = Math.floor(Time1 / 3600);
                                                                                    Time1 %= 3600;
                                                                                    minutes = Math.floor(Time1 / 60);
                                                                                    seconds = Time1 % 60;
                                                                                    if (overTime1 != '00:00:00' && overTime1 != '') {
                                                                                        if (totalSeconds > toSeconds(overTime1)) {
                                                                                            console.log('asdas');
                                                                                            OT1 = overTime1;
                                                                                            var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                            hours = Math.floor(remaigntime / 3600);
                                                                                            remaigntime %= 3600;
                                                                                            minutes = Math.floor(remaigntime / 60);
                                                                                            seconds = remaigntime % 60;
                                                                                            OT2 = hours + ':' + minutes + ':' + seconds
                                                                                        } else {
                                                                                            console.log('not');
                                                                                            hours = Math.floor(totalSeconds / 3600);
                                                                                            totalSeconds %= 3600;
                                                                                            minutes = Math.floor(totalSeconds / 60);
                                                                                            seconds = totalSeconds % 60;
                                                                                            OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                            OT2 = '';
                                                                                        }
                                                                                    } else {
                                                                                        hours = Math.floor(totalSeconds / 3600);
                                                                                        totalSeconds %= 3600;
                                                                                        minutes = Math.floor(totalSeconds / 60);
                                                                                        seconds = totalSeconds % 60;
                                                                                        OT2 = '00:00:00';
                                                                                        OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                    }
                                                                                } else {
                                                                                    normalTime = totalhoursAdjusted;
                                                                                    OT1 = '';
                                                                                    OT2 = '';
                                                                                }
                                                                            } else {
                                                                                if (ordinarytime == '') {
                                                                                    normalTime = totalhoursAdjusted;
                                                                                    OT1 = '00:00:00';
                                                                                    OT2 = '00:00:00';
                                                                                } else {
                                                                                    if (ordinarytime == '') {
                                                                                        normalTime = totalhoursAdjusted;
                                                                                        OT1 = '00:00:00';
                                                                                        OT2 = '00:00:00';
                                                                                    } else {
                                                                                        if (dataCompany.overtimeLevel == "1" && dataCompany.overtimePeriod == 'daily') {
                                                                                            normalTime = '00:00:00';
                                                                                            OT1 = totalhoursAdjusted;
                                                                                            OT2 = '00:00:00';
                                                                                        } else {
                                                                                            normalTime = '00:00:00';
                                                                                            OT1 = '00:00:00';
                                                                                            OT2 = totalhoursAdjusted;
                                                                                        }
                                                                                    }
                                                                                }
                                                                                /*if(overTime1 != '00:00:00'){
                                                                                    var totalSeconds1 =  toSeconds(totalhoursAdjusted)
                                                                                    if(totalSeconds1 > toSeconds(overTime1)){
                                                                                        console.log('asdas');
                                                                                        OT1 = overTime1;
                                                                                        var remaigntime = totalSeconds1 - toSeconds(overTime1);
                                                                                        hours = Math.floor(remaigntime / 3600);
                                                                                        remaigntime %= 3600;
                                                                                        minutes = Math.floor(remaigntime / 60);
                                                                                        seconds = remaigntime % 60;
                                                                                        OT2 = hours+':'+minutes+':'+seconds;
                                                                                    }else{
                                                                                        console.log('not');
                                                                                        hours = Math.floor(totalSeconds1 / 3600);
                                                                                        totalSeconds1 %= 3600;
                                                                                        minutes = Math.floor(totalSeconds1 / 60);
                                                                                        seconds = totalSeconds1 % 60;
                                                                                        OT1 = hours+':'+minutes+':'+seconds;
                                                                                        OT2 = '';
                                                                                    }
                                                                                }else{
                                                                                    normalTime = '00:00:00';
                                                                                    OT1  = '00:00:00';
                                                                                    OT2 = totalhoursAdjusted;
                                                                                }*/
                                                                            }
                                                                        } //daily
                                                                        if (weekly == 1) {
                                                                            if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                                console.log(ordinarytime + 'ordinarytime');
                                                                                if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                                    normalTime = ordinarytime;
                                                                                    totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                                    var Time1 = totalSeconds;
                                                                                    hours = Math.floor(Time1 / 3600);
                                                                                    Time1 %= 3600;
                                                                                    minutes = Math.floor(Time1 / 60);
                                                                                    seconds = Time1 % 60;
                                                                                    if (totalSeconds > toSeconds(overTime1) && overTime1 != '00:00:00') {
                                                                                        OT1 = overTime1;
                                                                                        var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                        hours = Math.floor(remaigntime / 3600);
                                                                                        remaigntime %= 3600;
                                                                                        minutes = Math.floor(remaigntime / 60);
                                                                                        seconds = remaigntime % 60;
                                                                                        OT2 = hours + ':' + minutes + ':' + seconds;
                                                                                    } else {
                                                                                        hours = Math.floor(totalSeconds / 3600);
                                                                                        totalSeconds %= 3600;
                                                                                        minutes = Math.floor(totalSeconds / 60);
                                                                                        seconds = totalSeconds % 60;
                                                                                        OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                        OT2 = '';
                                                                                    }
                                                                                } else {
                                                                                    normalTime = totalhoursAdjusted;
                                                                                    OT1 = '';
                                                                                    OT2 = '';
                                                                                }
                                                                            } else {
                                                                                normalTime = totalhoursAdjusted;
                                                                                OT1 = '';
                                                                                OT2 = '';
                                                                            }
                                                                        } //weekly
                                                                    } else {
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = '00:00:00';
                                                                        OT2 = '00:00:00';
                                                                    }
                                                                    if (OT1) {
                                                                        OT1 = changeFormat(OT1);
                                                                    }
                                                                    if (OT2) {
                                                                        OT2 = changeFormat(OT2);
                                                                    }
                                                                    var allowancesArray = [];
                                                                    if (allowances) {
                                                                        // console.log(allowances +'assign------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                                        for (i = 0; i < allowances.length; i++) {
                                                                            // console.log(allowances[i].name);
                                                                            // console.log(allowances[i].payAfter);
                                                                            var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                            var allowanceName = allowances[i].name;
                                                                            if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                                // console.log(toSeconds(totalhoursAdjusted));
                                                                                // console.log(toSeconds(payAfter));
                                                                                allowancesArray.push({
                                                                                    name: allowanceName,
                                                                                    status: true
                                                                                })
                                                                            } else {
                                                                                allowancesArray.push({
                                                                                    name: allowanceName,
                                                                                    status: false
                                                                                })
                                                                            }
                                                                        }
                                                                    }
                                                                    console.log(allowancesArray + '66666666666666666666666666666');
                                                                    console.log(totalhours + 'Final total Hours');
                                                                    console.log(totalhoursAdjusted + 'totalhoursAdjustedHours11111111111');
                                                                    console.log(normalTime + 'normalTime');
                                                                    console.log(OT1 + 'ot1');
                                                                    console.log(OT2 + 'ot2');
                                                                    console.log('==========');
                                                                    console.log(breakAfter + 'breakAfter');
                                                                    console.log(breaktaken + 'breaktaken');
                                                                    normalTimeAdd = normalTime;
                                                                    ot1Add = OT1;
                                                                    ot2Add = OT2;
                                                                    totalRoundedAdd = totalhoursAdjusted;
                                                                    // if(totalhours){
                                                                    totalhours = changeFormat(totalhours);
                                                                    // }
                                                                    Attendance.update({
                                                                            '_id': employeeAttendance._id
                                                                        }, {
                                                                            $set: {
                                                                                normalTime: normalTime,
                                                                                ot1Rule: OT1,
                                                                                ot2Rule: OT2,
                                                                                total: totalhours,
                                                                                totalRounded: totalhoursAdjusted,
                                                                                breaktaken: breaktaken,
                                                                                breaktaken2: breaktaken2,
                                                                                readFlag: true,
                                                                                allowances: allowancesArray
                                                                            }
                                                                        }, {
                                                                            upsert: false,
                                                                            new: false
                                                                        }, function(err, data) {
                                                                            if (err) {
                                                                                // console.log(err);
                                                                            } else {
                                                                                if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                                    calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                        // if(result) {
                                                                                        //  res.json(true);
                                                                                        // }
                                                                                    })
                                                                                }
                                                                                shiftHoursForHolidays(shift, companyId, function(result) {
                                                                                    console.log('---------------*****************************************************');
                                                                                    var holidayHoursShift = result;
                                                                                    // console.log(result);
                                                                                    // console.log(employeeAttendance.date);
                                                                                    var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD');
                                                                                    // console.log("dateGive......."+dateGive);
                                                                                    // console.log(holidayresult);
                                                                                    //var shiftAssign =
                                                                                    if (holidayresult.indexOf(dateGive) > -1) {
                                                                                        //   console.log(dateGive);
                                                                                        console.log('shiftshiftshift' + shift);
                                                                                        if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                            var finalnormalTime = '';
                                                                                            var finalOT1 = '';
                                                                                            var finalOT2 = '';
                                                                                            console.log("13aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                            if (holidaymultiplier == 'NT') {
                                                                                                finalnormalTime = toSeconds(holidayHoursShift);
                                                                                                Attendance.update({
                                                                                                    '_id': employeeAttendance._id,
                                                                                                    'companyId': companyId
                                                                                                }, {
                                                                                                    $set: {
                                                                                                        normalTime: totalhoursAdjusted,
                                                                                                        ot2Rule: '00:00:00',
                                                                                                        ot1Rule: '00:00:00',
                                                                                                        readFlag: true,
                                                                                                        dayinLieu: holidayHoursShift,
                                                                                                        Exception: holidayHoursShift,
                                                                                                        exceptioncode: cmppayrollCode,
                                                                                                        Exceptiontype: 'Holiday',
                                                                                                        ExceptionAssign: 'Holiday',
                                                                                                        cutException: '',
                                                                                                        addweeklyexc: '',
                                                                                                    }
                                                                                                }, {
                                                                                                    upsert: false,
                                                                                                    new: false
                                                                                                }, function(err, data) {
                                                                                                    if (err) {
                                                                                                        // console.log(err);
                                                                                                    }
                                                                                                })
                                                                                            }
                                                                                            if (holidaymultiplier == 'OT1') {
                                                                                                if (ot1Add == '') {
                                                                                                    ot1Add = '00:00:00'
                                                                                                }
                                                                                                //console.log('holidayHoursShift');
                                                                                                finalOT1 = toSeconds(holidayHoursShift);
                                                                                                Attendance.update({
                                                                                                    '_id': employeeAttendance._id,
                                                                                                    'companyId': companyId
                                                                                                }, {
                                                                                                    $set: {
                                                                                                        ot1Rule: totalhoursAdjusted,
                                                                                                        ot2Rule: '00:00:00',
                                                                                                        normalTime: '00:00:00',
                                                                                                        readFlag: true,
                                                                                                        dayinLieu: holidayHoursShift,
                                                                                                        Exception: holidayHoursShift,
                                                                                                        exceptioncode: cmppayrollCode,
                                                                                                        Exceptiontype: 'Holiday',
                                                                                                        ExceptionAssign: 'Holiday',
                                                                                                        cutException: '',
                                                                                                        addweeklyexc: '',
                                                                                                    }
                                                                                                }, {
                                                                                                    upsert: false,
                                                                                                    new: false
                                                                                                }, function(err, data) {
                                                                                                    if (err) {
                                                                                                        // console.log(err);
                                                                                                    }
                                                                                                })
                                                                                            }
                                                                                            if (holidaymultiplier == 'OT2') {
                                                                                                if (ot2Add == '') {
                                                                                                    ot2Add = '00:00:00'
                                                                                                }
                                                                                                finalOT2 = toSeconds(holidayHoursShift);
                                                                                                Attendance.update({
                                                                                                    '_id': employeeAttendance._id,
                                                                                                    'companyId': companyId
                                                                                                }, {
                                                                                                    $set: {
                                                                                                        ot2Rule: totalhoursAdjusted,
                                                                                                        ot1Rule: '00:00:00',
                                                                                                        normalTime: '00:00:00',
                                                                                                        readFlag: true,
                                                                                                        dayinLieu: holidayHoursShift,
                                                                                                        Exception: holidayHoursShift,
                                                                                                        exceptioncode: cmppayrollCode,
                                                                                                        Exceptiontype: 'Holiday',
                                                                                                        ExceptionAssign: 'Holiday',
                                                                                                        cutException: '',
                                                                                                        addweeklyexc: '',
                                                                                                    }
                                                                                                }, {
                                                                                                    upsert: false,
                                                                                                    new: false
                                                                                                }, function(err, data) {
                                                                                                    if (err) {
                                                                                                        // console.log(err);
                                                                                                    }
                                                                                                })
                                                                                            }
                                                                                            //console.log('calculate holiday hours');
                                                                                        }
                                                                                    }
                                                                                });
                                                                            }
                                                                        }) //attendance update
                                                                }
                                                            }) //shiftData
                                                    }
                                                }) //totalhours
                                        }
                                    })
                                }
                            }
                        }
                        n++;
                    } else if (checkin.alterWho != employeeAttendance.employeeNo) {
                        if (checkType == 1 || checkType == 2 || checkType == 'i' || checkType == 'I') {
                            if (workCode) {
                                checkinWorkcode.push(workCode)
                            }
                            var inAdjusted = '';
                            if (n == 1) {
                                if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(startHour + ':' + startMinute + ':00')) {
                                    lateIn = '1';
                                } else {
                                    lateIn = '0';
                                }
                            }
                            if (limitIn == true && n == 1) {
                                if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(startHour + ':' + startMinute + ':00')) {
                                    var finalV = toSeconds(startHour + ':' + startMinute + ':00');
                                    seconds = finalV;
                                    var Hourset = Moment.utc(checkTime).set('hours', startHour);
                                    var date = Moment.utc(Hourset).set('minute', startMinute);
                                    inAdjusted = new Date(Date.parse(date)).toUTCString();
                                } else {
                                    inAdjusted = checkTime;
                                }
                            } else {
                                if (limitIn == true) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                        var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                        //console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                        seconds = finalV;
                                        var Hourset = Moment.utc(checkTime).set('hours', finishHour);
                                        var date = Moment.utc(Hourset).set('minute', finishMinute);
                                        inAdjusted = new Date(Date.parse(date)).toUTCString();
                                        //console.log(inAdjusted + 'inAdjustedinAdjustedinAdjustedinAdjustedinAdjusted');
                                    }
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(startHour + ':' + startMinute + ':00')) {
                                        var finalV = toSeconds(startHour + ':' + startMinute + ':00');
                                        //console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                        seconds = finalV;
                                        var Hourset = Moment.utc(checkTime).set('hours', startHour);
                                        var date = Moment.utc(Hourset).set('minute', startMinute);
                                        inAdjusted = new Date(Date.parse(date)).toUTCString();
                                        //console.log(inAdjusted + 'innnnnnnnnnnnnnnnnnnnnnaaaaaaaaaaaaaaaaaaaaaaaaaaffffff');
                                    } else {
                                        inAdjusted = checkTime;
                                    }
                                } else {
                                    inAdjusted = checkTime;
                                }
                            }
                            Attendance.update({
                                '_id': employeeAttendance._id,
                                'checkin.checkTime': checkTime
                            }, {
                                $set: {
                                    "checkin.$.inAdjusted": inAdjusted,
                                }
                            }, {
                                upsert: false,
                                new: false
                            }, function(err, data) {
                                if (err) {
                                    console.log(err);
                                } else {
                                    console.log(true);
                                }
                            })
                            if (n == 1) {
                                nextOrder.push(0);
                                var In = checkin.checkTime;
                                checkinTotal.push(In);
                                checkinTotalAdjusted.push(inAdjusted);
                                // console.log('In array');
                                // console.log(n);
                            } else {
                                if (isInArray(parseInt(1), nextOrder)) {
                                    nextOrder.length = 0;
                                    nextOrder.push(0);
                                    var In = checkin.checkTime;
                                    checkinTotal.push(In);
                                    checkinTotalAdjusted.push(inAdjusted);
                                } else {
                                    checkinTotal.length = 0;
                                    checkinTotalAdjusted.length = 0;
                                    checkinWorkcode.length = 0;
                                }
                            }
                        } else {
                            console.log("out", limitOut);
                            if (workCode) {
                                checkinWorkcode.push(workCode)
                            }
                            var outAdjusted = '';
                            if (n == (employeeAttendance.checkin.length)) {
                                if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                    lateOut = '1';
                                } else {
                                    lateOut = '0';
                                }
                            }
                            if (limitOut == true && n == (employeeAttendance.checkin.length)) {
                                //console.log('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');
                                if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') < toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                    outAdjusted = checkTime;
                                } else {
                                    var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                    //console.log(finalV + '}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}');
                                    seconds = finalV;
                                    var Hourset = Moment.utc(checkTime).set('hours', finishHour);
                                    var date = Moment.utc(Hourset).set('minute', finishMinute);
                                    outAdjusted = new Date(Date.parse(date)).toUTCString();
                                }
                            } else {
                                if (limitOut == true) {
                                    if (toSeconds(checkTimeHour + ':' + checkTimeMinute + ':00') > toSeconds(finishHour + ':' + finishMinute + ':00')) {
                                        var finalV = toSeconds(finishHour + ':' + finishMinute + ':00');
                                        seconds = finalV;
                                        var Hourset = Moment.utc(checkTime).set('hours', finishHour);
                                        var date = Moment.utc(Hourset).set('minute', finishMinute);
                                        outAdjusted = new Date(Date.parse(date)).toUTCString();
                                    } else {
                                        outAdjusted = checkTime;
                                    }
                                } else {
                                    outAdjusted = checkTime;
                                }
                            }
                            if (isInArray(parseInt(0), nextOrder)) {
                                nextOrder.length = 0;
                                nextOrder.push(1);
                                var Out = checkin.checkTime;
                                checkinTotal.push(Out);
                                checkinTotalAdjusted.push(outAdjusted);
                                if (checkinWorkcode.length > 0) {
                                    checkinWorkcodeVal = checkinWorkcode[0];
                                } else {
                                    checkinWorkcodeVal = '99999'
                                }
                                console.log("checkin total" + checkinTotal.length);
                                console.log(checkinTotal.length);
                                if (checkinTotal.length == 2) {
                                    var InVAlue = new Date(Date.parse(checkinTotal[0])).toUTCString();
                                    var OutValue = new Date(Date.parse(checkinTotal[1])).toUTCString();
                                    // console.log(InVAlue + 'InVAlue ===========================');
                                    // console.log(OutValue + 'OutValue ============================');
                                    var Inadjusted = new Date(Date.parse(checkinTotalAdjusted[0])).toUTCString();
                                    var outadjusted = new Date(Date.parse(checkinTotalAdjusted[1])).toUTCString();

                                    var inn = Moment(InVAlue).format('DD/MM/YYYY HH:mm');
                                    var out = Moment(OutValue).format('DD/MM/YYYY HH:mm');

                                    // console.log(Inadjusted + 'Inadjusted ===========================');
                                    // console.log(outadjusted + 'outadjusted ============================');

                                    var ms = Moment(out, "DD/MM/YYYY HH:mm:ss").diff(Moment(inn, "DD/MM/YYYY HH:mm:ss"));
                                    var d = Moment.duration(ms);
                                    var totalhours = Math.floor(d.asHours()) + Moment.utc(ms).format(":mm:ss");

                                    var innAdj = Moment(Inadjusted).format('DD/MM/YYYY HH:mm');
                                    var outAdj = Moment(outadjusted).format('DD/MM/YYYY HH:mm');

                                    var msAdjusted = Moment(outAdj, "DD/MM/YYYY HH:mm:ss").diff(Moment(innAdj, "DD/MM/YYYY HH:mm:ss"));
                                    var dAdjusted = Moment.duration(msAdjusted);
                                    var totalhoursAdjusted = Math.floor(dAdjusted.asHours()) + Moment.utc(msAdjusted).format(":mm:ss");

                                    //console.log(totalhoursAdjusted+ '---------------totalhoursAdjusted');
                                    if (totalhoursAdjusted.indexOf("-") > -1) {
                                        totalhoursAdjusted = '00:00:00';
                                    }

                                    checkinTotal.length = 0;
                                    checkinTotalAdjusted.length = 0;
                                    //console.log(checkinWorkcodeVal + '---------------------------------------------------------checkinWorkcodeVal');
                                    checkinWorkcode.length = 0;
                                    Attendance.update({
                                        '_id': employeeAttendance._id,
                                        'checkin.checkTime': checkTime
                                    }, {
                                        $set: {
                                            "checkin.$.outAdjusted": outAdjusted,
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {
                                            console.log(err);
                                        } else {
                                            //console.log(true);
                                            var datec = Moment(outadjusted).format('YYYY-MM-DD');
                                            Dashboard.update({
                                                weekEnd: {
                                                    $gte: datec
                                                },
                                                weekStart: {
                                                    $lte: datec
                                                },
                                                'companyId': companyId
                                            }, {
                                                $set: {
                                                    calfalg: false
                                                }
                                            }, {
                                                upsert: false,
                                                new: false,
                                                multi: true
                                            }, function(err, data) {
                                                if (err) {
                                                    console.log(err);
                                                }
                                            });
                                        }
                                    })
                                    Attendance.update({
                                        '_id': employeeAttendance._id,
                                        'totalValues.checkinNo': {
                                            $ne: flagForchk
                                        }
                                    }, {
                                        $set: {
                                            lateIn: lateIn,
                                            lateOut: lateOut,
                                        },
                                        $push: {
                                            totalValues: {
                                                total: totalhours,
                                                totalAdjusted: totalhoursAdjusted,
                                                checkinNo: flagForchk,
                                                workCode: checkinWorkcodeVal
                                            }
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {
                                            // console.log(err);
                                        } else {
                                            var shift = employeeAttendance.shift;
                                            var shiftType = employeeAttendance.shiftType;
                                            if (!shift) {
                                                Attendance.update({
                                                    '_id': employeeAttendance._id
                                                }, {
                                                    $set: {
                                                        readFlag: true,
                                                    }
                                                }, {
                                                    upsert: false,
                                                    new: false
                                                }, function(err, data) {
                                                    if (err) {
                                                        // console.log(err);
                                                    }
                                                });
                                            }
                                            totalhoursFn(employeeAttendance._id, companyId, function(result) {
                                                    var totalhours = result[0];
                                                    var totalhoursAdjustedHours = result[1];
                                                    // console.log(totalhoursAdjustedHours + 'totalhoursAdjustedHours *******************');
                                                    // console.log(totalhours+'totalWorkingHours *****************************');

                                                    var weeklyOT1 = 0;
                                                    if (ExceptionAssign) {
                                                        shift = lastShift;
                                                    } else {
                                                        shift = employeeAttendance.shift;
                                                    }
                                                    if (shiftType == "customShift") {
                                                        console.log("if customShift..");
                                                        // console.log(employeeAttendance);
                                                        // var shift = result.name;
                                                        var shiftStartTime = new Date(Date.parse(employeeAttendance.shiftStart)).toUTCString();
                                                        var shiftFinishTime = new Date(Date.parse(employeeAttendance.shiftFinish)).toUTCString();
                                                        var startLimit = employeeAttendance.limitIn;
                                                        var finishLimit = employeeAttendance.limitOut;
                                                        // var ordinarytime = employeeAttendance.ordinarytime;
                                                        // var overTime1 = employeeAttendance.overTime1;
                                                        // var overTime2 = employeeAttendance.overTime2;
                                                        var ordinarytime = "";
                                                        var overTime1 = "";
                                                        var overTime2 = "";

                                                        var breakTime = employeeAttendance.breakk;
                                                        var breakAfter = employeeAttendance.breakAfter;
                                                        /*var ordinarytime = result.ordinarytime;
                                                        var overTime1 = result.overTime1;
                                                        var breakAfter = result.breakAfter;
                                                        var breakTime = result.breakTime;*/
                                                        var breakIn = employeeAttendance.breakIn;
                                                        var breakAfter2 = employeeAttendance.breakAfter2;
                                                        var breakTime2 = employeeAttendance.breakTime2;
                                                        var breakIn2 = employeeAttendance.breakIn2;

                                                        var OT1 = '00:00:00';
                                                        var OT2 = '00:00:00';
                                                        var allowances = employeeAttendance.allowance;
                                                        global.normalTime = '00:00:00';
                                                        if (breakAfter) {
                                                            if (!breakTime) {
                                                                breakTime = '00:00:00';
                                                            }
                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                if (breakIn == true) {
                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                } else {
                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                }
                                                                // console.log(afterhours);
                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                afterhours %= 3600;
                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                var totalhoursAdjusted = FinalHours;
                                                                breaktaken = true;
                                                            } else {
                                                                var totalhoursAdjusted = totalhoursAdjustedHours;
                                                            }
                                                        } else {
                                                            var totalhoursAdjusted = totalhoursAdjustedHours;
                                                        }
                                                        if (breakAfter2) {
                                                            if (!breakTime2) {
                                                                breakTime2 = '00:00:00';
                                                            }
                                                            // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                if (breakIn2 == true) {
                                                                    // console.log("iffffff");
                                                                    var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                } else {
                                                                    // console.log("else iffffff")
                                                                    var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                }
                                                                // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                afterhours %= 3600;
                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                var totalhoursAdjusted = FinalHours;
                                                                breaktaken2 = true;
                                                            } else {
                                                                var totalhoursAdjusted = totalhoursAdjusted;
                                                            }
                                                        }
                                                        //console.log(totalhoursAdjusted +'totalhoursAdjusted');
                                                        totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                        //console.log(totalhoursAdjusted + 'after Format');
                                                        if (dataCompany.isovertime) {
                                                            console.log('overtime');
                                                            if (weekly == 0) {
                                                                if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                        normalTime = ordinarytime;
                                                                        totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                        var Time1 = totalSeconds;
                                                                        hours = Math.floor(Time1 / 3600);
                                                                        Time1 %= 3600;
                                                                        minutes = Math.floor(Time1 / 60);
                                                                        seconds = Time1 % 60;
                                                                        if (overTime1 != '00:00:00' && overTime1 != '') {
                                                                            if (totalSeconds > toSeconds(overTime1)) {
                                                                                console.log('asdas');
                                                                                OT1 = overTime1;
                                                                                var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                hours = Math.floor(remaigntime / 3600);
                                                                                remaigntime %= 3600;
                                                                                minutes = Math.floor(remaigntime / 60);
                                                                                seconds = remaigntime % 60;
                                                                                OT2 = hours + ':' + minutes + ':' + seconds
                                                                            } else {
                                                                                console.log('not');
                                                                                hours = Math.floor(totalSeconds / 3600);
                                                                                totalSeconds %= 3600;
                                                                                minutes = Math.floor(totalSeconds / 60);
                                                                                seconds = totalSeconds % 60;
                                                                                OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                OT2 = '';
                                                                            }
                                                                        } else {
                                                                            hours = Math.floor(totalSeconds / 3600);
                                                                            totalSeconds %= 3600;
                                                                            minutes = Math.floor(totalSeconds / 60);
                                                                            seconds = totalSeconds % 60;
                                                                            OT2 = '00:00:00';
                                                                            OT1 = hours + ':' + minutes + ':' + seconds;
                                                                        }
                                                                    } else {
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = '';
                                                                        OT2 = '';
                                                                    }
                                                                } else {
                                                                    if (ordinarytime == '') {
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = '00:00:00';
                                                                        OT2 = '00:00:00';
                                                                    } else {
                                                                        if (dataCompany.overtimeLevel == "1" && dataCompany.overtimePeriod == 'daily') {
                                                                            normalTime = '00:00:00';
                                                                            OT1 = totalhoursAdjusted;
                                                                            OT2 = '00:00:00';
                                                                        } else {
                                                                            normalTime = '00:00:00';
                                                                            OT1 = '00:00:00';
                                                                            OT2 = totalhoursAdjusted;
                                                                        }
                                                                    }
                                                                    // if(overTime1 != '00:00:00'){
                                                                    //  var totalSeconds1 =  toSeconds(totalhoursAdjusted)
                                                                    //  if(totalSeconds1 > toSeconds(overTime1)){
                                                                    //    console.log('asdas');
                                                                    //    OT1 = overTime1;
                                                                    //    var remaigntime = totalSeconds1 - toSeconds(overTime1);
                                                                    //    hours = Math.floor(remaigntime / 3600);
                                                                    //    remaigntime %= 3600;
                                                                    //    minutes = Math.floor(remaigntime / 60);
                                                                    //    seconds = remaigntime % 60;
                                                                    //    OT2 = hours+':'+minutes+':'+seconds;
                                                                    //  }else{
                                                                    //    console.log('not');
                                                                    //    hours = Math.floor(totalSeconds1 / 3600);
                                                                    //    totalSeconds1 %= 3600;
                                                                    //    minutes = Math.floor(totalSeconds1 / 60);
                                                                    //    seconds = totalSeconds1 % 60;
                                                                    //    OT1 = hours+':'+minutes+':'+seconds;
                                                                    //    OT2 = '';
                                                                    //  }
                                                                    // }else{
                                                                    //  normalTime = '00:00:00';
                                                                    //  OT1  = '00:00:00';
                                                                    //  OT2 = totalhoursAdjusted;
                                                                    // }
                                                                }
                                                            } //daily
                                                            if (weekly == 1) {
                                                                if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                    console.log(ordinarytime + 'ordinarytime');
                                                                    if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                        normalTime = ordinarytime;
                                                                        totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                        var Time1 = totalSeconds;
                                                                        hours = Math.floor(Time1 / 3600);
                                                                        Time1 %= 3600;
                                                                        minutes = Math.floor(Time1 / 60);
                                                                        seconds = Time1 % 60;
                                                                        if (totalSeconds > toSeconds(overTime1) && overTime1 != '00:00:00') {
                                                                            OT1 = overTime1;
                                                                            var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                            hours = Math.floor(remaigntime / 3600);
                                                                            remaigntime %= 3600;
                                                                            minutes = Math.floor(remaigntime / 60);
                                                                            seconds = remaigntime % 60;
                                                                            OT2 = hours + ':' + minutes + ':' + seconds;
                                                                        } else {
                                                                            hours = Math.floor(totalSeconds / 3600);
                                                                            totalSeconds %= 3600;
                                                                            minutes = Math.floor(totalSeconds / 60);
                                                                            seconds = totalSeconds % 60;
                                                                            OT1 = hours + ':' + minutes + ':' + seconds;
                                                                            OT2 = '';
                                                                        }
                                                                    } else {
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = '';
                                                                        OT2 = '';
                                                                    }
                                                                } else {
                                                                    normalTime = totalhoursAdjusted;
                                                                    OT1 = '';
                                                                    OT2 = '';
                                                                }
                                                            } //weekly
                                                        } else {
                                                            normalTime = totalhoursAdjusted;
                                                            OT1 = '00:00:00';
                                                            OT2 = '00:00:00';
                                                        }
                                                        if (OT1) {
                                                            OT1 = changeFormat(OT1);
                                                        }
                                                        if (OT2) {
                                                            OT2 = changeFormat(OT2);
                                                        }
                                                        var allowancesArray = [];
                                                        if (allowances) {
                                                            // console.log(allowances +'assign------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                            for (i = 0; i < allowances.length; i++) {
                                                                // console.log(allowances[i].name);
                                                                // console.log(allowances[i].payAfter);
                                                                var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                var allowanceName = allowances[i].name;
                                                                if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                    // console.log(toSeconds(totalhoursAdjusted));
                                                                    // console.log(toSeconds(payAfter));
                                                                    allowancesArray.push({
                                                                        name: allowanceName,
                                                                        status: true
                                                                    })
                                                                } else {
                                                                    allowancesArray.push({
                                                                        name: allowanceName,
                                                                        status: false
                                                                    })
                                                                }
                                                            }
                                                        }

                                                        // console.log(allowancesArray + '66666666666666666666666666666');
                                                        // console.log(totalhours+'Final total Hours');
                                                        // console.log(totalhoursAdjusted + 'totalhoursAdjustedHours11111111111');
                                                        console.log(normalTime + 'normalTime');
                                                        console.log(OT1 + 'ot1');
                                                        console.log(OT2 + 'ot2');
                                                        console.log('==========');
                                                        console.log(breakAfter + 'breakAfter');
                                                        console.log(breaktaken + 'breaktaken');
                                                        normalTimeAdd = normalTime;
                                                        ot1Add = OT1;
                                                        ot2Add = OT2;
                                                        totalRoundedAdd = totalhoursAdjusted;
                                                        if (totalhours) {
                                                            totalhours = changeFormat(totalhours);
                                                        }
                                                        Attendance.update({
                                                                '_id': employeeAttendance._id
                                                            }, {
                                                                $set: {
                                                                    normalTime: normalTime,
                                                                    ot1Rule: OT1,
                                                                    ot2Rule: OT2,
                                                                    total: totalhours,
                                                                    totalRounded: totalhoursAdjusted,
                                                                    breaktaken: breaktaken,
                                                                    breaktaken2: breaktaken2,
                                                                    readFlag: true,
                                                                    allowances: allowancesArray
                                                                }
                                                            }, {
                                                                upsert: false,
                                                                new: false
                                                            }, function(err, data) {
                                                                if (err) {
                                                                    // console.log(err);
                                                                } else {
                                                                    console.log("aaaaaaaaaaaaaaaaa.......");
                                                                    if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                        calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                            // if(result) {
                                                                            //  res.json(true);
                                                                            // }
                                                                        })
                                                                    }
                                                                    shiftHoursForHolidays(shift, companyId, function(result) {
                                                                        //console.log('---------------*****************************************************');
                                                                        var holidayHoursShift = result;
                                                                        var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD');
                                                                        //var shiftAssign =
                                                                        if (holidayresult.indexOf(dateGive) > -1) {
                                                                            //   console.log(dateGive);
                                                                            // console.log('shiftshiftshift' + shift);
                                                                            if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                var finalnormalTime = '';
                                                                                var finalOT1 = '';
                                                                                var finalOT2 = '';
                                                                                console.log("14aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                if (holidaymultiplier == 'NT') {
                                                                                    finalnormalTime = toSeconds(holidayHoursShift);
                                                                                    Attendance.update({
                                                                                        '_id': employeeAttendance._id,
                                                                                        'companyId': companyId
                                                                                    }, {
                                                                                        $set: {
                                                                                            normalTime: totalhoursAdjusted,
                                                                                            ot2Rule: '00:00:00',
                                                                                            ot1Rule: '00:00:00',
                                                                                            readFlag: true,
                                                                                            dayinLieu: holidayHoursShift,
                                                                                            Exception: holidayHoursShift,
                                                                                            exceptioncode: cmppayrollCode,
                                                                                            Exceptiontype: 'Holiday',
                                                                                            ExceptionAssign: 'Holiday',
                                                                                            cutException: '',
                                                                                            addweeklyexc: '',
                                                                                        }
                                                                                    }, {
                                                                                        upsert: false,
                                                                                        new: false
                                                                                    }, function(err, data) {
                                                                                        if (err) {
                                                                                            // console.log(err);
                                                                                        }
                                                                                    })
                                                                                }
                                                                                if (holidaymultiplier == 'OT1') {
                                                                                    if (ot1Add == '') {
                                                                                        ot1Add = '00:00:00'
                                                                                    }
                                                                                    //console.log('holidayHoursShift');
                                                                                    finalOT1 = toSeconds(holidayHoursShift);
                                                                                    Attendance.update({
                                                                                        '_id': employeeAttendance._id,
                                                                                        'companyId': companyId
                                                                                    }, {
                                                                                        $set: {
                                                                                            ot1Rule: totalhoursAdjusted,
                                                                                            ot2Rule: '00:00:00',
                                                                                            normalTime: '00:00:00',
                                                                                            readFlag: true,
                                                                                            dayinLieu: holidayHoursShift,
                                                                                            Exception: holidayHoursShift,
                                                                                            exceptioncode: cmppayrollCode,
                                                                                            Exceptiontype: 'Holiday',
                                                                                            ExceptionAssign: 'Holiday',
                                                                                            cutException: '',
                                                                                            addweeklyexc: '',
                                                                                        }
                                                                                    }, {
                                                                                        upsert: false,
                                                                                        new: false
                                                                                    }, function(err, data) {
                                                                                        if (err) {
                                                                                            // console.log(err);
                                                                                        }
                                                                                    })
                                                                                }
                                                                                if (holidaymultiplier == 'OT2') {
                                                                                    if (ot2Add == '') {
                                                                                        ot2Add = '00:00:00'
                                                                                    }
                                                                                    finalOT2 = toSeconds(holidayHoursShift);
                                                                                    Attendance.update({
                                                                                        '_id': employeeAttendance._id,
                                                                                        'companyId': companyId
                                                                                    }, {
                                                                                        $set: {
                                                                                            ot2Rule: totalhoursAdjusted,
                                                                                            ot1Rule: '00:00:00',
                                                                                            normalTime: '00:00:00',
                                                                                            readFlag: true,
                                                                                            dayinLieu: holidayHoursShift,
                                                                                            Exception: holidayHoursShift,
                                                                                            exceptioncode: cmppayrollCode,
                                                                                            Exceptiontype: 'Holiday',
                                                                                            ExceptionAssign: 'Holiday',
                                                                                            cutException: '',
                                                                                            addweeklyexc: '',
                                                                                        }
                                                                                    }, {
                                                                                        upsert: false,
                                                                                        new: false
                                                                                    }, function(err, data) {
                                                                                        if (err) {
                                                                                            // console.log(err);
                                                                                        }
                                                                                    })
                                                                                }
                                                                                //console.log('calculate holiday hours');
                                                                            }
                                                                        }
                                                                    });
                                                                }
                                                            }) //attendance update
                                                    } else {
                                                        getShiftData(shiftType, shift, companyId, function(result) {
                                                                var shift = result.name;
                                                                var shiftStartTime = new Date(Date.parse(result.startTime)).toUTCString();
                                                                var shiftFinishTime = new Date(Date.parse(result.finishTime)).toUTCString();
                                                                var startLimit = result.startLimit;
                                                                var finishLimit = result.finishLimit;
                                                                var ordinarytime = result.ordinarytime;
                                                                var overTime1 = result.overTime1;
                                                                var overTime2 = result.overTime2;
                                                                var breakTime = result.breakTime;
                                                                var breakAfter = result.breakAfter;
                                                                var breakTime2 = result.breakTime2;
                                                                var breakAfter2 = result.breakAfter2;
                                                                var breakIn = result.breakIn;
                                                                var breakIn2 = result.breakIn2;
                                                                var OT1 = '00:00:00';
                                                                var OT2 = '00:00:00';
                                                                var allowances = result.allowance;
                                                                var timezoneListArray = [];
                                                                if (result.timeZones) {
                                                                    timezoneListArray = result.timeZones;
                                                                }
                                                                if (timezoneListArray.length > 0) {
                                                                    var timeZoneNTArray = [];
                                                                    var timeZoneOt1Array = [];
                                                                    var timeZoneOt2Array = [];
                                                                    result.timeZones.forEach(function(timezone) {
                                                                        if (timezone.payPeriod == "NT") {
                                                                            timeZoneNTArray.push({
                                                                                zoneName: timezone.zoneName,
                                                                                finishTime: timezone.finishTime,
                                                                                startTime: timezone.startTime
                                                                            });
                                                                        } else if (timezone.payPeriod == "OT1") {
                                                                            timeZoneOt1Array.push({
                                                                                zoneName: timezone.zoneName,
                                                                                finishTime: timezone.finishTime,
                                                                                startTime: timezone.startTime
                                                                            });
                                                                        } else if (timezone.payPeriod == "OT2") {
                                                                            timeZoneOt2Array.push({
                                                                                zoneName: timezone.zoneName,
                                                                                finishTime: timezone.finishTime,
                                                                                startTime: timezone.startTime
                                                                            });
                                                                        }
                                                                    });
                                                                    var arrays = {
                                                                        ntArray: timeZoneNTArray,
                                                                        ot1Array: timeZoneOt1Array,
                                                                        ot2Array: timeZoneOt2Array
                                                                    };
                                                                    devideHourIntoNt(employeeAttendance._id, companyId, arrays, function(ntTotal) {
                                                                        console.log("ntTotal.zoneName........." + ntTotal.zoneName);
                                                                        global.normalTime = '00:00:00';
                                                                        if (breakAfter) {
                                                                            if (!breakTime) {
                                                                                breakTime = '00:00:00';
                                                                            }
                                                                            totalhoursAdjustedHours = ntTotal.normalTime;
                                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                                if (breakIn == true) {
                                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                                } else {
                                                                                    var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                                }
                                                                                // console.log(afterhours);
                                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                                afterhours %= 3600;
                                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                var totalhoursAdjusted = FinalHours;
                                                                                breaktaken = true;
                                                                            } else {
                                                                                var totalhoursAdjusted = ntTotal.normalTime;
                                                                            }
                                                                        } else {
                                                                            var totalhoursAdjusted = ntTotal.normalTime;
                                                                        }
                                                                        if (breakAfter2) {
                                                                            if (!breakTime2) {
                                                                                breakTime2 = '00:00:00';
                                                                            }
                                                                            // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                            if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                                if (breakIn2 == true) {
                                                                                    // console.log("iffffff");
                                                                                    var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                                } else {
                                                                                    // console.log("else iffffff")
                                                                                    var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                                }
                                                                                // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                                var hours1 = Math.floor(afterhours / 3600);
                                                                                afterhours %= 3600;
                                                                                var minutes1 = Math.floor(afterhours / 60);
                                                                                var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                                var totalhoursAdjusted = FinalHours;
                                                                                breaktaken2 = true;
                                                                            } else {
                                                                                var totalhoursAdjusted = totalhoursAdjusted;
                                                                            }
                                                                        }
                                                                        totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = ntTotal.OT1;
                                                                        OT2 = ntTotal.OT2;
                                                                        if (OT1) {
                                                                            OT1 = changeFormat(OT1);
                                                                        }
                                                                        if (OT2) {
                                                                            OT2 = changeFormat(OT2);
                                                                        }
                                                                        var allowancesArray = [];
                                                                        if (allowances) {
                                                                            for (i = 0; i < allowances.length; i++) {
                                                                                var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                                var allowanceName = allowances[i].name;
                                                                                if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                                    allowancesArray.push({
                                                                                        name: allowanceName,
                                                                                        status: true
                                                                                    })
                                                                                } else {
                                                                                    allowancesArray.push({
                                                                                        name: allowanceName,
                                                                                        status: false
                                                                                    })
                                                                                }
                                                                            }
                                                                        }
                                                                        normalTimeAdd = normalTime;
                                                                        ot1Add = OT1;
                                                                        ot2Add = OT2;
                                                                        var NtOThours = toSeconds(OT2) + toSeconds(OT1) + toSeconds(normalTime);
                                                                        var hours1 = Math.floor(NtOThours / 3600);
                                                                        NtOThours %= 3600;
                                                                        var minutes1 = Math.floor(NtOThours / 60);
                                                                        var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                        totalRoundedAdd = FinalHours;
                                                                        if (totalhours) {
                                                                            totalhours = changeFormat(totalhours);
                                                                        }
                                                                        Attendance.update({
                                                                                '_id': employeeAttendance._id
                                                                            }, {
                                                                                $set: {
                                                                                    normalTime: normalTime,
                                                                                    ot1Rule: OT1,
                                                                                    ot2Rule: OT2,
                                                                                    total: totalhours,
                                                                                    totalRounded: FinalHours,
                                                                                    breaktaken: breaktaken,
                                                                                    breaktaken2: breaktaken2,
                                                                                    readFlag: true,
                                                                                    allowances: allowancesArray
                                                                                }
                                                                            }, {
                                                                                upsert: false,
                                                                                new: false
                                                                            }, function(err, data) {
                                                                                if (err) {
                                                                                    // console.log(err);
                                                                                } else {
                                                                                    if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                                        calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                            // if(result) {
                                                                                            //  res.json(true);
                                                                                            // }
                                                                                        })
                                                                                    }
                                                                                    shiftHoursForHolidays(shift, companyId, function(result) {
                                                                                        var holidayHoursShift = result;
                                                                                        var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD hh:mm:ss');
                                                                                        if (holidayresult.indexOf(dateGive) > -1) {
                                                                                            if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                                var finalnormalTime = '';
                                                                                                var finalOT1 = '';
                                                                                                var finalOT2 = '';
                                                                                                console.log("15aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                                if (holidaymultiplier == 'NT') {
                                                                                                    finalnormalTime = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            normalTime: totalhoursAdjusted,
                                                                                                            ot2Rule: '00:00:00',
                                                                                                            ot1Rule: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                if (holidaymultiplier == 'OT1') {
                                                                                                    if (ot1Add == '') {
                                                                                                        ot1Add = '00:00:00'
                                                                                                    }
                                                                                                    //console.log('holidayHoursShift');
                                                                                                    finalOT1 = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            ot1Rule: totalhoursAdjusted,
                                                                                                            ot2Rule: '00:00:00',
                                                                                                            normalTime: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                if (holidaymultiplier == 'OT2') {
                                                                                                    if (ot2Add == '') {
                                                                                                        ot2Add = '00:00:00'
                                                                                                    }
                                                                                                    finalOT2 = toSeconds(holidayHoursShift);
                                                                                                    Attendance.update({
                                                                                                        '_id': employeeAttendance._id,
                                                                                                        'companyId': companyId
                                                                                                    }, {
                                                                                                        $set: {
                                                                                                            ot2Rule: totalhoursAdjusted,
                                                                                                            ot1Rule: '00:00:00',
                                                                                                            normalTime: '00:00:00',
                                                                                                            readFlag: true,
                                                                                                            dayinLieu: holidayHoursShift,
                                                                                                            Exception: holidayHoursShift,
                                                                                                            exceptioncode: cmppayrollCode,
                                                                                                            Exceptiontype: 'Holiday',
                                                                                                            ExceptionAssign: 'Holiday',
                                                                                                            cutException: '',
                                                                                                            addweeklyexc: '',
                                                                                                        }
                                                                                                    }, {
                                                                                                        upsert: false,
                                                                                                        new: false
                                                                                                    }, function(err, data) {
                                                                                                        if (err) {
                                                                                                            // console.log(err);
                                                                                                        }
                                                                                                    })
                                                                                                }
                                                                                                //console.log('calculate holiday hours');
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                }
                                                                            }) //attendance update
                                                                    });
                                                                } else {
                                                                    global.normalTime = '00:00:00';
                                                                    if (breakAfter) {
                                                                        if (!breakTime) {
                                                                            breakTime = '00:00:00';
                                                                        }
                                                                        if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter)) {
                                                                            if (breakIn == true) {
                                                                                var afterhours = toSeconds(totalhoursAdjustedHours) + toSeconds(breakTime);
                                                                            } else {
                                                                                var afterhours = toSeconds(totalhoursAdjustedHours) - toSeconds(breakTime);
                                                                            }
                                                                            console.log(afterhours);
                                                                            var hours1 = Math.floor(afterhours / 3600);
                                                                            afterhours %= 3600;
                                                                            var minutes1 = Math.floor(afterhours / 60);
                                                                            var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                            var totalhoursAdjusted = FinalHours;
                                                                            breaktaken = true;
                                                                        } else {
                                                                            var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                        }
                                                                    } else {
                                                                        var totalhoursAdjusted = totalhoursAdjustedHours;
                                                                    }
                                                                    if (breakAfter2) {
                                                                        if (!breakTime2) {
                                                                            breakTime2 = '00:00:00';
                                                                        }
                                                                        // console.log("totalhoursAdjustedHours......*********"+totalhoursAdjustedHours);
                                                                        if (toSeconds(totalhoursAdjustedHours) > toSeconds(breakAfter2)) {
                                                                            if (breakIn2 == true) {
                                                                                // console.log("iffffff");
                                                                                var afterhours = toSeconds(totalhoursAdjusted) + toSeconds(breakTime2);
                                                                            } else {
                                                                                // console.log("else iffffff")
                                                                                var afterhours = toSeconds(totalhoursAdjusted) - toSeconds(breakTime2);
                                                                            }
                                                                            // console.log("afterhours........ of breakAfter2........"+afterhours);
                                                                            var hours1 = Math.floor(afterhours / 3600);
                                                                            afterhours %= 3600;
                                                                            var minutes1 = Math.floor(afterhours / 60);
                                                                            var FinalHours = hours1 + ':' + minutes1 + ':00';
                                                                            var totalhoursAdjusted = FinalHours;
                                                                            breaktaken2 = true;
                                                                        } else {
                                                                            var totalhoursAdjusted = totalhoursAdjusted;
                                                                        }
                                                                    }
                                                                    totalhoursAdjusted = changeFormat(totalhoursAdjusted);
                                                                    // console.log(totalhoursAdjusted + '.......after Format');
                                                                    if (dataCompany.isovertime) {
                                                                        // console.log('isovertime......................');
                                                                        // console.log("ordinarytime........."+ordinarytime);
                                                                        if (weekly == 0) {
                                                                            if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                                if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                                    normalTime = ordinarytime;
                                                                                    totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                                    var Time1 = totalSeconds;
                                                                                    hours = Math.floor(Time1 / 3600);
                                                                                    Time1 %= 3600;
                                                                                    minutes = Math.floor(Time1 / 60);
                                                                                    seconds = Time1 % 60;
                                                                                    if (overTime1 != '00:00:00' && overTime1 != '') {
                                                                                        if (totalSeconds > toSeconds(overTime1)) {
                                                                                            console.log('asdas');
                                                                                            OT1 = overTime1;
                                                                                            var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                            hours = Math.floor(remaigntime / 3600);
                                                                                            remaigntime %= 3600;
                                                                                            minutes = Math.floor(remaigntime / 60);
                                                                                            seconds = remaigntime % 60;
                                                                                            OT2 = hours + ':' + minutes + ':' + seconds
                                                                                        } else {
                                                                                            console.log('not');
                                                                                            hours = Math.floor(totalSeconds / 3600);
                                                                                            totalSeconds %= 3600;
                                                                                            minutes = Math.floor(totalSeconds / 60);
                                                                                            seconds = totalSeconds % 60;
                                                                                            OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                            OT2 = '';
                                                                                        }
                                                                                    } else {
                                                                                        hours = Math.floor(totalSeconds / 3600);
                                                                                        totalSeconds %= 3600;
                                                                                        minutes = Math.floor(totalSeconds / 60);
                                                                                        seconds = totalSeconds % 60;
                                                                                        OT2 = '00:00:00';
                                                                                        OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                    }
                                                                                } else {
                                                                                    normalTime = totalhoursAdjusted;
                                                                                    OT1 = '';
                                                                                    OT2 = '';
                                                                                }
                                                                            } else {
                                                                                if (ordinarytime == '') {
                                                                                    normalTime = totalhoursAdjusted;
                                                                                    OT1 = '00:00:00';
                                                                                    OT2 = '00:00:00';
                                                                                } else {
                                                                                    if (dataCompany.overtimeLevel == "1" && dataCompany.overtimePeriod == 'daily') {
                                                                                        normalTime = '00:00:00';
                                                                                        OT1 = totalhoursAdjusted;
                                                                                        OT2 = '00:00:00';
                                                                                    } else {
                                                                                        normalTime = '00:00:00';
                                                                                        OT1 = '00:00:00';
                                                                                        OT2 = totalhoursAdjusted;
                                                                                    }
                                                                                }
                                                                                /*if(overTime1 != '00:00:00'){
                                                                                    var totalSeconds1 =  toSeconds(totalhoursAdjusted)
                                                                                    if(totalSeconds1 > toSeconds(overTime1)){
                                                                                        console.log('asdas');
                                                                                        OT1 = overTime1;
                                                                                        var remaigntime = totalSeconds1 - toSeconds(overTime1);
                                                                                        hours = Math.floor(remaigntime / 3600);
                                                                                        remaigntime %= 3600;
                                                                                        minutes = Math.floor(remaigntime / 60);
                                                                                        seconds = remaigntime % 60;
                                                                                        OT2 = hours+':'+minutes+':'+seconds;
                                                                                    }else{
                                                                                        console.log('not');
                                                                                        hours = Math.floor(totalSeconds1 / 3600);
                                                                                        totalSeconds1 %= 3600;
                                                                                        minutes = Math.floor(totalSeconds1 / 60);
                                                                                        seconds = totalSeconds1 % 60;
                                                                                        OT1 = hours+':'+minutes+':'+seconds;
                                                                                        OT2 = '';
                                                                                    }
                                                                                }else{
                                                                                    normalTime = '00:00:00';
                                                                                    OT1  = '00:00:00';
                                                                                    OT2 = totalhoursAdjusted;
                                                                                }*/
                                                                            }
                                                                        } //daily
                                                                        if (weekly == 1) {
                                                                            if (ordinarytime != '00:00:00' && ordinarytime != '') {
                                                                                console.log(ordinarytime + 'ordinarytime');
                                                                                if (toSeconds(totalhoursAdjusted) > toSeconds(ordinarytime)) {
                                                                                    normalTime = ordinarytime;
                                                                                    totalSeconds = toSeconds(totalhoursAdjusted) - toSeconds(ordinarytime);
                                                                                    var Time1 = totalSeconds;
                                                                                    hours = Math.floor(Time1 / 3600);
                                                                                    Time1 %= 3600;
                                                                                    minutes = Math.floor(Time1 / 60);
                                                                                    seconds = Time1 % 60;
                                                                                    if (totalSeconds > toSeconds(overTime1) && overTime1 != '00:00:00') {
                                                                                        OT1 = overTime1;
                                                                                        var remaigntime = totalSeconds - toSeconds(overTime1);
                                                                                        hours = Math.floor(remaigntime / 3600);
                                                                                        remaigntime %= 3600;
                                                                                        minutes = Math.floor(remaigntime / 60);
                                                                                        seconds = remaigntime % 60;
                                                                                        OT2 = hours + ':' + minutes + ':' + seconds;
                                                                                    } else {
                                                                                        hours = Math.floor(totalSeconds / 3600);
                                                                                        totalSeconds %= 3600;
                                                                                        minutes = Math.floor(totalSeconds / 60);
                                                                                        seconds = totalSeconds % 60;
                                                                                        OT1 = hours + ':' + minutes + ':' + seconds;
                                                                                        OT2 = '';
                                                                                    }
                                                                                } else {
                                                                                    normalTime = totalhoursAdjusted;
                                                                                    OT1 = '';
                                                                                    OT2 = '';
                                                                                }
                                                                            } else {
                                                                                normalTime = totalhoursAdjusted;
                                                                                OT1 = '';
                                                                                OT2 = '';
                                                                            }
                                                                        } //weekly
                                                                    } else {
                                                                        normalTime = totalhoursAdjusted;
                                                                        OT1 = '00:00:00';
                                                                        OT2 = '00:00:00';
                                                                    }
                                                                    if (OT1) {
                                                                        OT1 = changeFormat(OT1);
                                                                    }
                                                                    if (OT2) {
                                                                        OT2 = changeFormat(OT2);
                                                                    }
                                                                    var allowancesArray = [];
                                                                    if (allowances) {
                                                                        console.log(allowances + 'assign------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>');
                                                                        for (i = 0; i < allowances.length; i++) {
                                                                            // console.log(allowances[i].name);
                                                                            // console.log(allowances[i].payAfter);
                                                                            var payAfter = allowances[i].payAfter + ':00' + ':00';
                                                                            var allowanceName = allowances[i].name;
                                                                            if (toSeconds(totalhoursAdjusted) > toSeconds(payAfter)) {
                                                                                // console.log(toSeconds(totalhoursAdjusted));
                                                                                // console.log(toSeconds(payAfter));
                                                                                allowancesArray.push({
                                                                                    name: allowanceName,
                                                                                    status: true
                                                                                })
                                                                            } else {
                                                                                allowancesArray.push({
                                                                                    name: allowanceName,
                                                                                    status: false
                                                                                })
                                                                            }
                                                                        }
                                                                    }
                                                                    // console.log(allowancesArray + '66666666666666666666666666666');
                                                                    // console.log(totalhours+'Final total Hours');
                                                                    // console.log(totalhoursAdjusted + 'totalhoursAdjustedHours11111111111');
                                                                    // console.log(normalTime+'......normalTime');
                                                                    // console.log(OT1+'........ot1');
                                                                    // console.log(OT2+'........ot2');
                                                                    // console.log('==========');
                                                                    // console.log(breakAfter +'breakAfter');
                                                                    // console.log(breaktaken +'breaktaken');
                                                                    normalTimeAdd = normalTime;
                                                                    ot1Add = OT1;
                                                                    ot2Add = OT2;
                                                                    totalRoundedAdd = totalhoursAdjusted;
                                                                    if (totalhours) {
                                                                        totalhours = changeFormat(totalhours);
                                                                    }
                                                                    Attendance.update({
                                                                            '_id': employeeAttendance._id
                                                                        }, {
                                                                            $set: {
                                                                                normalTime: normalTime,
                                                                                ot1Rule: OT1,
                                                                                ot2Rule: OT2,
                                                                                total: totalhours,
                                                                                totalRounded: totalhoursAdjusted,
                                                                                breaktaken: breaktaken,
                                                                                breaktaken2: breaktaken2,
                                                                                readFlag: true,
                                                                                allowances: allowancesArray
                                                                            }
                                                                        }, {
                                                                            upsert: false,
                                                                            new: false
                                                                        }, function(err, data) {
                                                                            console.log("save ot and ot2...........");
                                                                            if (err) {
                                                                                console.log(err);
                                                                            } else {
                                                                                if (employeeAttendance.ExceptionAssign && employeeAttendance.Exception) {
                                                                                    calculateExceptionHours(employeeAttendance.ExceptionAssign, dataCompany, employeeAttendance._id, function(result) {
                                                                                        // if(result) {
                                                                                        //  res.json(true);
                                                                                        // }
                                                                                    })
                                                                                }
                                                                                shiftHoursForHolidays(shift, companyId, function(result) {
                                                                                    var holidayHoursShift = result;
                                                                                    console.log("result.....");
                                                                                    // console.log(result);
                                                                                    // console.log("holidayHoursShift..........");
                                                                                    var dateGive = Moment(employeeAttendance.date).format('YYYY-MM-DD');
                                                                                    // console.log("dateGive..."+dateGive);
                                                                                    if (holidayresult.indexOf(dateGive) > -1) {
                                                                                        // console.log(dateGive);
                                                                                        // console.log('shiftshiftshift' + shift);
                                                                                        if (employeeAttendance.holiday == true && employeeAttendance.checkin.length > 0 && shift != 'not Working') {
                                                                                            var finalnormalTime = '';
                                                                                            var finalOT1 = '';
                                                                                            var finalOT2 = '';
                                                                                            console.log("16aaaaaaaaaaaaaaaaaassssssssssssssssssssssmitaaaaaaaaaaaaa.......holidaymultiplier...." + holidaymultiplier);
                                                                                            if (holidaymultiplier == 'NT') {
                                                                                                console.log("in now ntttttttt..........");
                                                                                                finalnormalTime = toSeconds(holidayHoursShift);
                                                                                                Attendance.update({
                                                                                                    '_id': employeeAttendance._id,
                                                                                                    'companyId': companyId
                                                                                                }, {
                                                                                                    $set: {
                                                                                                        normalTime: totalhoursAdjusted,
                                                                                                        ot2Rule: '00:00:00',
                                                                                                        ot1Rule: '00:00:00',
                                                                                                        readFlag: true,
                                                                                                        dayinLieu: holidayHoursShift,
                                                                                                        Exception: holidayHoursShift,
                                                                                                        exceptioncode: payrollCode,
                                                                                                        Exceptiontype: 'Holiday',
                                                                                                        ExceptionAssign: 'Holiday',
                                                                                                        cutException: '',
                                                                                                        addweeklyexc: '',
                                                                                                    }
                                                                                                }, {
                                                                                                    upsert: false,
                                                                                                    new: false
                                                                                                }, function(err, data) {
                                                                                                    if (err) {
                                                                                                        // console.log(err);
                                                                                                    }
                                                                                                })
                                                                                            }

                                                                                            if (holidaymultiplier == 'OT1') {
                                                                                                if (ot1Add == '') {
                                                                                                    ot1Add = '00:00:00'
                                                                                                }
                                                                                                console.log('holidayHoursShift');
                                                                                                finalOT1 = toSeconds(holidayHoursShift);
                                                                                                Attendance.update({
                                                                                                    '_id': employeeAttendance._id,
                                                                                                    'companyId': companyId
                                                                                                }, {
                                                                                                    $set: {
                                                                                                        ot1Rule: totalhoursAdjusted,
                                                                                                        ot2Rule: '00:00:00',
                                                                                                        normalTime: '00:00:00',
                                                                                                        readFlag: true,
                                                                                                        dayinLieu: holidayHoursShift,
                                                                                                        Exception: holidayHoursShift,
                                                                                                        exceptioncode: cmppayrollCode,
                                                                                                        Exceptiontype: 'Holiday',
                                                                                                        ExceptionAssign: 'Holiday',
                                                                                                        cutException: '',
                                                                                                        addweeklyexc: '',
                                                                                                    }
                                                                                                }, {
                                                                                                    upsert: false,
                                                                                                    new: false
                                                                                                }, function(err, data) {
                                                                                                    if (err) {
                                                                                                        // console.log(err);
                                                                                                    }
                                                                                                })
                                                                                            }

                                                                                            if (holidaymultiplier == 'OT2') {
                                                                                                if (ot2Add == '') {
                                                                                                    ot2Add = '00:00:00'
                                                                                                }
                                                                                                finalOT2 = toSeconds(holidayHoursShift);
                                                                                                Attendance.update({
                                                                                                    '_id': employeeAttendance._id,
                                                                                                    'companyId': companyId
                                                                                                }, {
                                                                                                    $set: {
                                                                                                        ot2Rule: totalhoursAdjusted,
                                                                                                        ot1Rule: '00:00:00',
                                                                                                        normalTime: '00:00:00',
                                                                                                        readFlag: true,
                                                                                                        dayinLieu: holidayHoursShift,
                                                                                                        Exception: holidayHoursShift,
                                                                                                        exceptioncode: cmppayrollCode,
                                                                                                        Exceptiontype: 'Holiday',
                                                                                                        ExceptionAssign: 'Holiday',
                                                                                                        cutException: '',
                                                                                                        addweeklyexc: '',
                                                                                                    }
                                                                                                }, {
                                                                                                    upsert: false,
                                                                                                    new: false
                                                                                                }, function(err, data) {
                                                                                                    if (err) {
                                                                                                        // console.log(err);
                                                                                                    }
                                                                                                })
                                                                                            }
                                                                                            // console.log('calculate holiday hours');
                                                                                        }
                                                                                    }
                                                                                })
                                                                            }

                                                                        }) //attendance update
                                                                }
                                                            }) //shiftData
                                                    }
                                                }) //totalhours
                                        }
                                    })
                                }
                            }
                        }
                        n++;
                    }
                }

                // Workcode updation
                if (workCode && workCode != '0') {
                    // Update/Create doc if not exist
                    if (dataCompany.isAutoTask) {
                        Tasks.update({
                            'companyId': companyId
                        }, {
                            $set: {
                                'companyId': companyId,
                                'companyName': dataCompany.companyname,
                            }
                        }, {
                            upsert: true,
                            new: false
                        }, function(err, data) {
                            if (!err && data) {
                                console.log("task doc upserted");
                            }
                        });
                    }

                    // Find auto tasks
                    Tasks.find({
                        'companyId': companyId
                    }, function(errs, taskDetails) {
                        var taskData = taskDetails[0],
                            taskCnt = 0,
                            taskArray = [],
                            taskArrayNew = [];

                        // console.log("myData"+ taskData);
                        if (taskData) {
                            if (taskData.tasks.length > 0) {
                                // Async Tasks
                                async.eachSeries(taskData.tasks, function(tsk, callbackTasks) {
                                    taskCnt++;

                                    // updated tasks
                                    taskArray.push({
                                        'taskname': tsk.taskName,
                                        'taskCode': tsk.taskCode,
                                        'calcInclude': dataCompany.isAutoTask
                                    });

                                    // new tasks
                                    taskArrayNew.push({
                                        'taskname': tsk.taskName,
                                        'taskCode': workCode + tsk.taskCode,
                                        'calcInclude': dataCompany.isAutoTask
                                    });

                                    if (taskData.tasks.length === taskCnt) {
                                        // console.log(taskArray);
                                        // console.log(taskArrayNew);

                                        // check and setup workcode
                                        workCodeSetup(dataCompany, workCode, taskArray, taskArrayNew, function(wkStatus) {
                                            if (wkStatus) {
                                                console.log("done for workCode " + workCode);
                                            }
                                        });
                                    } else {
                                        callbackTasks();
                                    }

                                });
                            } else {
                                console.log("No auto task list found");
                                //check and setup workcode
                                workCodeSetup(dataCompany, workCode, taskArray, taskArrayNew, function(wkStatus) {
                                    if (wkStatus) {
                                        console.log("done for workCode " + workCode);
                                    }
                                });
                            }
                        } else {
                            console.log("No auto task list found");
                            //check and setup workcode
                            workCodeSetup(dataCompany, workCode, taskArray, taskArrayNew, function(wkStatus) {
                                if (wkStatus) {
                                    console.log("done for workCode " + workCode);
                                }
                            });
                        }
                    });
                } else {
                    console.log("without workcode *****");
                }
            });
        }
    }
}
// generate the employeeNo of the given companyId
function generate_employeeNo(companyId, callback) {
    Company.find({
        '_id': companyId
    }, function(err, cmpDetail) {
        if (cmpDetail.length > 0) {
            var cmpDetails = cmpDetail[0];
            if (cmpDetails.isEmpNoNewMode) {
                if (cmpDetails.is3GIdMode) {
                    employeeNumbers.find({
                        usedEmployeeNo: false,
                        employeeNo: {
                            $lte: 99999
                        }
                    }).sort({
                        "employeeNo": -1
                    }).limit(1).exec(function(err, result) {
                        employeeNumbers.update({
                            employeeNo: result[0].employeeNo
                        }, {
                            $set: {
                                usedEmployeeNo: true
                            }
                        }, {
                            upsert: false,
                            new: false
                        }, function(err, save) {
                            var empArray = {};
                            empArray = {
                                employeeNo: result[0].employeeNo,
                                oldEmployeeNo: 0
                            };
                            callback(empArray);
                        })
                    });
                } else {
                    employeeNumbers.find({
                        usedEmployeeNo: false
                    }).sort({
                        "employeeNo": -1
                    }).limit(1).exec(function(err, result) {
                        employeeNumbers.update({
                            employeeNo: result[0].employeeNo
                        }, {
                            $set: {
                                usedEmployeeNo: true
                            }
                        }, {
                            upsert: false,
                            new: false
                        }, function(err, save) {
                            var empArray = {};
                            empArray = {
                                employeeNo: result[0].employeeNo,
                                oldEmployeeNo: 0
                            };
                            callback(empArray);
                        })
                    });
                }
            } else {
                if (cmpDetails.is3GIdMode) {
                    employeeNumbers.find({
                        usedEmployeeNo: false,
                        employeeNo: {
                            $lte: 99999
                        }
                    }).sort({
                        "employeeNo": -1
                    }).limit(1).exec(function(err, result) {
                        employeeNumbers.update({
                            employeeNo: result[0].employeeNo
                        }, {
                            $set: {
                                usedEmployeeNo: true
                            }
                        }, {
                            upsert: false,
                            new: false
                        }, function(err, save) {
                            var empArray = {};
                            empArray = {
                                employeeNo: result[0].employeeNo,
                                oldEmployeeNo: 0
                            };
                            callback(empArray);
                        })
                    });
                } else {
                    Employee.find()
                        .where({
                            'companyId': companyId
                        })
                        .limit(1)
                        .sort('-employeeNo')
                        .exec(function(err, docs) {
                            var doc = docs[0];
                            var max = parseInt(doc.employeeNo);
                            var employeeNo = max + 1;
                            var empArray = {};
                            empArray = {
                                employeeNo: employeeNo,
                                oldEmployeeNo: ""
                            };
                            callback(empArray);
                        });
                }
            }
        }
    });
}

function startAndEndOfWeek(date) { // return the week start and and end date of the given date

    // If no date object supplied, use current date
    // Copy date so don't modify supplied date
    var now = date ? new Date(date) : new Date();

    // set time to some convenient value
    now.setHours(0, 0, 0, 0);

    // Get the previous Monday
    var monday = new Date(now);
    monday.setDate(monday.getDate() - monday.getDay() + 1);

    // Get next Sunday
    var sunday = new Date(now);
    sunday.setDate(sunday.getDate() - sunday.getDay() + 7);

    // Return array of date objects
    return [monday, sunday];
}

function closest(num, arr, minute) { //find closest number from array
    var curr = '';
    for (var val = 0; val < arr.length; val++) {
        curr = arr[val] + minute;
        if (num <= curr) {
            return arr[val];
        }
    }
}

function toSeconds(t) { // convert time(HH:MM:SS) to seconds
    if (t) {
        t = t.toString();
        if (t.length == 2 || t.length == 1) {
            t = t + ":00:00";
        }
    } else {
        t = "00:00:00";
    }
    var bits = t.split(':');
    if (bits.length <= 2) {
        t = t.toString();
        t = t + ":00";
        bits = t.split(':');
    }
    return bits[0] * 3600 + bits[1] * 60 + bits[2] * 1;
}

function devideHourIntoNt(id, companyId, arrays, callback) {
    Company.find({
        '_id': companyId
    }, {}, {
        limit: 1
    }, function(err, dataCompanys) {
        var dataCompany = dataCompanys[0];
        if (dataCompany.isrounding) {
            if (dataCompany.rounding == 'in/out') {
                var inRounding = dataCompany.inRounding;
                var inroundupafter = dataCompany.inroundupafter;
                var outRounding = dataCompany.outRounding;
                var outroundupafter = dataCompany.outroundupafter;
            } else {
                var closestMin = dataCompany.closestMin;
                var roundUpAfter = dataCompany.roundUpAfter;
            }
        }
        var result = [];
        var Data = [];
        // console.log("atnId......"+id);
        Attendance.find({
            '_id': id,
            'companyId': companyId
        }).limit(1).exec(function(err, datas) {
            var data = datas[0];
            var normalTimeTotal = [];
            var inoutArray = [];
            var cnt = 0;
            var dt = new Date();
            // console.log("0000");
            var normTime = Moment.utc(dt).hour('00').minute('00').seconds('00');
            var ot1 = Moment.utc(dt).hour('00').minute('00').seconds('00');
            var ot2 = Moment.utc(dt).hour('00').minute('00').seconds('00');
            data.checkin.forEach(function(checkinDetail) {
                // console.log(checkinDetail);
                cnt++;
                var timeZoneForIO = Moment.utc(checkinDetail.checkTime).format('HH:mm');
                if (checkinDetail.checkType == "I") {
                    timeZoneForIO = Moment.utc(checkinDetail.checkTime).add('minute', 1).format('HH:mm');
                }
                if (checkinDetail.checkType == "O") {
                    timeZoneForIO = Moment.utc(checkinDetail.checkTime).subtract('minute', 1).format('HH:mm');
                }
                console.log("timeZoneForIO..........." + timeZoneForIO);
                arrays.ntArray.forEach(function(ntDetail) {
                    if (timeZoneForIO > ntDetail.startTime && timeZoneForIO < ntDetail.finishTime) {
                        Attendance.update({
                            'checkin._id': checkinDetail._id
                        }, {
                            $set: {
                                'checkin.$.zoneName': ntDetail.zoneName
                            }
                        }, {
                            upsert: false,
                            new: false
                        }, function(err, data) {});
                    }
                });
                arrays.ot1Array.forEach(function(ntDetail) {
                    if (timeZoneForIO > ntDetail.startTime && timeZoneForIO < ntDetail.finishTime) {
                        Attendance.update({
                            'checkin._id': checkinDetail._id
                        }, {
                            $set: {
                                'checkin.$.zoneName': ntDetail.zoneName
                            }
                        }, {
                            upsert: false,
                            new: false
                        }, function(err, data) {});
                    }
                });
                arrays.ot2Array.forEach(function(ntDetail) {
                    if (timeZoneForIO > ntDetail.startTime && timeZoneForIO < ntDetail.finishTime) {
                        Attendance.update({
                            'checkin._id': checkinDetail._id
                        }, {
                            $set: {
                                'checkin.$.zoneName': ntDetail.zoneName
                            }
                        }, {
                            upsert: false,
                            new: false
                        }, function(err, data) {});
                    }
                });
                inoutArray.push(checkinDetail.checkTime);
                if (inoutArray.length == "2") {
                    var startIn = inoutArray[0];
                    var finishOut = inoutArray[1];
                    arrays.ntArray.forEach(function(ntDetail) {
                        var checkIn = Moment.utc(startIn).format('HH:mm');
                        var checkOut = Moment.utc(finishOut).format('HH:mm');

                        var checkDate = new Date();
                        checkDate = Moment.utc(checkDate).format('YYYY-MM-DD');

                        var shiftIn = ntDetail.startTime.split(':');
                        var InHourset = Moment.utc(checkDate).set('hours', shiftIn[0]);
                        var Indate = Moment.utc(InHourset).set('minute', shiftIn[1]);
                        var INnewDate = new Date(Date.parse(Indate)).toUTCString();
                        INnewDate = Moment.utc(INnewDate);

                        var shiftOut = ntDetail.finishTime.split(':');
                        var OutHourset = Moment.utc(checkDate).set('hours', shiftOut[0]);
                        var Outdate = Moment.utc(OutHourset).set('minute', shiftOut[1]);
                        var OutnewDate = new Date(Date.parse(Outdate)).toUTCString();
                        OutnewDate = Moment.utc(OutnewDate);

                        var finalInTime = new Date(Date.parse(Indate)).toUTCString();
                        var finalOutTime = new Date(Date.parse(Outdate)).toUTCString();
                        if (checkIn >= ntDetail.startTime && checkOut <= ntDetail.finishTime) {
                            var ms = Moment(finishOut, "DD/MM/YYYY HH:mm").diff(Moment(startIn, "DD/MM/YYYY HH:mm"));
                            var totalhours = Moment.utc(ms);
                            normTime = Moment(normTime).add(totalhours, 'hours');
                        } else {
                            var InOutTime = [];
                            var checkIn1 = checkIn;
                            var startIn1 = startIn;
                            while (checkIn1 <= checkOut) {
                                InOutTime.push(checkIn1);
                                startIn1 = Moment(startIn1).add(1, 'hours');
                                checkIn1 = Moment.utc(startIn1).format('HH:mm')
                            }

                            function isInArray(value, array) {
                                return array.indexOf(value) > -1;
                            }
                            // console.log(InOutTime);
                            var inTime = Moment.utc(INnewDate).format('HH:mm');
                            var outTime = Moment.utc(OutnewDate).format('HH:mm');
                            var inTimes = isInArray(inTime, InOutTime);
                            var outTimes = isInArray(outTime, InOutTime);
                            if (outTimes && inTimes) {
                                console.log("if(outTimes && inTimes) {");
                                var ms = Moment(finalOutTime, "DD/MM/YYYY HH:mm").diff(Moment(finalInTime, "DD/MM/YYYY HH:mm"));
                                var totalhours = Moment.utc(ms);
                                normTime = Moment(normTime).add(totalhours, 'hours');

                            } else if (inTimes && checkOut > ntDetail.startTime) {
                                var localyTime = new Date(Date.parse(finishOut)).toUTCString();
                                var ms = Moment(localyTime, "DD/MM/YYYY HH:mm").diff(Moment(finalInTime, "DD/MM/YYYY HH:mm"));
                                var totalhours = Moment.utc(ms);
                                normTime = Moment(normTime).add(totalhours, 'hours');

                            } else if (outTimes) {
                                console.log("} else if(outTimes) {");
                                var localyTime = new Date(Date.parse(startIn)).toUTCString();
                                var ms = Moment(finalOutTime, "DD/MM/YYYY HH:mm").diff(Moment(localyTime, "DD/MM/YYYY HH:mm"));
                                var totalhours = Moment.utc(ms);
                                normTime = Moment(normTime).add(totalhours, 'hours');
                            }
                        }
                    });
                    var startIn = inoutArray[0];
                    var finishOut = inoutArray[1];
                    arrays.ot1Array.forEach(function(ntDetail) {
                        var checkIn = Moment.utc(startIn).format('HH:mm');
                        var checkOut = Moment.utc(finishOut).format('HH:mm');

                        var checkDate = new Date();
                        checkDate = Moment.utc(checkDate).format('YYYY-MM-DD');

                        var shiftIn = ntDetail.startTime.split(':');
                        var InHourset = Moment.utc(checkDate).set('hours', shiftIn[0]);
                        var Indate = Moment.utc(InHourset).set('minute', shiftIn[1]);
                        var INnewDate = new Date(Date.parse(Indate)).toUTCString();
                        INnewDate = Moment.utc(INnewDate);

                        var shiftOut = ntDetail.finishTime.split(':');
                        var OutHourset = Moment.utc(checkDate).set('hours', shiftOut[0]);
                        var Outdate = Moment.utc(OutHourset).set('minute', shiftOut[1]);
                        var OutnewDate = new Date(Date.parse(Outdate)).toUTCString();
                        OutnewDate = Moment.utc(OutnewDate);

                        var finalInTime = new Date(Date.parse(Indate)).toUTCString();
                        var finalOutTime = new Date(Date.parse(Outdate)).toUTCString();

                        if (checkIn >= ntDetail.startTime && checkOut <= ntDetail.finishTime) {
                            var ms = Moment(finishOut, "DD/MM/YYYY HH:mm:ss").diff(Moment(startIn, "DD/MM/YYYY HH:mm:ss"));
                            var totalhours = Moment.utc(ms);
                            ot1 = Moment(ot1).add(totalhours, 'hours');
                        } else {
                            var InOutTime = [];
                            var checkIn1 = checkIn;
                            var startIn1 = startIn;
                            while (checkIn1 <= checkOut) {
                                InOutTime.push(checkIn1);
                                startIn1 = Moment(startIn1).add(1, 'hours');
                                checkIn1 = Moment.utc(startIn1).format('HH:mm')
                            }

                            function isInArray(value, array) {
                                return array.indexOf(value) > -1;
                            }
                            // console.log(InOutTime);
                            var inTime = Moment.utc(INnewDate).format('HH:mm');
                            var outTime = Moment.utc(OutnewDate).format('HH:mm');
                            var inTimes = isInArray(inTime, InOutTime);
                            var outTimes = isInArray(outTime, InOutTime);
                            if (outTimes && inTimes) {
                                console.log("if(outTimes && inTimes) {");
                                var ms = Moment(finalOutTime, "DD/MM/YYYY HH:mm").diff(Moment(finalInTime, "DD/MM/YYYY HH:mm"));
                                var totalhours = Moment.utc(ms);
                                ot1 = Moment(ot1).add(totalhours, 'hours');
                            } else if (inTimes && checkOut > ntDetail.startTime) {
                                var localyTime = new Date(Date.parse(finishOut)).toUTCString();
                                var ms = Moment(localyTime, "DD/MM/YYYY HH:mm").diff(Moment(finalInTime, "DD/MM/YYYY HH:mm"));
                                var totalhours = Moment.utc(ms);
                                ot1 = Moment(ot1).add(totalhours, 'hours');
                            } else if (outTimes) {
                                console.log("} else if(outTimes) {");
                                var localyTime = new Date(Date.parse(startIn)).toUTCString();
                                var ms = Moment(finalOutTime, "DD/MM/YYYY HH:mm").diff(Moment(localyTime, "DD/MM/YYYY HH:mm"));
                                var totalhours = Moment.utc(ms);
                                ot1 = Moment(ot1).add(totalhours, 'hours');
                            }
                        }
                    });
                    var startIn = inoutArray[0];
                    var finishOut = inoutArray[1];
                    arrays.ot2Array.forEach(function(ntDetail) {
                        var checkIn = Moment.utc(startIn).format('HH:mm');
                        var checkOut = Moment.utc(finishOut).format('HH:mm');

                        var checkDate = new Date();
                        checkDate = Moment.utc(checkDate).format('YYYY-MM-DD');

                        var shiftIn = ntDetail.startTime.split(':');
                        var InHourset = Moment.utc(checkDate).set('hours', shiftIn[0]);
                        var Indate = Moment.utc(InHourset).set('minute', shiftIn[1]);
                        var INnewDate = new Date(Date.parse(Indate)).toUTCString();
                        INnewDate = Moment.utc(INnewDate);

                        var shiftOut = ntDetail.finishTime.split(':');
                        var OutHourset = Moment.utc(checkDate).set('hours', shiftOut[0]);
                        var Outdate = Moment.utc(OutHourset).set('minute', shiftOut[1]);
                        var OutnewDate = new Date(Date.parse(Outdate)).toUTCString();
                        OutnewDate = Moment.utc(OutnewDate);

                        var finalInTime = new Date(Date.parse(Indate)).toUTCString();
                        var finalOutTime = new Date(Date.parse(Outdate)).toUTCString();

                        if (checkIn >= ntDetail.startTime && checkOut <= ntDetail.finishTime) {
                            var ms = Moment(finishOut, "DD/MM/YYYY HH:mm:ss").diff(Moment(startIn, "DD/MM/YYYY HH:mm:ss"));
                            var totalhours = Moment.utc(ms);
                            ot2 = Moment(ot2).add(totalhours, 'hours');
                        } else {
                            var InOutTime = [];
                            var checkIn1 = checkIn;
                            var startIn1 = startIn;
                            while (checkIn1 <= checkOut) {
                                InOutTime.push(checkIn1);
                                startIn1 = Moment(startIn1).add(1, 'hours');
                                checkIn1 = Moment.utc(startIn1).format('HH:mm')
                            }

                            function isInArray(value, array) {
                                return array.indexOf(value) > -1;
                            }
                            // console.log(InOutTime);
                            var inTime = Moment.utc(INnewDate).format('HH:mm');
                            var outTime = Moment.utc(OutnewDate).format('HH:mm');
                            var inTimes = isInArray(inTime, InOutTime);
                            var outTimes = isInArray(outTime, InOutTime);
                            if (outTimes && inTimes) {
                                console.log("if(outTimes && inTimes) {");
                                var ms = Moment(finalOutTime, "DD/MM/YYYY HH:mm").diff(Moment(finalInTime, "DD/MM/YYYY HH:mm"));
                                var totalhours = Moment.utc(ms);
                                ot2 = Moment(ot2).add(totalhours, 'hours');
                            } else if (inTimes && checkOut > ntDetail.startTime) {
                                var localyTime = new Date(Date.parse(finishOut)).toUTCString();
                                var ms = Moment(localyTime, "DD/MM/YYYY HH:mm").diff(Moment(finalInTime, "DD/MM/YYYY HH:mm"));
                                var totalhours = Moment.utc(ms);
                                ot2 = Moment(ot2).add(totalhours, 'hours');
                            } else if (outTimes) {
                                console.log("} else if(outTimes) {");
                                var localyTime = new Date(Date.parse(startIn)).toUTCString();
                                var ms = Moment(finalOutTime, "DD/MM/YYYY HH:mm").diff(Moment(localyTime, "DD/MM/YYYY HH:mm"));
                                var totalhours = Moment.utc(ms);
                                ot2 = Moment(ot2).add(totalhours, 'hours');
                            }
                        }
                    });
                    inoutArray = [];
                    if (cnt == data.checkin.length) {
                        normTime = Moment(normTime).format("HH:mm:ss");
                        ot1 = Moment(ot1).format("HH:mm:ss");
                        ot2 = Moment(ot2).format("HH:mm:ss");
                        console.log("normTime......." + normTime);
                        console.log("ot1......." + ot1);
                        console.log("ot2......." + ot2);
                        callback({
                            normalTime: normTime,
                            OT1: ot1,
                            OT2: ot2
                        });
                    }
                }
            });
        })
    });
}

function totalhours(id, companyId, callback) { //calculate find total of totaladjusted according to global rules
    console.log("totalhours...................");
    Company.findOne({
        '_id': companyId
    }, function(err, dataCompany) {
        if (dataCompany.isrounding) {
            if (dataCompany.rounding == 'in/out') {
                var inRounding = dataCompany.inRounding;
                var inroundupafter = dataCompany.inroundupafter;
                var outRounding = dataCompany.outRounding;
                var outroundupafter = dataCompany.outroundupafter;
            } else {
                var closestMin = dataCompany.closestMin;
                var roundUpAfter = dataCompany.roundUpAfter;
            }
        }
        var result = [];
        var Data = [];
        if (dataCompany.isrounding) {
            if (dataCompany.rounding == 'in/out') {
                Attendance.find({
                    '_id': id,
                    'companyId': companyId
                }).limit(1).exec(function(err, data) {
                    if (data) {
                        data.forEach(function(employeeAttendance) {
                            var totalAjustedhours = '';
                            var totalhours = '00:00:00';
                            var totalAdjustedhours = '00:00:00';
                            var i = 0;
                            //console.log(employeeAttendance.totalValues +'---------------------');
                            employeeAttendance.totalValues.forEach(function(totalData) {
                                i++;
                                var total = totalData.total;
                                var totalAdjusted = totalData.totalAdjusted;

                                var totalValue = getSeconds(totalhours) + getSeconds(total);
                                totalhours = secToFormatted(totalValue);
                                var totalAdjustedValue = getSeconds(totalAdjustedhours) + getSeconds(totalAdjusted);
                                totalAdjustedhours = secToFormatted(totalAdjustedValue);
                                if (employeeAttendance.totalValues.length == i) {
                                    result.push(totalhours);
                                    result.push(totalAdjustedhours);
                                    callback(result)
                                }
                            })
                        });
                    }
                })
            } else {
                console.log('global %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
                Attendance.find({
                    '_id': id,
                    'companyId': companyId
                }).limit(1).exec(function(err, data) {
                    if (data) {
                        data.forEach(function(employeeAttendance) {
                            var totalAjustedhours = '';
                            var totalhours = '00:00:00';
                            var totalAdjustedhours = '00:00:00';
                            var i = 0;
                            employeeAttendance.totalValues.forEach(function(totalData) {
                                i++;
                                var total = totalData.total;
                                var totalAdjusted = totalData.totalAdjusted;

                                var totalValue = getSeconds(totalhours) + getSeconds(total);
                                totalhours = secToFormatted(totalValue);
                                var totalAdjustedValue = getSeconds(totalAdjustedhours) + getSeconds(totalAdjusted);
                                totalAdjustedhours = secToFormatted(totalAdjustedValue);
                                if (employeeAttendance.totalValues.length == i) {
                                    var bits = totalAdjustedhours.split(':');
                                    var hours1 = bits[0];
                                    var minute1 = bits[1];
                                    var interval = parseInt(closestMin);
                                    var minuteAfter = parseInt(roundUpAfter);
                                    var strtInt = 0;
                                    var finalValue = 0;
                                    var theArray = [0];
                                    var remaign = 0;
                                    var seconds = 0;
                                    while (strtInt < 60) {
                                        strtInt = strtInt + interval;
                                        remaign = minute1 % interval;
                                        theArray.push(strtInt);
                                    }
                                    var closestNumber = closest(parseInt(minute1), theArray, minuteAfter);
                                    /*for(i=0; i< theArray.length; i++){
                                        if(theArray[i] == closestNumber){
                                            if(remaign>minuteAfter){
                                                     finalValue = closestNumber ;
                                                     break;
                                                }else{
                                                        finalValue = theArray[i];
                                                    }
                                        }
                                    }*/
                                    finalValue = closestNumber;
                                    //console.log(finalValue+ 'finalValue');

                                    var totalAdjustedTime = toSeconds(hours1 + ':' + finalValue + ':00');
                                    //console.log(totalAdjustedTime);
                                    var hoursAdjusted = Math.floor(totalAdjustedTime / 3600);
                                    totalAdjustedTime %= 3600;
                                    var minutesAdjusted = Math.floor(totalAdjustedTime / 60);
                                    var secondsAdjusted = totalAdjustedTime % 60;
                                    //console.log(hours1+':'+minutes1+':00');

                                    result.push(totalhours);
                                    var total = hoursAdjusted + ':' + minutesAdjusted + ':00';
                                    //console.log(total +'total');
                                    result.push(total);
                                    callback(result);
                                }
                            })
                        });
                    }
                });
            }
        } else {
            console.log('totalH--------------');
            Attendance.find({
                '_id': id,
                'companyId': companyId
            }).limit(1).exec(function(err, data) {
                if (data) {
                    data.forEach(function(employeeAttendance) {
                        var totalAjustedhours = '';
                        var totalhours = '00:00:00';
                        var totalAdjustedhours = '00:00:00';
                        var i = 0;
                        employeeAttendance.totalValues.forEach(function(totalData) {
                            i++;
                            var total = totalData.total;
                            var totalAdjusted = totalData.totalAdjusted;
                            //console.log(total +'total');
                            //console.log(totalAdjusted + 'totalAdjusted');
                            var totalValue = getSeconds(totalhours) + getSeconds(total);
                            totalhours = secToFormatted(totalValue);
                            var totalAdjustedValue = getSeconds(totalAdjustedhours) + getSeconds(totalAdjusted);
                            totalAdjustedhours = secToFormatted(totalAdjustedValue);
                            if (employeeAttendance.totalValues.length == i) {
                                //console.log(totalhours +'-----totalhours');
                                //console.log(totalAdjustedhours + 'totalAdjustedhours');
                                result.push(totalhours);
                                result.push(totalAdjustedhours);
                                callback(result)
                            }
                        })
                    });
                }
            })
        }
    })
}

function totalhoursFn(id, companyId, callback) { //calculate find total of totaladjusted according to global rules
    console.log("totalhours...................");
    Company.findOne({
        '_id': companyId
    }, function(err, dataCompany) {
        if (dataCompany.isrounding) {
            if (dataCompany.rounding == 'in/out') {
                var inRounding = dataCompany.inRounding;
                var inroundupafter = dataCompany.inroundupafter;
                var outRounding = dataCompany.outRounding;
                var outroundupafter = dataCompany.outroundupafter;
            } else {
                var closestMin = dataCompany.closestMin;
                var roundUpAfter = dataCompany.roundUpAfter;
            }
        }
        var result = [];
        var Data = [];
        if (dataCompany.isrounding) {
            if (dataCompany.rounding == 'in/out') {
                Attendance.find({
                    '_id': id,
                    'companyId': companyId
                }).limit(1).exec(function(err, data) {
                    if (data) {
                        data.forEach(function(employeeAttendance) {
                            var totalAjustedhours = '';
                            var totalhours = '00:00:00';
                            var totalAdjustedhours = '00:00:00';
                            var i = 0;
                            //console.log(employeeAttendance.totalValues +'---------------------');
                            employeeAttendance.totalValues.forEach(function(totalData) {
                                i++;
                                var total = totalData.total;
                                var totalAdjusted = totalData.totalAdjusted;

                                var totalValue = getSeconds(totalhours) + getSeconds(total);
                                totalhours = secToFormatted(totalValue);
                                var totalAdjustedValue = getSeconds(totalAdjustedhours) + getSeconds(totalAdjusted);
                                totalAdjustedhours = secToFormatted(totalAdjustedValue);
                                if (employeeAttendance.totalValues.length == i) {
                                    result.push(totalhours);
                                    result.push(totalAdjustedhours);
                                    callback(result)
                                }
                            })
                        });
                    }
                })
            } else {
                console.log('global %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
                Attendance.find({
                    '_id': id,
                    'companyId': companyId
                }).limit(1).exec(function(err, data) {
                    if (data) {
                        data.forEach(function(employeeAttendance) {
                            var totalAjustedhours = '';
                            var totalhours = '00:00:00';
                            var totalAdjustedhours = '00:00:00';
                            var i = 0;
                            employeeAttendance.totalValues.forEach(function(totalData) {
                                i++;
                                var total = totalData.total;
                                var totalAdjusted = totalData.totalAdjusted;

                                var totalValue = getSeconds(totalhours) + getSeconds(total);
                                totalhours = secToFormatted(totalValue);
                                var totalAdjustedValue = getSeconds(totalAdjustedhours) + getSeconds(totalAdjusted);
                                totalAdjustedhours = secToFormatted(totalAdjustedValue);
                                if (employeeAttendance.totalValues.length == i) {
                                    var bits = totalAdjustedhours.split(':');
                                    var hours1 = bits[0];
                                    var minute1 = bits[1];
                                    var interval = parseInt(closestMin);
                                    var minuteAfter = parseInt(roundUpAfter);
                                    var strtInt = 0;
                                    var finalValue = 0;
                                    var theArray = [0];
                                    var remaign = 0;
                                    var seconds = 0;
                                    while (strtInt < 60) {
                                        strtInt = strtInt + interval;
                                        remaign = minute1 % interval;
                                        theArray.push(strtInt);
                                    }
                                    var closestNumber = closest(parseInt(minute1), theArray, minuteAfter);
                                    /*for(i=0; i< theArray.length; i++){
                                        if(theArray[i] == closestNumber){
                                            if(remaign>minuteAfter){
                                                     finalValue = closestNumber ;
                                                     break;
                                                }else{
                                                        finalValue = theArray[i];
                                                    }
                                        }
                                    }*/
                                    finalValue = closestNumber;
                                    //console.log(finalValue+ 'finalValue');

                                    var totalAdjustedTime = toSeconds(hours1 + ':' + finalValue + ':00');
                                    //console.log(totalAdjustedTime);
                                    var hoursAdjusted = Math.floor(totalAdjustedTime / 3600);
                                    totalAdjustedTime %= 3600;
                                    var minutesAdjusted = Math.floor(totalAdjustedTime / 60);
                                    var secondsAdjusted = totalAdjustedTime % 60;
                                    //console.log(hours1+':'+minutes1+':00');

                                    result.push(totalhours);
                                    var total = hoursAdjusted + ':' + minutesAdjusted + ':00';
                                    //console.log(total +'total');
                                    result.push(total);
                                    callback(result);
                                }
                            })
                        });
                    }
                });
            }
        } else {
            console.log('totalH--------------');
            Attendance.find({
                '_id': id,
                'companyId': companyId
            }).limit(1).exec(function(err, data) {
                if (data) {
                    data.forEach(function(employeeAttendance) {
                        var totalAjustedhours = '';
                        var totalhours = '00:00:00';
                        var totalAdjustedhours = '00:00:00';
                        var i = 0;
                        employeeAttendance.totalValues.forEach(function(totalData) {
                            i++;
                            var total = totalData.total;
                            var totalAdjusted = totalData.totalAdjusted;
                            //console.log(total +'total');
                            //console.log(totalAdjusted + 'totalAdjusted');
                            var totalValue = getSeconds(totalhours) + getSeconds(total);
                            totalhours = secToFormatted(totalValue);
                            var totalAdjustedValue = getSeconds(totalAdjustedhours) + getSeconds(totalAdjusted);
                            totalAdjustedhours = secToFormatted(totalAdjustedValue);
                            if (employeeAttendance.totalValues.length == i) {
                                //console.log(totalhours +'-----totalhours');
                                //console.log(totalAdjustedhours + 'totalAdjustedhours');
                                result.push(totalhours);
                                result.push(totalAdjustedhours);
                                callback(result)
                            }
                        })
                    });
                }
            })
        }
    })
}

function totalhoursForTest(id, companyId, callback) { //calculate find total of totaladjusted according to global rules

    Company.findOne({
        '_id': companyId
    }, function(err, dataCompany) {
        if (dataCompany.isrounding) {
            if (dataCompany.rounding == 'in/out') {
                var inRounding = dataCompany.inRounding;
                var inroundupafter = dataCompany.inroundupafter;
                var outRounding = dataCompany.outRounding;
                var outroundupafter = dataCompany.outroundupafter;
            } else {
                var closestMin = dataCompany.closestMin;
                var roundUpAfter = dataCompany.roundUpAfter;
            }
        }
        var companyName = dataCompany.companyname;
        var result = [];
        var Data = [];
        if (dataCompany.isrounding) {
            if (dataCompany.rounding == 'in/out') {

                Attendance.find({
                    '_id': id,
                    'companyId': companyId
                }).limit(1).exec(function(err, data) {
                    if (data) {
                        data.forEach(function(employeeAttendance) {
                            var totalAjustedhours = '';
                            var totalhours = '00:00:00';
                            var totalAdjustedhours = '00:00:00';
                            var i = 0;
                            //console.log(employeeAttendance.totalValues +'---------------------');
                            employeeAttendance.totalValues.forEach(function(totalData) {
                                i++;
                                var total = totalData.total;
                                var totalAdjusted = totalData.totalAdjusted;

                                var totalValue = getSeconds(totalhours) + getSeconds(total);
                                totalhours = secToFormatted(totalValue);

                                var totalAdjustedValue = getSeconds(totalAdjustedhours) + getSeconds(totalAdjusted);
                                totalAdjustedhours = secToFormatted(totalAdjustedValue);
                                if (employeeAttendance.totalValues.length == i) {

                                    result.push(totalhours);
                                    result.push(totalAdjustedhours);
                                    result.push(companyName);

                                    callback(result)
                                }
                            })
                        });
                    }
                })
            } else {

                console.log('global %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%');
                Attendance.find({
                    '_id': id,
                    'companyId': companyId
                }).limit(1).exec(function(err, data) {
                    if (data) {
                        data.forEach(function(employeeAttendance) {
                            var totalAjustedhours = '';
                            var totalhours = '00:00:00';
                            var totalAdjustedhours = '00:00:00';
                            var i = 0;
                            employeeAttendance.totalValues.forEach(function(totalData) {
                                i++;
                                var total = totalData.total;
                                var totalAdjusted = totalData.totalAdjusted;

                                var totalValue = getSeconds(totalhours) + getSeconds(total);
                                totalhours = secToFormatted(totalValue);

                                var totalAdjustedValue = getSeconds(totalAdjustedhours) + getSeconds(totalAdjusted);
                                totalAdjustedhours = secToFormatted(totalAdjustedValue);
                                if (employeeAttendance.totalValues.length == i) {
                                    var bits = totalAdjustedhours.split(':');
                                    var hours1 = bits[0];
                                    var minute1 = bits[1];
                                    var interval = parseInt(closestMin);
                                    var minuteAfter = parseInt(roundUpAfter);
                                    var strtInt = 0;
                                    var finalValue = 0;
                                    var theArray = [0];
                                    var remaign = 0;
                                    var seconds = 0;
                                    while (strtInt < 60) {
                                        strtInt = strtInt + interval;
                                        remaign = minute1 % interval;
                                        theArray.push(strtInt);
                                    }
                                    var closestNumber = closest(parseInt(minute1), theArray, minuteAfter);
                                    /*for(i=0; i< theArray.length; i++){
                                        if(theArray[i] == closestNumber){
                                            if(remaign>minuteAfter){
                                                     finalValue = closestNumber ;
                                                     break;
                                                }else{
                                                        finalValue = theArray[i];
                                                    }
                                        }
                                    }*/
                                    finalValue = closestNumber;
                                    //console.log(finalValue+ 'finalValue');
                                    var totalAdjustedTime = toSeconds(hours1 + ':' + finalValue + ':00');
                                    //console.log(totalAdjustedTime);
                                    var hoursAdjusted = Math.floor(totalAdjustedTime / 3600);
                                    totalAdjustedTime %= 3600;
                                    var minutesAdjusted = Math.floor(totalAdjustedTime / 60);
                                    var secondsAdjusted = totalAdjustedTime % 60;
                                    //console.log(hours1+':'+minutes1+':00');

                                    result.push(totalhours);
                                    var total = hoursAdjusted + ':' + minutesAdjusted + ':00';
                                    //console.log(total +'total');
                                    result.push(total);
                                    result.push(companyName);
                                    callback(result);
                                }
                                //console.log(totalAdjustedhours +'totalAdjustedhourstotalAdjustedhourstotalAdjustedhours');
                            })
                        });
                    }
                });
            }
        } else {
            Attendance.find({
                '_id': id,
                'companyId': companyId
            }).limit(1).exec(function(err, data) {
                if (data) {
                    data.forEach(function(employeeAttendance) {
                        var totalAjustedhours = '';
                        var totalhours = '00:00:00';
                        var totalAdjustedhours = '00:00:00';
                        var i = 0;
                        employeeAttendance.totalValues.forEach(function(totalData) {
                            i++;
                            var total = totalData.total;
                            var totalAdjusted = totalData.totalAdjusted;
                            //console.log(total +'total');
                            //console.log(totalAdjusted + 'totalAdjusted');
                            var totalValue = getSeconds(totalhours) + getSeconds(total);
                            totalhours = secToFormatted(totalValue);

                            var totalAdjustedValue = getSeconds(totalAdjustedhours) + getSeconds(totalAdjusted);
                            totalAdjustedhours = secToFormatted(totalAdjustedValue);
                            if (employeeAttendance.totalValues.length == i) {
                                //console.log(totalhours +'-----totalhours');
                                //console.log(totalAdjustedhours + 'totalAdjustedhours');
                                result.push(totalhours);
                                result.push(totalAdjustedhours);
                                result.push(companyName);
                                callback(result)
                            }
                        })
                    });
                }
            })
        }
    })
}

function shiftHoursForHolidays(shift, companyId, callback) { // give shift total Hours of given companyId and shift name
    // console.log("shift hour for HolidaysData.........");
    // console.log(shift);
    // console.log(companyId);
    Shift.find({
        'name': shift,
        'companyId': companyId
    }).limit(1).exec(function(err, datas) {
        // console.log(data);
        if (datas.length > 0) {
            var data = datas[0];
            var shiftStartTime = new Date(Date.parse(data.startTime)).toUTCString();
            var shiftFinishTime = new Date(Date.parse(data.finishTime)).toUTCString();
            var breakIn = data.breakIn;
            var breakTime = data.breakTime;

            var inn = Moment(shiftStartTime).format('DD/MM/YYYY HH:mm');
            var out = Moment(shiftFinishTime).format('DD/MM/YYYY HH:mm');

            var ms = Moment(out, "DD/MM/YYYY HH:mm:ss").diff(Moment(inn, "DD/MM/YYYY HH:mm:ss"));
            var d = Moment.duration(ms);
            var totalhours = Math.floor(d.asHours()) + Moment.utc(ms).format(":mm:ss");

            var finalHours = '';

            if (!breakTime) {
                breakTime = '00:00:00';
            }
            if (breakIn == true) {
                finalHours = toSeconds(totalhours) + toSeconds(breakTime);
            } else {
                finalHours = toSeconds(totalhours) - toSeconds(breakTime);
            }
            if (finalHours) {
                hours = Math.floor(finalHours / 3600);
                finalHours %= 3600;
                minutes = Math.floor(finalHours / 60);
                seconds = finalHours % 60;
                format = hours + ':' + minutes + ':' + seconds;
                console.log("format..............." + format);
                callback(format);
            }
        }
    });
}

function shiftHoursForException(shift, companyId, callback) {
    console.log('shift.......' + shift);
    Shift.findOne({
        'name': shift,
        'companyId': companyId
    }, function(err, shiftsdata) {
        if (shiftsdata) {
            var shiftStartTime = new Date(Date.parse(shiftsdata.startTime)).toUTCString();
            var shiftFinishTime = new Date(Date.parse(shiftsdata.finishTime)).toUTCString();
            var breakIn = shiftsdata.breakIn;
            var breakTime = shiftsdata.breakTime;

            var inn = Moment(shiftStartTime).format('DD/MM/YYYY HH:mm');
            var out = Moment(shiftFinishTime).format('DD/MM/YYYY HH:mm');
            console.log(inn + 'shiftstart ===========================');
            console.log(out + 'shiftfinish ============================');
            var ms = Moment(out, "DD/MM/YYYY HH:mm:ss").diff(Moment(inn, "DD/MM/YYYY HH:mm:ss"));
            var d = Moment.duration(ms);
            var totalhours = Math.floor(d.asHours()) + Moment.utc(ms).format(":mm:ss");
            console.log(totalhours + 'totalhours');
            var finalHours = '';
            console.log(breakTime + 'breakTime');
            if (!breakTime) {
                breakTime = '00:00:00';
            }
            if (breakIn == true) {
                finalHours = toSeconds(totalhours) + toSeconds(breakTime);
                console.log("if" + finalHours);
            } else {
                finalHours = toSeconds(totalhours) - toSeconds(breakTime);
                console.log(finalHours);
            }
            if (finalHours || finalHours === 0) {
                console.log('ddddddddddddddd');
                hours = Math.floor(finalHours / 3600);
                console.log("1")
                finalHours %= 3600;
                minutes = Math.floor(finalHours / 60);
                seconds = finalHours % 60;
                format = hours + ':' + minutes + ':' + seconds;
                console.log(format + 'asdddddddddddddddddddddd');
                callback(format);
            }
        }
    });
    /*var shiftStartTime = new Date(Date.parse(shiftStart)).toUTCString();
    var shiftFinishTime = new Date(Date.parse(shiftFinish)).toUTCString();
    var breakIn = breakIn;
    var breakTime = breakTime;*/
}

function getShiftData(shiftType, shift, companyId, callback) { // give shift data of given companyId and shift name
    // console.log("shift....."+shift);
    // console.log("shiftType...."+shiftType);
    if (shiftType == "customShift") {
        // console.log("if customShifts.....");
        customShifts.find({
            '_id': shift,
            'companyId': companyId
        }).limit(1).exec(function(err, dataRec) {
            console.log(dataRec);
            if (dataRec.length > 0) {
                dataRec.forEach(function(data) {
                    callback(data);
                })
            } else {
                callback(false);
            }
        });
    } else {
        // console.log("not customShifts.....");
        console.log('shift.....' + shift);
        Shift.find({
            'name': shift,
            'companyId': companyId
        }).limit(1).exec(function(err, dataRec) {
            console.log(dataRec.length);
            if (dataRec.length > 0) {
                dataRec.forEach(function(data) {
                    // console.log("here--------------->");
                    callback(data);
                })
            } else {
                callback(false);
            }
        });
    }
}

function getShiftPatternData(shiftPattern, companyId, callback) { // give shift pattern data of given companyId and shift pattern name
    Rule.find({
        'name': shiftPattern,
        'companyId': companyId
    }).limit(1).exec(function(err, dataRec) {
        if (dataRec.length > 0) {
            dataRec.forEach(function(data) {
                callback(data);
            })
        } else {
            callback(false);
        }
    });
}

function getCompanyData(companyId, callback) { // give shift pattern data of given companyId and shift pattern name
    Company.find({
        '_id': companyId
    }).limit(1).exec(function(err, dataRec) {
        // console.log(err);
        if (dataRec.length > 0) {
            dataRec.forEach(function(data) {
                callback(data);
            });
        } else {
            callback(false);
        }
    });
}

function isInArray(value, array) { // check if the value is present in array
    return array.indexOf(value) > -1;
}

function orderByNameAscending(a, b) { // order by ascending as per checktime
    if (a.checkTime == b.checkTime) {
        return 0;
    } else if (a.checkTime > b.checkTime) {
        return 1;
    }
    return -1;
}

function getSeconds(t) { // return seconds of HH:MM:SS;
    var bits = t.split(':');
    return bits[0] * 3600 + bits[1] * 60 + bits[2] * 1;
}

function secToFormatted(seconds) { // convert seconds to HH:MM:SS
    var hours = Math.floor(seconds / 3600);
    seconds %= 3600;
    var minutes = Math.floor(seconds / 60);
    var seconds = seconds % 60;
    return hours + ':' + minutes + ':00';
}

function weekDayNumber(day) { // return weekday number according to day
    dayValue = 0;
    if (day == 'Sunday') {
        dayValue = 0;
    } else if (day == 'Monday') {
        dayValue = 1;
    } else if (day == 'Tuesday') {
        dayValue = 2;
    } else if (day == 'Wednesday') {
        dayValue = 3;
    } else if (day == 'Thursday') {
        dayValue = 4;
    } else if (day == 'Friday') {
        dayValue = 5;
    } else if (day == 'Saturday') {
        dayValue = 6;
    } else {
        dayValue = 0;
    }
    return dayValue;
}

function weekDayString(day) { // return day according to weekDay
    dayValue = 0;
    if (day == 0) {
        dayValue = 'Sunday';
    } else if (day == 1) {
        dayValue = 'Monday';
    } else if (day == 2) {
        dayValue = 'Tuesday';
    } else if (day == 3) {
        dayValue = 'Wednesday';
    } else if (day == 4) {
        dayValue = 'Thursday';
    } else if (day == 5) {
        dayValue = 'Friday';
    } else if (day == 6) {
        dayValue = 'Saturday';
    } else {
        dayValue = 0;
    }
    return dayValue;
}

function countWeekdayOccurrencesInMonth(date) {
    var m = Moment(date),
        weekDay = m.day(),
        yearDay = m.dayOfYear(),
        count = 0;

    m.startOf('month');
    while (m.dayOfYear() <= yearDay) {
        if (m.day() == weekDay) {
            count++;
        }
        m.add('days', 1);
    }

    return count;
}

function calculateArea(callback) {

    console.log('99999999999999999999999999');
    Company.find({}, function(err, CompanyData) {
        var n = 0;
        CompanyData.forEach(function(dataCompany) {

            if (dataCompany) {
                n++;
                var inRounding = dataCompany.inRounding;
                var inroundupafter = dataCompany.inroundupafter;
                var outRounding = dataCompany.outRounding;
                var outroundupafter = dataCompany.outroundupafter;
                var companyId = dataCompany._id;

                Employee.find({
                    'companyId': companyId,
                    active: true
                }, function(err, employeeData) {
                    if (employeeData) {
                        employeeData.forEach(function(dataEmp) {
                            var employeeNo = dataEmp.employeeNo;

                            Attendance.find({
                                'employeeNo': employeeNo,
                                'companyId': companyId
                            }).sort({
                                'date': 'asc'
                            }).exec(function(err, data) {
                                if (data) {
                                    var arrayFinish = [];
                                    var calls = [];

                                    data.forEach(function(employeeAttendance) {
                                        var date = employeeAttendance.date;
                                        var employeeNumber = employeeAttendance.employeeNo;
                                        console.log(date + '---------------' + employeeNumber + '**********' + companyId);
                                        var limitIn = employeeAttendance.limitIn;
                                        var limitOut = employeeAttendance.limitOut;
                                        var id = employeeAttendance._id
                                        var shiftStart = new Date(Date.parse(employeeAttendance.shiftStart)).toUTCString();
                                        var startHour = Moment.utc(shiftStart).format('HH');
                                        var startMinute = Moment.utc(shiftStart).format('mm');

                                        var shiftFinish = new Date(Date.parse(employeeAttendance.shiftFinish)).toUTCString();
                                        var finishHour = Moment.utc(shiftFinish).format('H');
                                        var finishMinute = Moment.utc(shiftFinish).format('mm');
                                        var attendanceDate = Moment.utc(employeeAttendance.date).format('YYYY-MM-DD');

                                        var nextDate = Moment.utc(attendanceDate).add('days', 1).format('YYYY-MM-DD');
                                        var previousDate = Moment.utc(attendanceDate).subtract('days', 1).format('YYYY-MM-DD');
                                        //onsole.log(previousDate + 'previousDate');
                                        var unix = Moment.utc(attendanceDate).unix();
                                        //console.log(unix +'unix');
                                        var shiftStartDate = Moment.utc(shiftStart).format('YYYY-MM-DD');
                                        var shiftFinishDate = Moment.utc(shiftFinish).format('YYYY-MM-DD');
                                        var FinishSec = '';
                                        var totalShiftSec = '';
                                        Attendance.findOne({
                                            $where: 'this.date.toJSON().slice(0, 10) == "' + nextDate + '"',
                                            'companyId': companyId,
                                            'employeeNo': employeeNumber
                                        }, function(err, atnData) {
                                            if (atnData) {
                                                //var newaddate = atnData.date;
                                                var newaddate = Moment.utc(atnData.date).format('YYYY-MM-DD');
                                                var newunix = Moment.utc(newaddate).unix();
                                                var nextStartTime = atnData.shiftStart;
                                                var nextFinishTime = atnData.shiftFinish;
                                                var Hour = Moment.utc(nextStartTime).format('H');
                                                var Minute = Moment.utc(nextStartTime).format('mm');
                                                var nextStartSec = toSeconds(Hour + ':' + Minute + ':00');
                                                var c2 = '';
                                                var c1 = (newunix + (parseInt(Hour) * 3600));
                                                var balance = '';
                                                if (shiftStartDate == shiftFinishDate) {
                                                    totalShiftSec = (unix + (parseInt(finishHour) * 3600));
                                                    c2 = totalShiftSec;
                                                    balance = (c1 - c2);
                                                    //console.log(balance + totalShiftSec + date+ '--------------------------------------->>>>>>>>>>>>>>>>>>>>');
                                                } else {
                                                    totalShiftSec = unix + (parseInt(finishHour) + (24 * 3600));
                                                    c2 = totalShiftSec;
                                                    //balanceVal = unix + (parseInt(finishHour)+(24*3600));
                                                    balance = c1 - c2;
                                                }
                                                var val = (balance / 2);
                                                var areaFinish = c2 + val;
                                                //console.log(areaFinish + 'areaFinishareaFinish');
                                                Attendance.update({
                                                    '_id': id,
                                                    'employeeNo': employeeNumber,
                                                    'companyId': companyId
                                                }, {
                                                    $set: {
                                                        areaFinish: areaFinish
                                                    }
                                                }, {
                                                    upsert: false,
                                                    new: false
                                                }, function(err, data) {
                                                    if (err) {
                                                        console.log(err);
                                                    } else {
                                                        console.log(data);
                                                    }
                                                })
                                            }
                                        });
                                    });
                                }
                            });
                        });
                    }
                });
                if (CompanyData.length == n) {
                    callback(2);
                }
            } // if datacompany
        });
    });
}
// function insertArea(id, employeeNumber, companyId, areaStart, areaFinish,callback){
// }
function findPreviousArea(previousDate, companyId, employeeNumber, callback) {
    //console.log(previousDate);
    var areaStart = '';
    Attendance.findOne({
        $where: 'this.date.toJSON().slice(0, 10) == "' + previousDate + '"',
        'companyId': companyId,
        'employeeNo': employeeNumber
    }, function(err, areaData) {
        if (areaData) {
            //console.log(areaData);
            var area = areaData.areaFinish;
            //console.log(area + 'areaareaareaarea');
            areaStart = parseInt(area) + 1;
        } else {
            areaStart = 0;
        }
        callback(2, areaStart);
    });
}

function calculateCheckin(adminDetil, callback) {
    /* This function will check check the calFlag and rearrange the checkins of attendance*/
    console.log("calculateCheckin...");
    Company.find({}).exec(function(err, CompanyData) {
        // console.log(".....CompanyData........");
        var compCnt = 0;
        async.eachSeries(CompanyData, function(dataCompany, callbackComp) {
            // CompanyData.forEach(function(dataCompany) {
            compCnt++;
            if (dataCompany) {
                var inRounding = dataCompany.inRounding;
                var inroundupafter = dataCompany.inroundupafter;
                var outRounding = dataCompany.outRounding;
                var outroundupafter = dataCompany.outroundupafter;
                var companyId = dataCompany._id;
                var currentDate = Moment.utc().add('days', 30).format('YYYY-MM-DD');
                var previousDate = Moment.utc().subtract('days', 30).format('YYYY-MM-DD');

                Attendance.find({
                    'companyId': companyId,
                    "date": {
                        $gte: previousDate,
                        $lte: currentDate
                    },
                    'calFlag': false,
                    'checkin.checkType': {
                        $exists: true
                    }
                }).exec(function(err, data) {
                    // console.log("data..."+data.length)
                    if (data.length > 0) {
                        console.log("atn found " + data.length);
                        var atnCnt = 0;
                        async.eachSeries(data, function(employeeAttendance, callbackAtn) {
                            // data.forEach(function(employeeAttendance) {
                            atnCnt++;
                            var employeeNo = employeeAttendance.employeeNo;
                            var shiftStart = new Date(Date.parse(employeeAttendance.shiftStart)).toUTCString();
                            var startHour = Moment.utc(shiftStart).format('HH');
                            var startMinute = Moment.utc(shiftStart).format('mm');

                            var shiftFinish = new Date(Date.parse(employeeAttendance.shiftFinish)).toUTCString();
                            var finishHour = Moment.utc(shiftFinish).format('HH');
                            var finishMinute = Moment.utc(shiftFinish).format('mm');
                            var attendanceDate = Moment.utc(employeeAttendance.date).format();

                            var shiftStartDate = Moment.utc(shiftStart).format('YYYY-MM-DD');
                            var shiftFinishDate = Moment.utc(shiftFinish).format('YYYY-MM-DD');
                            // var areaStart = employeeAttendance.areaStart;
                            // var areaFinish = employeeAttendance.areaFinish;
                            var areaStart = employeeAttendance.areaStart;
                            var areaFinish = employeeAttendance.areaFinish;
                            var id = employeeAttendance._id;

                            if (employeeAttendance.checkin) {
                                console.log("got checkIn");
                                var date = Moment.utc(attendanceDate).format('YYYY-MM-DD');
                                var attendanceId = employeeAttendance._id;
                                Attendance.update({
                                    '_id': attendanceId,
                                    'companyId': companyId,
                                    'employeeNo': employeeNo
                                }, {
                                    $set: {
                                        totalValues: [],
                                        allowances: [],
                                        calFlag: true,
                                        readFlag: false,
                                    }
                                }, {
                                    upsert: false,
                                    new: false
                                }, function(err, data) {
                                    if (err) {
                                        console.log("Attendance update" + err);
                                    }
                                });
                                console.log("1");
                                employeeAttendance.checkin.sort(orderByNameAscending);
                                var checkinCnt = 0;

                                async.eachSeries(employeeAttendance.checkin, function(checkin, callbackCheckin) {
                                    // employeeAttendance.checkin.forEach(function(checkin) {
                                    checkinCnt++;
                                    var checkTime = new Date(Date.parse(checkin.checkTime)).toUTCString();
                                    var checkType = checkin.checkType;
                                    var workCode = checkin.workCode;
                                    var objectId = checkin._id;
                                    var blankArray = [];
                                    var checkTimeUnix = Moment.utc(checkTime).unix();
                                    if (areaStart && areaFinish) {
                                        console.log("areaStart && areaFinish");
                                        if (checkTimeUnix >= areaStart && checkTimeUnix <= areaFinish) {
                                            console.log('in areatime');
                                        } else {
                                            var previousDate = Moment.utc(attendanceDate).subtract('days', 1).format('YYYY-MM-DD');
                                            var nextDate = Moment.utc(attendanceDate).add('days', 1).format('YYYY-MM-DD');
                                            // Attendance.find({$where: 'this.date.toJSON().slice(0, 10) == "'+previousDate+'"','companyId':companyId, 'employeeNo':employeeNo}).limit(1).exec(function(err, atndDataPrvRec){
                                            Attendance.find({
                                                'date': new Date(previousDate),
                                                'companyId': companyId,
                                                'employeeNo': employeeNo
                                            }).limit(1).exec(function(err, atndDataPrvRec) {
                                                if (atndDataPrvRec.length > 0) {
                                                    atndDataPrvRec.forEach(function(atndDataPrv) {
                                                        var prvAreaStart = atndDataPrv.areaStart;
                                                        var prvAreaFinish = atndDataPrv.areaFinish;
                                                        var date = Moment.utc(attendanceDate).format('YYYY-MM-DD');
                                                        if (checkTimeUnix >= prvAreaStart && checkTimeUnix <= prvAreaFinish) {
                                                            console.log('-------------------------pull from current');
                                                            Attendance.update({
                                                                'date': new Date(date),
                                                                'companyId': companyId,
                                                                'employeeNo': employeeNo
                                                            }, {
                                                                $set: {
                                                                    totalValues: blankArray,
                                                                    allowances: blankArray,
                                                                    calFlag: true,
                                                                    readFlag: false,
                                                                },
                                                                $pull: {
                                                                    checkin: {
                                                                        '_id': objectId
                                                                    }
                                                                }
                                                            }, {
                                                                upsert: false,
                                                                new: false
                                                            }, function(err, data) {
                                                                if (err) {
                                                                    console.log(err);
                                                                } else {
                                                                    console.log("pull success...");
                                                                }
                                                            });
                                                            // Attendance.update({'checkin.checkTime' :{$ne:checkTime}, $where: 'this.date.toJSON().slice(0, 10) == "'+previousDate+'"','companyId':companyId, 'employeeNo':employeeNo},
                                                            Attendance.update({
                                                                'checkin.checkTime': {
                                                                    $ne: checkTime
                                                                },
                                                                'date': new Date(previousDate),
                                                                'companyId': companyId,
                                                                'employeeNo': employeeNo
                                                            }, {
                                                                $set: {
                                                                    totalValues: blankArray,
                                                                    allowances: blankArray,
                                                                    calFlag: true,
                                                                    readFlag: false,
                                                                },
                                                                $push: {
                                                                    checkin: {
                                                                        workCode: workCode,
                                                                        checkTime: checkTime,
                                                                        checkType: checkType
                                                                    }
                                                                }
                                                            }, {
                                                                upsert: false,
                                                                new: false
                                                            }, function(err, data) {
                                                                if (err) {
                                                                    console.log(err);
                                                                } else {
                                                                    console.log("updated flags");
                                                                }
                                                            });
                                                        } else {
                                                            console.log('-------------------------inserted in next');
                                                            Attendance.update({
                                                                'date': new Date(date),
                                                                'companyId': companyId,
                                                                'employeeNo': employeeNo
                                                            }, {
                                                                $set: {
                                                                    totalValues: blankArray,
                                                                    allowances: blankArray,
                                                                    calFlag: true,
                                                                    readFlag: false,
                                                                },
                                                                $pull: {
                                                                    checkin: {
                                                                        '_id': objectId
                                                                    }
                                                                }
                                                            }, {
                                                                upsert: false,
                                                                new: false
                                                            }, function(err, data) {
                                                                if (err) {
                                                                    console.log(err);
                                                                } else {
                                                                    console.log("pull success...");
                                                                }
                                                            });

                                                            Attendance.update({
                                                                'checkin.checkTime': {
                                                                    $ne: checkTime
                                                                },
                                                                'date': new Date(nextDate),
                                                                'companyId': companyId,
                                                                'employeeNo': employeeNo
                                                            }, {
                                                                $set: {
                                                                    totalValues: blankArray,
                                                                    allowances: blankArray,
                                                                    calFlag: true,
                                                                    readFlag: false,
                                                                },
                                                                $push: {
                                                                    checkin: {
                                                                        workCode: workCode,
                                                                        checkTime: checkTime,
                                                                        checkType: checkType
                                                                    }
                                                                }
                                                            }, {
                                                                upsert: false,
                                                                new: false
                                                            }, function(err, data) {
                                                                if (err) {
                                                                    console.log(err);
                                                                } else {
                                                                    console.log("updated flags");
                                                                }
                                                            });
                                                        }
                                                    });
                                                } //if
                                            });
                                        }
                                    }
                                    if (areaStart && areaFinish == '') {
                                        console.log("areaStart && !areaFinish");
                                        if (checkTimeUnix <= areaStart) {
                                            var previousDate = Moment.utc(attendanceDate).subtract('days', 1).format('YYYY-MM-DD');
                                            var date = Moment.utc(attendanceDate).format('YYYY-MM-DD')

                                            Attendance.update({
                                                'date': new Date(date),
                                                'companyId': companyId,
                                                'employeeNo': employeeNo
                                            }, {
                                                $set: {
                                                    totalValues: blankArray,
                                                    allowances: blankArray,
                                                    calFlag: true,
                                                    readFlag: false,
                                                },
                                                $pull: {
                                                    checkin: {
                                                        '_id': objectId
                                                    }
                                                }
                                            }, {
                                                upsert: false,
                                                new: false
                                            }, function(err, data) {
                                                if (err) {
                                                    console.log(err);
                                                } else {
                                                    console.log("pull success...");
                                                }
                                            });

                                            Attendance.update({
                                                'checkin.checkTime': {
                                                    $ne: checkTime
                                                },
                                                'date': new Date(previousDate),
                                                'companyId': companyId,
                                                'employeeNo': employeeNo
                                            }, {
                                                $set: {
                                                    totalValues: blankArray,
                                                    allowances: blankArray,
                                                    calFlag: true,
                                                    readFlag: false,
                                                },
                                                $push: {
                                                    checkin: {
                                                        workCode: workCode,
                                                        checkTime: checkTime,
                                                        checkType: checkType
                                                    }
                                                }
                                            }, {
                                                upsert: false,
                                                new: false
                                            }, function(err, data) {
                                                if (err) {
                                                    console.log(err);
                                                } else {
                                                    console.log("updated flags");
                                                }
                                            });
                                        }
                                    }
                                    Attendance.update({
                                        '_id': id,
                                        'companyId': companyId,
                                        'employeeNo': employeeNo
                                    }, {
                                        $set: {
                                            calFlag: true,
                                            readFlag: false,
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, datas) {
                                        if (!err) {
                                            console.log('final atn flag update');
                                            if (checkinCnt == employeeAttendance.checkin.length) {
                                                console.log("checkinCnt done");
                                                if (data.length == atnCnt) {
                                                    console.log("atnCnt")
                                                    if (CompanyData.length == compCnt) {
                                                        console.log("companyCnt");
                                                        callback(2);
                                                    } else {
                                                        callbackComp();
                                                    }
                                                } else {
                                                    callbackAtn();
                                                }
                                            } else {
                                                callbackCheckin();
                                            }
                                        }
                                    });
                                });

                            } else {
                                console.log("no checkin");
                                if (data.length == atnCnt) {
                                    if (CompanyData.length == compCnt) {
                                        callback(2);
                                    } else {
                                        callbackComp();
                                    }
                                } else {
                                    callbackAtn();
                                }
                            }
                        });
                    } else {
                        console.log("no atn found");
                        if (CompanyData.length == compCnt) {
                            callback(2);
                        } else {
                            callbackComp();
                        }
                    }
                }); /* end attendance*/
            }
        });
    });
}

function calculateCheckinIndividual(adminDetil, companyId, employeeNo, atnDate, callback) {
    /* This function will check check the calFlag and rearrange the checkins of attendance*/
    console.log("calculateCheckinIndividual...");
    Company.find({
        '_id': companyId
    }).exec(function(err, CompanyData) {
        var compCnt = 0;
        async.eachSeries(CompanyData, function(dataCompany, callbackComp) {
            compCnt++;
            if (dataCompany) {
                var inRounding = dataCompany.inRounding;
                var inroundupafter = dataCompany.inroundupafter;
                var outRounding = dataCompany.outRounding;
                var outroundupafter = dataCompany.outroundupafter;
                var companyId = dataCompany._id;
                var currentDate = Moment.utc(atnDate).add('days', 1).format('YYYY-MM-DD');
                var previousDate = Moment.utc(atnDate).subtract('days', 1).format('YYYY-MM-DD');
                console.log("date range is %s to %s", currentDate, previousDate);
                Attendance.find({
                    'companyId': companyId,
                    'employeeNo': employeeNo,
                    "date": {
                        $gte: previousDate,
                        $lte: currentDate
                    },
                    'calFlag': false,
                    'checkin.checkType': {
                        $exists: true
                    }
                }).exec(function(err, data) {
                    if (data.length > 0) {
                        console.log("atn found " + data.length);
                        var atnCnt = 0;
                        async.eachSeries(data, function(employeeAttendance, callbackAtn) {
                            atnCnt++;
                            var employeeNo = employeeAttendance.employeeNo;
                            var shiftStart = new Date(Date.parse(employeeAttendance.shiftStart)).toUTCString();
                            var startHour = Moment.utc(shiftStart).format('HH');
                            var startMinute = Moment.utc(shiftStart).format('mm');

                            var shiftFinish = new Date(Date.parse(employeeAttendance.shiftFinish)).toUTCString();
                            var finishHour = Moment.utc(shiftFinish).format('HH');
                            var finishMinute = Moment.utc(shiftFinish).format('mm');
                            var attendanceDate = Moment.utc(employeeAttendance.date).format();

                            var shiftStartDate = Moment.utc(shiftStart).format('YYYY-MM-DD');
                            var shiftFinishDate = Moment.utc(shiftFinish).format('YYYY-MM-DD');
                            var areaStart = employeeAttendance.areaStart;
                            var areaFinish = employeeAttendance.areaFinish;
                            var id = employeeAttendance._id;

                            if (employeeAttendance.checkin) {
                                console.log("got checkIn");
                                var date = Moment.utc(attendanceDate).format('YYYY-MM-DD');
                                var attendanceId = employeeAttendance._id;
                                Attendance.update({
                                    '_id': attendanceId,
                                    'companyId': companyId,
                                    'employeeNo': employeeNo
                                }, {
                                    $set: {
                                        totalValues: [],
                                        allowances: [],
                                        calFlag: true,
                                        readFlag: false,
                                    }
                                }, {
                                    upsert: false,
                                    new: false
                                }, function(err, data) {
                                    if (err) {
                                        console.log("Attendance update" + err);
                                    }
                                });

                                employeeAttendance.checkin.sort(orderByNameAscending);
                                var checkinCnt = 0;

                                async.eachSeries(employeeAttendance.checkin, function(checkin, callbackCheckin) {

                                    checkinCnt++;
                                    var checkTime = new Date(Date.parse(checkin.checkTime)).toUTCString();
                                    var checkType = checkin.checkType;
                                    var workCode = checkin.workCode;
                                    var objectId = checkin._id;
                                    var blankArray = [];
                                    var checkTimeUnix = Moment.utc(checkTime).unix();

                                    if (areaStart && areaFinish) {
                                        console.log("areaStart && areaFinish");
                                        if (checkTimeUnix >= areaStart && checkTimeUnix <= areaFinish) {
                                            console.log('in areatime');
                                        } else {
                                            var previousDate = Moment.utc(attendanceDate).subtract('days', 1).format('YYYY-MM-DD');
                                            var nextDate = Moment.utc(attendanceDate).add('days', 1).format('YYYY-MM-DD');

                                            Attendance.find({
                                                'date': new Date(previousDate),
                                                'companyId': companyId,
                                                'employeeNo': employeeNo
                                            }).limit(1).exec(function(err, atndDataPrvRec) {
                                                if (atndDataPrvRec.length > 0) {
                                                    atndDataPrvRec.forEach(function(atndDataPrv) {
                                                        var prvAreaStart = atndDataPrv.areaStart;
                                                        var prvAreaFinish = atndDataPrv.areaFinish;
                                                        var date = Moment.utc(attendanceDate).format('YYYY-MM-DD');

                                                        Attendance.update({
                                                            'date': new Date(date),
                                                            'companyId': companyId,
                                                            'employeeNo': employeeNo
                                                        }, {
                                                            $set: {
                                                                totalValues: blankArray,
                                                                allowances: blankArray,
                                                                calFlag: true,
                                                                readFlag: false,
                                                            },
                                                            $pull: {
                                                                checkin: {
                                                                    '_id': objectId
                                                                }
                                                            }
                                                        }, {
                                                            upsert: false,
                                                            new: false
                                                        }, function(err, data) {
                                                            if (err) {
                                                                console.log(err);
                                                            } else {
                                                                console.log("pull checkin done " + data);
                                                            }
                                                        });

                                                        if (checkTimeUnix >= prvAreaStart && checkTimeUnix <= prvAreaFinish) {
                                                            console.log('-------------------------push clockings in previous date');

                                                            Attendance.update({
                                                                'checkin.checkTime': {
                                                                    $ne: checkTime
                                                                },
                                                                'date': new Date(previousDate),
                                                                'companyId': companyId,
                                                                'employeeNo': employeeNo
                                                            }, {
                                                                $set: {
                                                                    totalValues: blankArray,
                                                                    allowances: blankArray,
                                                                    calFlag: true,
                                                                    readFlag: false,
                                                                },
                                                                $push: {
                                                                    checkin: {
                                                                        workCode: workCode,
                                                                        checkTime: checkTime,
                                                                        checkType: checkType
                                                                    }
                                                                }
                                                            }, {
                                                                upsert: false,
                                                                new: false
                                                            }, function(err, data) {
                                                                if (err) {
                                                                    console.log(err);
                                                                } else {
                                                                    console.log("updated flags " + data);
                                                                }
                                                            });
                                                        } else {
                                                            console.log('-------------------------push clockings in next date');

                                                            Attendance.update({
                                                                'checkin.checkTime': {
                                                                    $ne: checkTime
                                                                },
                                                                'date': new Date(nextDate),
                                                                'companyId': companyId,
                                                                'employeeNo': employeeNo
                                                            }, {
                                                                $set: {
                                                                    totalValues: blankArray,
                                                                    allowances: blankArray,
                                                                    calFlag: true,
                                                                    readFlag: false,
                                                                },
                                                                $push: {
                                                                    checkin: {
                                                                        workCode: workCode,
                                                                        checkTime: checkTime,
                                                                        checkType: checkType
                                                                    }
                                                                }
                                                            }, {
                                                                upsert: false,
                                                                new: false
                                                            }, function(err, data) {
                                                                if (err) {
                                                                    console.log(err);
                                                                } else {
                                                                    console.log("updated flags " + data);
                                                                }
                                                            });
                                                        }
                                                    });
                                                } //if
                                            });
                                        }
                                    }

                                    if (areaStart && areaFinish == '') {
                                        console.log("areaStart && !areaFinish");
                                        if (checkTimeUnix <= areaStart) {
                                            var previousDate = Moment.utc(attendanceDate).subtract('days', 1).format('YYYY-MM-DD');
                                            var date = Moment.utc(attendanceDate).format('YYYY-MM-DD')

                                            Attendance.update({
                                                'date': new Date(date),
                                                'companyId': companyId,
                                                'employeeNo': employeeNo
                                            }, {
                                                $set: {
                                                    totalValues: blankArray,
                                                    allowances: blankArray,
                                                    calFlag: true,
                                                    readFlag: false,
                                                },
                                                $pull: {
                                                    checkin: {
                                                        '_id': objectId
                                                    }
                                                }
                                            }, {
                                                upsert: false,
                                                new: false
                                            }, function(err, data) {
                                                if (err) {
                                                    console.log(err);
                                                } else {
                                                    console.log("pull checkin done");
                                                }
                                            });

                                            Attendance.update({
                                                'checkin.checkTime': {
                                                    $ne: checkTime
                                                },
                                                'date': new Date(previousDate),
                                                'companyId': companyId,
                                                'employeeNo': employeeNo
                                            }, {
                                                $set: {
                                                    totalValues: blankArray,
                                                    allowances: blankArray,
                                                    calFlag: true,
                                                    readFlag: false,
                                                },
                                                $push: {
                                                    checkin: {
                                                        workCode: workCode,
                                                        checkTime: checkTime,
                                                        checkType: checkType
                                                    }
                                                }
                                            }, {
                                                upsert: false,
                                                new: false
                                            }, function(err, data) {
                                                if (err) {
                                                    console.log(err);
                                                } else {
                                                    console.log("push in previousDate");
                                                }
                                            });
                                        }
                                    }

                                    Attendance.update({
                                        '_id': id,
                                        'companyId': companyId,
                                        'employeeNo': employeeNo
                                    }, {
                                        $set: {
                                            calFlag: true,
                                            readFlag: false,
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, datas) {
                                        if (!err) {
                                            console.log('final atn flag update');
                                            if (checkinCnt == employeeAttendance.checkin.length) {
                                                console.log("checkinCnt done");
                                                if (data.length == atnCnt) {
                                                    console.log("atnCnt")
                                                    if (CompanyData.length == compCnt) {
                                                        console.log("companyCnt");
                                                        callback(2);
                                                    } else {
                                                        callbackComp();
                                                    }
                                                } else {
                                                    callbackAtn();
                                                }
                                            } else {
                                                callbackCheckin();
                                            }
                                        }
                                    });
                                });

                            } else {
                                console.log("no checkin");
                                if (data.length == atnCnt) {
                                    if (CompanyData.length == compCnt) {
                                        callback(2);
                                    } else {
                                        callbackComp();
                                    }
                                } else {
                                    callbackAtn();
                                }
                            }
                        });
                    } else {
                        console.log("no atn found");
                        // console.log(CompanyData.length,compCnt);
                        if (CompanyData.length == compCnt) {
                            callback(2);
                        } else {
                            callbackComp();
                        }
                    }
                }); /* end attendance*/
            }
        });
    });
}

function getAttendanceData(employeeNo, companyId, start, end, callback) {
    end = Moment.utc(end).add('days', 1).format('YYYY-MM-DD');
    // Attendance.find({'employeeNo':employeeNo, 'companyId':companyId, "date": { $gte: new Date(start), $lt: new Date(end)}},function(err, attendanceData){
    Attendance.find({
        'employeeNo': employeeNo,
        'companyId': companyId,
        "date": {
            $gte: new Date(start),
            $lt: new Date(end)
        }
    }).sort({
        'employeeNo': 'asc'
    }).exec(function(err, attendanceData) {
        if (attendanceData) {
            callback(attendanceData);
        } else {
            console.log(err);
        }
    });
}

function updateFn(currentDate, endDate, companyId, departmentsList, callback) {
    var todayDate = Moment.utc().format('YYYY-MM-DD');
    if (currentDate > endDate) {
        return callback(1);
    } else {
        if (departmentsList.length > 0) {
            // console.log("subadmin......"+departmentsList);
            if (currentDate >= todayDate) {
                Attendance.update({
                    'department': {
                        $in: departmentsList
                    },
                    date: {
                        $exists: true
                    },
                    "date": new Date(currentDate),
                    'companyId': companyId
                }, {
                    $set: {
                        shift: 'not Working',
                    }
                }, {
                    upsert: false,
                    new: false,
                    multi: true
                }, function(err, data) {
                    if (err) {
                        console.log(err);
                    } else {
                        currentDate = Moment.utc(currentDate).add('days', 1).format('YYYY-MM-DD');
                        updateFn(currentDate, endDate, companyId, departmentsList, callback);
                    }
                });
            } else {
                currentDate = Moment.utc(currentDate).add('days', 1).format('YYYY-MM-DD');
                updateFn(currentDate, endDate, companyId, departmentsList, callback);
            }
        } else {
            // console.log(currentDate + 'currentDate');
            if (currentDate >= todayDate) {
                Attendance.update({
                    date: {
                        $exists: true
                    },
                    "date": new Date(currentDate),
                    'companyId': companyId
                }, {
                    $set: {
                        shift: 'not Working',
                    }
                }, {
                    upsert: false,
                    new: false,
                    multi: true
                }, function(err, data) {
                    if (err) {
                        console.log(err);
                    } else {
                        currentDate = Moment.utc(currentDate).add('days', 1).format('YYYY-MM-DD');
                        updateFn(currentDate, endDate, companyId, departmentsList, callback);
                    }
                });
            } else {
                currentDate = Moment.utc(currentDate).add('days', 1).format('YYYY-MM-DD');
                updateFn(currentDate, endDate, companyId, departmentsList, callback);
            }
        }
    }
}

function updateRow(currentDate, endDate, companyId, employeeNo, callback) {
    var todayDate = Moment.utc().format('YYYY-MM-DD');
    if (currentDate > endDate) {
        return callback(1);
    } else {
        console.log(currentDate + 'currentDate');
        if (currentDate >= todayDate) {
            Attendance.update({
                date: {
                    $exists: true
                },
                $where: 'this.date.toJSON().slice(0, 10) == "' + currentDate + '"',
                'companyId': companyId,
                'employeeNo': employeeNo
            }, {
                $set: {
                    shift: 'not Working',
                }
            }, {
                upsert: false,
                new: false,
                multi: true
            }, function(err, data) {
                if (err) {
                    console.log(err);
                } else {
                    currentDate = Moment.utc(currentDate).add('days', 1).format('YYYY-MM-DD');
                    updateRow(currentDate, endDate, companyId, employeeNo, callback);
                }
            });
        } else {
            currentDate = Moment.utc(currentDate).add('days', 1).format('YYYY-MM-DD');
            updateRow(currentDate, endDate, companyId, employeeNo, callback);
        }
    }
}

function getExceptionData(exception, companyId, callback) {
    // console.log("getExceptionData..............");
    // console.log("exception....."+exception);
    Exception.findOne({
        'title': exception,
        'companyId': companyId
    }).exec(function(err, data) {
        // console.log(data)
        if (data) {
            // console.log(data);
            callback(data);
        }
    });
}

function saveHolidays(companyId, HolidaysData, callback) {
    var n = 0;
    HolidaysData.forEach(function(dataA) {
        var date = dataA.date['year'] + '-' + dataA.date['month'] + '-' + dataA.date['day'];
        var momentDate = Moment(date).format('YYYY-MM-DD');
        console.log(momentDate);
        var holidays = new Holidays();
        holidays.companyId = companyId;
        holidays.date = momentDate;
        holidays.holidayName = dataA.englishName;
        holidays.save();
        n++;
        if (HolidaysData.length == n) {
            callback(1);
        }
    });
}

function getHolidays(companyId, callback) {
    // console.log("getHolidays....");
    var holidaysArray = [];
    Holidays.find({
        'companyId': companyId
    }, function(err, data) {
        // console.log(data.length);
        if (data.length > 0) {
            var n = 1;
            data.forEach(function(Holiday) {
                var date = Moment(Holiday.date).format('YYYY-MM-DD');
                holidaysArray.push(date);
                if (data.length == n) {
                    callback(holidaysArray);
                }
                n++;
            });
        } else {
            callback(holidaysArray);
            // console.log(err+'err');
        }
    });
}

function getUtcHolidays(companyId, callback) {
    var holidaysArray = [];
    Holidays.find({
        'companyId': companyId
    }, function(err, data) {
        if (data) {
            var n = 1;
            data.forEach(function(Holiday) {
                var date = Moment.utc(Holiday.date).format();
                holidaysArray.push(date);
                n++;
                if (data.length == n) {
                    callback(holidaysArray);
                }
            });
        } else {
            console.log(err);
        }
    });
}

function getMonday(d) {
    d = new Date(d);
    var day = d.getDay(),
        diff = d.getDate() - day + (day == 0 ? -6 : 1); // adjust when day is sunday
    return new Date(d.setDate(diff));
}

/* Holiday setup when signup */
function saveHolidaysCompany(companyId, HolidaysData, callback) {
    console.log('saveHolidaysCompany function');
    console.log(HolidaysData);
    var n = 0;
    var holidaysArray = [];
    if (HolidaysData.error) {
        callback(null);
    } else {
        HolidaysData.forEach(function(dataA) {
            var date = dataA.date['year'] + '-' + dataA.date['month'] + '-' + dataA.date['day'];
            var momentDate = Moment(date).format('YYYY-MM-DD');
            holidaysArray.push(momentDate);
            var holidays = new Holidays();
            holidays.companyId = companyId;
            holidays.date = momentDate;
            holidays.holidayName = dataA.englishName;
            holidays.save();
            n++;
            if (HolidaysData.length == n) {
                callback(momentDate);
            } else {
                console.log('addmore', HolidaysData.length);
            }
        });
    }
}

function tryToSave(currentDate, endDate, result, companyId, data, isHolidays, callback) {
    if (currentDate > endDate) {
        return callback(1);
    } else {
        var n = 1;
        var holidays = result;
        var dateModify = currentDate;
        var dateH = Moment(dateModify).format('YYYY-MM-DD');
        var holiday = '';
        if (isHolidays == 'true') {
            if (holidays.indexOf(dateH) > -1) {
                holiday = true
            }
        }
        var startHour = Moment.utc(currentDate).set('hour', 9).format();
        var startDate = Moment.utc(startHour).set('minute', 00).format();
        var startDate = Moment.utc(startDate).set('second', 00).format();
        var finishHour = Moment.utc(currentDate).set('hour', 17).format();
        var finishDate = Moment.utc(finishHour).set('minute', 00).format();
        var finishDate = Moment.utc(finishDate).set('second', 00).format();
        var attendance = new Attendance()
        attendance.companyId = companyId;

        attendance.date = Moment.utc(dateModify).format('YYYY-MM-DD');
        attendance.admin = true;
        attendance.shift = 'OPEN';
        attendance.shiftStart = startDate;
        attendance.limitIn = false;
        attendance.shiftFinish = finishDate;
        attendance.limitOut = false;
        attendance.breakk = 00 + ':' + 30 + ':' + 00;
        attendance.breakAfter = 04 + ':' + 00 + ':' + 00;
        attendance.employeeNo = data.employeeNo;
        attendance.firstName = data.firstName;
        attendance.lastName = data.lastName;
        attendance.email = data.email;
        attendance.holiday = holiday;
        attendance.save(function(err) {
            if (err) {
                console.log(err);
                return callback(err, country);
            } else {
                currentDate = Moment.utc(currentDate).add('days', 1);
                tryToSave(currentDate, endDate, result, companyId, data, isHolidays, callback)
            }
        });
    }
}

function createDays(currentDate, endsHere, dataCompany, dataEmp, i, holidayresult, firstDateofRule, result, OnlyDays, callback) {
    var arrayResult = result;
    if (i > result.length - 1) {
        i = 0;
    }
    if (Moment.utc(currentDate) > Moment.utc(endsHere)) {
        console.log("days were created upto **** ==>" + Moment(endsHere).format('YYYY-MM-DD'));
        return callback(1);
    } else {
        var holidays = '',
            dateModify = Moment.utc(currentDate).format(),
            dateGive = Moment(dateModify).format('YYYY-MM-DD'),
            myShift = '';

        if (dataCompany.isHolidays == 'true') {
            if (holidayresult.indexOf(date) > -1) {
                holidays = true;
            }
        }
        // console.log(result);
        if (firstDateofRule != '') {
            if (dateGive >= Moment.utc(firstDateofRule).format('YYYY-MM-DD')) {
                var dayOfcurrentDate = Moment(dateModify).day();
                if (OnlyDays.indexOf('Day1') > -1) {
                    var ValueArray = result[i].shift;
                    myShift = ValueArray;
                    i++;
                } else {
                    var ValueArray = result[i].shift;
                    if (dayOfcurrentDate == weekDayNumber(result[i].day)) {
                        myShift = ValueArray;
                        i++;
                    } else {
                        //console.log(i);
                        var dayString = weekDayString(dayOfcurrentDate);
                        var resultIndex = OnlyDays.indexOf(dayString);
                        var ValueArray = result[resultIndex].shift;
                        myShift = ValueArray;
                        i = resultIndex + 1;
                    }
                }
            } else {
                myShift = "OPEN";
            }
        }
        getShiftData("", myShift, dataCompany._id, function(result) {
            var date = currentDate,
                nextDate = Moment.utc(date).add('days', 1).format();
            console.log("myShift result");
            if (!result) {
                createDays(nextDate, endsHere, dataCompany, dataEmp, i, holidayresult, firstDateofRule, arrayResult, OnlyDays, callback);
            } else {
                var shiftStartTime = result.startTime,
                    shiftFinishTime = result.finishTime,
                    prvOnShifts = '',
                    shiftStartDate = Moment.utc(shiftStartTime).format('YYYY-MM-DD'),
                    shiftFinishDate = Moment.utc(shiftFinishTime).format('YYYY-MM-DD'),
                    shiftval = result.name,
                    start = '',
                    finish = '',
                    sHour = '',
                    sMinute = '',
                    sdate = '',
                    Hourset = '',
                    fHour = Moment.utc(shiftFinishTime).format('HH'),
                    fMinute = Moment.utc(shiftFinishTime).format('mm'),
                    fdate = Moment.utc(nextDate).format('YYYY-MM-DD'),
                    fHourset = Moment.utc(fdate).set('hours', fHour),
                    startLimit = result.startLimit,
                    finishLimit = result.finishLimit,
                    dateOfnext = Moment.utc(date).format('YYYY-MM-DD');

                if (shiftStartDate == shiftFinishDate) {
                    sHour = Moment.utc(shiftStartTime).format('HH');
                    sMinute = Moment.utc(shiftStartTime).format('mm');
                    sdate = Moment.utc(date).format('YYYY-MM-DD');
                    Hourset = Moment.utc(sdate).set('hours', sHour);
                    start = Moment.utc(Hourset).set('minute', sMinute).format();

                    fHour = Moment.utc(shiftFinishTime).format('HH');
                    fMinute = Moment.utc(shiftFinishTime).format('mm');
                    fdate = Moment.utc(date).format('YYYY-MM-DD');
                    fHourset = Moment.utc(fdate).set('hours', fHour);
                    finish = Moment.utc(fHourset).set('minute', fMinute).format();
                } else {
                    if (dataEmp.shiftCutoff === true) {
                        prvOnShifts = true;
                    }
                    sHour = Moment.utc(shiftStartTime).format('HH');
                    sMinute = Moment.utc(shiftStartTime).format('mm');
                    sdate = Moment.utc(date).format('YYYY-MM-DD');
                    Hourset = Moment.utc(sdate).set('hours', sHour);
                    start = Moment.utc(Hourset).set('minute', sMinute).format();

                    fHour = Moment.utc(shiftFinishTime).format('HH');
                    fMinute = Moment.utc(shiftFinishTime).format('mm');
                    fdate = Moment.utc(nextDate).format('YYYY-MM-DD');
                    fHourset = Moment.utc(fdate).set('hours', fHour);
                    finish = Moment.utc(fHourset).set('minute', fMinute).format();
                }

                Attendance.update({
                    'date': new Date(dateOfnext),
                    'companyId': dataCompany._id,
                    'employeeNo': dataEmp.employeeNo,
                }, {
                    $set: {
                        "companyId": dataCompany._id,
                        "shiftType": "",
                        "readWriteForEmployee": false,
                        "notaddexc": "",
                        "shiftColor": "",
                        "prvOnShift": prvOnShifts,
                        "comment": "",
                        "breakIn2": false,
                        "breakIn": result.breakIn,
                        "allowExport": dataEmp.allowExport,
                        "exceptioncode": "",
                        "weeklyOtinclude": "",
                        "addToStandardHours": "",
                        "standardHours": "",
                        "workflowId": "",
                        "addWorkflow": false,
                        "allowances": [],
                        "dayinLieu": "",
                        "addweeklyexc": "",
                        "cutException": "",
                        "addException": false,
                        "Exceptiontype": "",
                        "Exception": "",
                        "ExceptionAssign": "",
                        "projectFlag": false,
                        "calFlag": false,
                        "areaFlag": false,
                        "readFlag": false,
                        "totalValues": [],
                        "checkin": [],
                        "lateOut": "",
                        "lateIn": "",
                        "holiday": holidays,
                        "managerSignedOff": false,
                        "flag": "",
                        "weeklyOt": "",
                        "ot2Rule": "",
                        "ot1Rule": "",
                        "totalRounded": "00:00:00",
                        "total": "00:00:00",
                        "normalTime": "00:00:00",
                        "breaktaken2": false,
                        "breaktaken": false,
                        "breakAfter2": "",
                        "breakAfter": result.breakAfter,
                        "breakk": result.breakTime,
                        "roundDownAfter": "",
                        "roundupDownOut": "",
                        "roundInUpAfter": "",
                        "roundupDownIn": "",
                        "round": "",
                        "limitOut": finishLimit,
                        "limitIn": startLimit,
                        "shiftFinish": finish,
                        "shiftStart": start,
                        "areaFinish": "",
                        "areaStart": "0",
                        "lastShift": myShift,
                        "shift": myShift,
                        "date": new Date(dateOfnext),
                        "chargeoutRate": dataEmp.chargeoutRate,
                        "hourlyRate": dataEmp.hourlyRate,
                        "active": true,
                        "subDepartment": dataEmp.subDepartment,
                        "department": dataEmp.department,
                        "payrollCode": dataEmp.payrollCode,
                        "employeeNo": dataEmp.employeeNo,
                        "PWD": "",
                        "admin": dataEmp.administrator,
                        "email": dataEmp.email,
                        "lastName": dataEmp.lastName,
                        "firstName": dataEmp.firstName,
                        "companyName": dataCompany.companyname,
                        "__v": 0,
                    }
                }, {
                    upsert: true,
                    new: false
                }, function(err, data) {
                    if (err) {
                        console.log(err);
                        console.log("fail to create day for %s %s %s of %s company", dataEmp.employeeNo, dataEmp.firstName, dataEmp.lastName, dataCompany.companyname);
                    } else {
                        console.log("day updated %s", Moment.utc(dateOfnext).format('YYYY-MM-DD'));
                        createDays(nextDate, endsHere, dataCompany, dataEmp, i, holidayresult, firstDateofRule, arrayResult, OnlyDays, callback);
                    }
                });
            }
        });
    }
};

function getWeekstartAndEnd(date, companyId) {
    console.log(date);
    console.log(companyId);
    console.log('---------------------------');
}

function changeFormat(value) {
    var h = '';
    var m = '';
    var time = value.split(':');
    if (time[0].length < 2) {
        h = '0' + time[0];
    } else {
        h = time[0];
    }
    if (time[1].length < 2) {
        m = '0' + time[1];
    } else {
        m = time[1];
    }

    return h + ':' + m + ':00';
}

function addShiftCutoff(current, endDate, attendanceId, companyId, employeeNo, weekEnd, callback) {

    var unix = Moment.utc(current).unix();
    var second = getSeconds(23 + ':' + 59 + ':59');

    var c1 = (unix + second);
    var areaFinish = c1;
    var nextdayAreaStart = areaFinish + 1;
    var outHourset = Moment.utc(current).set('hours', 23);
    var outdate = Moment.utc(outHourset).set('minute', 59);
    var checkOutTime = new Date(Date.parse(outdate)).toUTCString();

    var InHourset = Moment.utc(weekEnd).set('hours', 00);
    var Indate = Moment.utc(InHourset).set('minute', 01);
    var checkInTime = new Date(Date.parse(Indate)).toUTCString();
    Attendance.update({
        '_id': attendanceId,
        'companyId': companyId
    }, {
        $set: {
            calFlag: false,
            areaFinish: areaFinish,
        }
    }, {
        upsert: false,
        new: false
    }, function(err, data) {
        if (err) {
            console.log(err);
        } else {
            console.log("area finishDate...");
            Attendance.update({
                'companyId': companyId,
                'employeeNo': employeeNo,
                date: new Date(weekEnd)
            }, {
                $set: {
                    calFlag: false,
                    areaStart: nextdayAreaStart
                }
            }, {
                upsert: false,
                new: false
            }, function(err, data) {
                if (err) {
                    console.log(err);
                }
            });
        }
    });
    Attendance.find({
        '_id': attendanceId
    }).limit(1).exec(function(err, attendanceDataRec) {
        if (attendanceDataRec.length > 0) {
            attendanceDataRec.forEach(function(attendanceData) {
                if (attendanceData.checkin.length <= 0) {
                    callback(1);
                } else {
                    var i = 0;
                    attendanceData.checkin.sort(orderByNameAscending);
                    attendanceData.checkin.forEach(function(checkin) {
                        i++;
                        if (attendanceData.checkin.length == i) {
                            var checkType = checkin.checkType;
                            async.waterfall([function(next) {
                                if (checkType == 1 || checkType == 2 || checkType == 'i' || checkType == 'I') {
                                    Attendance.update({
                                        '_id': attendanceId,
                                        'companyId': companyId,
                                        'checkin.checkTime': {
                                            $ne: checkOutTime
                                        }
                                    }, {
                                        $set: {
                                            totalValues: [],
                                            readFlag: false,
                                        },
                                        $push: {
                                            checkin: {
                                                checkTime: checkOutTime,
                                                checkType: 'O'
                                            }
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {
                                            console.log(err);
                                        } else {
                                            next(null, 1)
                                        }
                                    });
                                } else {
                                    console.log('else');
                                    next(null, 1)
                                }
                            }], function(err, result) {
                                Attendance.find({
                                    '_id': attendanceId,
                                    'companyId': companyId,
                                    'checkin.checkTime': checkOutTime
                                }).limit(1).exec(function(err, dataOfAttendanceRec) {
                                    if (dataOfAttendanceRec.length > 0) {
                                        dataOfAttendanceRec.forEach(function(dataOfAttendance) {
                                            Attendance.findOne({
                                                'companyId': companyId,
                                                'employeeNo': employeeNo,
                                                date: new Date(weekEnd),
                                                'checkin.checkType': {
                                                    $exists: true
                                                },
                                                'checkin.checkTime': {
                                                    $ne: checkInTime
                                                }
                                            }, function(err, dataofAtn) {
                                                if (dataofAtn) {
                                                    var atnId = dataofAtn._id;
                                                    var inF = 0;
                                                    dataofAtn.checkin.sort(orderByNameAscending);
                                                    dataofAtn.checkin.forEach(function(checkin) {
                                                        inF++;
                                                        if (inF == 1) {
                                                            var checkT = checkin.checkType;
                                                            if (checkT == 0 || checkT == 3 || checkT == 'o' || checkT == 'O') {
                                                                Attendance.update({
                                                                    '_id': atnId
                                                                }, {
                                                                    $set: {
                                                                        totalValues: [],
                                                                        readFlag: false,
                                                                    },
                                                                    $push: {
                                                                        checkin: {
                                                                            checkTime: checkInTime,
                                                                            checkType: 'I'
                                                                        }
                                                                    }
                                                                }, {
                                                                    upsert: false,
                                                                    new: false
                                                                }, function(err, data) {
                                                                    if (err) {
                                                                        console.log(err);
                                                                    } else {
                                                                        callback(1);
                                                                    }
                                                                });
                                                            } else {
                                                                callback(1);
                                                            }
                                                        }
                                                    });
                                                } else {
                                                    callback(1);
                                                }
                                            });
                                        });
                                    } else {
                                        callback(1);
                                    }
                                });
                            })
                        }
                    }); //atndata.checkin
                } //
            });
        } else {
            callback(1)
        }
    })
}

function addShiftCutoffsForEmp(current, endDate, attendanceId, companyId, employeeNo, weekEnd, callback) {
    var unix = Moment.utc(current).unix();
    var second = getSeconds(23 + ':' + 59 + ':59');
    var c1 = (unix + second);
    var areaFinish = c1;
    var nextdayAreaStart = areaFinish + 1;
    var outHourset = Moment.utc(current).set('hours', 23);
    var outdate = Moment.utc(outHourset).set('minute', 59);
    var checkOutTime = new Date(Date.parse(outdate)).toUTCString();
    var InHourset = Moment.utc(weekEnd).set('hours', 00);
    var Indate = Moment.utc(InHourset).set('minute', 01);
    var checkInTime = new Date(Date.parse(Indate)).toUTCString();
    Attendance.update({
        '_id': attendanceId,
        'companyId': companyId
    }, {
        $set: {
            calFlag: false,
            areaFinish: areaFinish,
        }
    }, {
        upsert: false,
        new: false
    }, function(err, data) {
        if (err) {
            // console.log(err);
        } else {
            Attendance.update({
                'companyId': companyId,
                'employeeNo': employeeNo,
                date: new Date(weekEnd)
            }, {
                $set: {
                    calFlag: false,
                    readFlag: false,
                    areaFlag: false,
                    areaStart: nextdayAreaStart
                }
            }, {
                upsert: false,
                new: false
            }, function(err, data) {
                if (err) {
                    console.log(err);
                }
            });
        }
    });
    Attendance.find({
        '_id': attendanceId
    }).limit(1).exec(function(err, attendanceDataRec) {
        if (attendanceDataRec.length > 0) {
            attendanceDataRec.forEach(function(attendanceData) {
                if (attendanceData.checkin.length <= 0) {
                    callback(1);
                } else {
                    var i = 0;
                    attendanceData.checkin.sort(orderByNameAscending);
                    attendanceData.checkin.forEach(function(checkin) {
                        i++;
                        if (attendanceData.checkin.length == i) {
                            var checkType = checkin.checkType;
                            async.waterfall([function(next) {
                                if (checkType == 1 || checkType == 2 || checkType == 'i' || checkType == 'I') {
                                    Attendance.update({
                                        '_id': attendanceId,
                                        'companyId': companyId,
                                        'checkin.checkTime': {
                                            $ne: checkOutTime
                                        }
                                    }, {
                                        $set: {
                                            totalValues: [],
                                            readFlag: false,
                                        },
                                        $push: {
                                            checkin: {
                                                checkTime: checkOutTime,
                                                checkType: 'O',
                                                alter: true,
                                                alterWho: employeeNo,
                                            }
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {} else {
                                            next(null, 1)
                                        }
                                    });
                                } else {
                                    next(null, 1)
                                }
                            }], function(err, result) {
                                Attendance.find({
                                    '_id': attendanceId,
                                    'companyId': companyId,
                                    'checkin.checkTime': checkOutTime
                                }).limit(1).exec(function(err, dataOfAttendanceRec) {
                                    if (dataOfAttendanceRec.length > 0) {
                                        dataOfAttendanceRec.forEach(function(dataOfAttendance) {
                                            Attendance.find({
                                                'companyId': companyId,
                                                'employeeNo': employeeNo,
                                                date: new Date(weekEnd),
                                                'checkin.checkType': {
                                                    $exists: true
                                                },
                                                'checkin.checkTime': {
                                                    $ne: checkInTime
                                                }
                                            }, function(err, dataofAtn) {
                                                if (dataofAtn.length > 0) {
                                                    var atnId = dataofAtn[0]._id;
                                                    var inF = 0;
                                                    dataofAtn[0].checkin.sort(orderByNameAscending);
                                                    dataofAtn[0].checkin.forEach(function(checkin) {
                                                        inF++;
                                                        if (inF == 1) {
                                                            var checkT = checkin.checkType;
                                                            if (checkT == 0 || checkT == 3 || checkT == 'o' || checkT == 'O') {
                                                                Attendance.update({
                                                                    '_id': atnId
                                                                }, {
                                                                    $set: {
                                                                        totalValues: [],
                                                                        readFlag: false,
                                                                    },
                                                                    $push: {
                                                                        checkin: {
                                                                            checkTime: checkInTime,
                                                                            checkType: 'I',
                                                                            alter: true,
                                                                            alterWho: employeeNo,
                                                                        }
                                                                    }
                                                                }, {
                                                                    upsert: false,
                                                                    new: false
                                                                }, function(err, data) {
                                                                    if (err) {
                                                                        console.log(err);
                                                                    } else {
                                                                        callback(1);
                                                                    }
                                                                });
                                                            } else {
                                                                callback(1);
                                                            }
                                                        }
                                                    });
                                                } else {
                                                    callback(1);
                                                }
                                            });
                                        });
                                    } else {
                                        callback(1);
                                    }
                                });
                            })
                        }
                    }); //atndata.checkin
                } //
            });
        } else {
            callback(1)
        }
    })
}

function addShiftCutoffs(current, endDate, attendanceId, companyId, employeeNo, weekEnd, callback) {
    console.log("addShiftCutoffs");

    var unix = Moment.utc(current).unix();
    var second = getSeconds(23 + ':' + 59 + ':59');
    var c1 = (unix + second);
    var areaFinish = c1;
    var nextdayAreaStart = areaFinish + 1;
    var outHourset = Moment.utc(current).set('hours', 23);
    var outdate = Moment.utc(outHourset).set('minute', 59);
    var checkOutTime = new Date(Date.parse(outdate)).toUTCString();
    var InHourset = Moment.utc(weekEnd).set('hours', 00);
    var Indate = Moment.utc(InHourset).set('minute', 01);
    var checkInTime = new Date(Date.parse(Indate)).toUTCString();
    Attendance.update({
        '_id': attendanceId,
        'companyId': companyId
    }, {
        $set: {
            calFlag: false,
            areaFinish: areaFinish,
        }
    }, {
        upsert: false,
        new: false
    }, function(err, data) {
        if (err) {
            // console.log(err);
        } else {
            Attendance.update({
                'companyId': companyId,
                'employeeNo': employeeNo,
                date: new Date(weekEnd)
            }, {
                $set: {
                    calFlag: false,
                    readFlag: false,
                    areaFlag: false,
                    areaStart: nextdayAreaStart
                }
            }, {
                upsert: false,
                new: false
            }, function(err, data) {
                if (err) {
                    console.log(err);
                }
            });
        }
    });
    Attendance.find({
        '_id': attendanceId
    }).limit(1).exec(function(err, attendanceDataRec) {
        if (attendanceDataRec.length > 0) {
            attendanceDataRec.forEach(function(attendanceData) {
                if (attendanceData.checkin.length <= 0) {
                    callback(1);
                } else {
                    var i = 0;
                    attendanceData.checkin.sort(orderByNameAscending);
                    attendanceData.checkin.forEach(function(checkin) {
                        i++;
                        if (attendanceData.checkin.length == i) {
                            var checkType = checkin.checkType;
                            async.waterfall([function(next) {
                                if (checkType == 1 || checkType == 2 || checkType == 'i' || checkType == 'I') {
                                    Attendance.update({
                                        '_id': attendanceId,
                                        'companyId': companyId,
                                        'checkin.checkTime': {
                                            $ne: checkOutTime
                                        }
                                    }, {
                                        $set: {
                                            totalValues: [],
                                            readFlag: false,
                                        },
                                        $push: {
                                            checkin: {
                                                checkTime: checkOutTime,
                                                checkType: 'O'
                                            }
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {} else {
                                            next(null, 1)
                                        }
                                    });
                                } else {
                                    next(null, 1)
                                }
                            }], function(err, result) {
                                Attendance.find({
                                    '_id': attendanceId,
                                    'companyId': companyId,
                                    'checkin.checkTime': checkOutTime
                                }).limit(1).exec(function(err, dataOfAttendanceRec) {
                                    if (dataOfAttendanceRec.length > 0) {
                                        dataOfAttendanceRec.forEach(function(dataOfAttendance) {
                                            Attendance.find({
                                                'companyId': companyId,
                                                'employeeNo': employeeNo,
                                                date: new Date(weekEnd),
                                                'checkin.checkType': {
                                                    $exists: true
                                                },
                                                'checkin.checkTime': {
                                                    $ne: checkInTime
                                                }
                                            }, function(err, dataofAtn) {
                                                if (dataofAtn.length > 0) {
                                                    var atnId = dataofAtn[0]._id;
                                                    var inF = 0;
                                                    dataofAtn[0].checkin.sort(orderByNameAscending);
                                                    dataofAtn[0].checkin.forEach(function(checkin) {
                                                        inF++;
                                                        if (inF == 1) {
                                                            var checkT = checkin.checkType;
                                                            if (checkT == 0 || checkT == 3 || checkT == 'o' || checkT == 'O') {
                                                                Attendance.update({
                                                                    '_id': atnId
                                                                }, {
                                                                    $set: {
                                                                        totalValues: [],
                                                                        readFlag: false,
                                                                    },
                                                                    $push: {
                                                                        checkin: {
                                                                            checkTime: checkInTime,
                                                                            checkType: 'I'
                                                                        }
                                                                    }
                                                                }, {
                                                                    upsert: false,
                                                                    new: false
                                                                }, function(err, data) {
                                                                    if (err) {
                                                                        console.log(err);
                                                                    } else {
                                                                        callback(1);
                                                                    }
                                                                });
                                                            } else {
                                                                callback(1);
                                                            }
                                                        }
                                                    });
                                                } else {
                                                    callback(1);
                                                }
                                            });
                                        });
                                    } else {
                                        callback(1);
                                    }
                                });
                            })
                        }
                    }); //atndata.checkin
                } //
            });
        } else {
            callback(1)
        }
    })
}

function getLastDateSession(companyId, callback) {
    Period.find({
        'companyId': companyId
    }).sort({
        _id: -1
    }).limit(1).exec(function(err, periodData) {
        if (periodData.length > 0) {
            periodData.forEach(function(datap) {
                var period = datap.period;
                callback(period)
            });
        } else {
            callback(false)
        }
    });
}

function getCodes(totalValues, pCount, pLength, jcArray, callback) {
    var i = 0;
    var workcodes = [];
    var workcodesNew = [];
    var total = [];
    var myFlag;

    console.log(totalValues);
    console.log(jcArray);

    totalValues.forEach(function(totalVal) {
        i++;
        var total = totalVal.total;
        var totalAdjusted = totalVal.totalAdjusted;
        var workCode = totalVal.workCode;
        // console.log(workCode +'----workCode');
        // if(isInArray(workCode, jcArray)){
        if (isInArray(workCode, jcArray)) {
            workcodes.push(workCode);
        } else if (!isInArray(workCode, jcArray)) {
            workcodesNew.push(workCode);
        }

        if (totalValues.length == i) {
            if (workcodesNew.length > 0) {
                if (pCount === pLength) {
                    myFlag = false;
                } else {
                    myFlag = true;
                }
            } else {
                myFlag = false;
            }
            console.log("multi project in single atn status %s", myFlag);
            callback(workcodes, myFlag);
        }
    });
}

function getHourlyWageOfCalculation(companyId, start, end, callback) {
    Dashboard.find({
        weekStart: start,
        weekEnd: end,
        companyId: companyId
    }, function(err, dashboardData) {
        if (dashboardData.length > 0) {
            async.eachSeries(dashboardData, function(dash, cbdash) {
                var companyId = dash.companyId;
                var start = dash.weekStart;
                var end = dash.weekEnd;
                var departments = dash.departments;
                if (departments.length > 0) {
                    var deptCount = 0;
                    async.eachSeries(departments, function(dept, cbdept) {
                        var totalMoneySpent = 0;
                        deptCount++;
                        var deptId = dept.departmentId;
                        var departName = dept.departmentName;
                        var departmentId = dept._id
                        var totalWorked = 0;
                        Attendance.find({
                            'department': departName,
                            'companyId': companyId,
                            "date": {
                                $gte: new Date(start),
                                $lte: new Date(end)
                            }
                        }).sort({
                            'date': 'asc'
                        }).exec(function(err, attendanceData) {
                            var ot2Total = 0;
                            var otTotal = 0;
                            var NTTotal = 0;
                            var normalTimeTotal = 0;
                            var cutExceptionTotal = 0;
                            var addweeklyexcTotal = 0;
                            var dataRead = 0;
                            var countAtn = 0;
                            if (attendanceData.length > 0) {
                                async.eachSeries(attendanceData, function(attendance, cbA) {
                                    countAtn++;
                                    var totalAtn = attendance.totalRounded;
                                    totalWorked += getSeconds(totalAtn);
                                    var hoursMinutes = totalAtn.split(/[.:]/);
                                    var hours = parseFloat(hoursMinutes[0], 10);
                                    var minutes = hoursMinutes[1] ? parseFloat(hoursMinutes[1], 10) : 0;
                                    Employee.findOne({
                                        'companyId': attendance.companyId,
                                        'employeeNo': attendance.employeeNo
                                    }, function(err, employeeData) {
                                        if (employeeData == null) {
                                            cbA();
                                        } else {
                                            var totalHover = hours + (minutes / 60);
                                            var hoverlyRate = 0;
                                            if (employeeData.hourlyRate != '' && employeeData.active === true) {
                                                hoverlyRate = parseFloat(employeeData.hourlyRate);
                                            }
                                            totalMoneySpent += totalHover * hoverlyRate;
                                            if (attendanceData.length == countAtn) {
                                                companyId = companyId.toString();
                                                var moneySpent1 = Math.round(totalMoneySpent);
                                                Dashboard.update({
                                                    'departments._id': departmentId
                                                }, {
                                                    $set: {
                                                        'departments.$.moneySpent': moneySpent1
                                                    }
                                                }, {
                                                    upsert: false,
                                                    new: false
                                                }, function(err, dataUp) {
                                                    if (err) {
                                                        // console.log(err);
                                                    } else {
                                                        if (dataUp) {
                                                            if (deptCount == departments.length) {
                                                                callback(true);
                                                            } else {
                                                                if (countAtn == attendanceData.length) {
                                                                    cbdept();
                                                                } else {
                                                                    cbA();
                                                                }
                                                            }
                                                        }
                                                    }
                                                });
                                            } else {
                                                cbA();
                                            }
                                        }
                                    });
                                });
                            } else {
                                if (deptCount == departments.length) {
                                    callback(true);
                                    cbdash();
                                } else {
                                    cbdept();
                                }
                            }
                        });
                    });
                } else {
                    cbdash();
                }

            });
        } else {
            callback(true);
        }
    });
}

/* Meter work*/
function calculateMeterTotalWorked(companyId, myDate, callbacks) {
    console.log("------------------ calculateTotalWorked....Meter");
    async.waterfall([function(callback) {
            meterDashboard.find({
                'companyId': companyId,
                'date': myDate,
            }).exec(function(err, dashboardData) {
                var deptCount = 0;
                var uniqueDeptList = [];
                var departmentList = dashboardData[0].departments;
                if (departmentList.length > 0) {
                    async.eachSeries(departmentList, function(dept, cbdept) {
                        deptCount++;
                        var departName = dept.departmentName;
                        var dept_Id = dept._id;

                        var DepartmentAllocatedHours = 0;
                        var DepartmentWorkedHours = 0;
                        var DepartmentMoneySpent = 0;
                        var DepartmentBudgetedWages = 0;

                        Attendance.find({
                            'companyId': companyId,
                            "date": new Date(myDate),
                            'active': true,
                            'department': departName
                        }).exec(function(err, attendanceData) {
                            // console.log("dept attendanceData.length..."+attendanceData.length);
                            if (attendanceData.length > 0) {
                                var countAtn = 0;
                                async.eachSeries(attendanceData, function(attendance, cbA) {
                                    countAtn++;
                                    var dt1 = Moment.utc(attendance.shiftStart).format("DD-MM-YYYY HH:mm:sss");
                                    var dt2 = Moment.utc(attendance.shiftFinish).format("DD-MM-YYYY HH:mm:sss");
                                    var ms;
                                    if (attendance.shift != "not Working") {
                                        ms = Moment.utc(Moment(dt2, "DD/MM/YYYY HH:mm:ss").diff(Moment(dt1, "DD/MM/YYYY HH:mm:ss"))).format("HH:mm:ss");
                                        if (attendance.breakk && !attendance.breakIn) {
                                            var calculatedHours = getSeconds(ms) - getSeconds(attendance.breakk);
                                            ms = secToFormatted(calculatedHours);
                                        }
                                    } else {
                                        ms = '00:00:00';
                                    }

                                    var totalAtn = attendance.totalRounded;
                                    var hoursMinutes = totalAtn.split(/[.:]/);
                                    var hours = parseFloat(hoursMinutes[0], 10);
                                    var minutes = hoursMinutes[1] ? parseFloat(hoursMinutes[1], 10) : 0;
                                    var totalHover = hours + (minutes / 60);
                                    var hoverlyRate = 0;
                                    if (attendance.hourlyRate != '' && attendance.active === true) {
                                        hoverlyRate = parseFloat(attendance.hourlyRate);
                                    }
                                    var hoursMinutes1 = ms.split(/[.:]/);
                                    var hours1 = parseFloat(hoursMinutes1[0], 10);
                                    var minutes1 = hoursMinutes1[1] ? parseFloat(hoursMinutes1[1], 10) : 0;
                                    var totalHover1 = hours1 + (minutes1 / 60);
                                    if (hoverlyRate && totalHover1)
                                        DepartmentBudgetedWages += totalHover1 * hoverlyRate;
                                    if (totalHover && hoverlyRate)
                                        DepartmentMoneySpent += totalHover * hoverlyRate;
                                    DepartmentWorkedHours += getSeconds(totalAtn);

                                    DepartmentAllocatedHours = DepartmentAllocatedHours + getSeconds(ms);


                                    // DeptAllocatedHours+=getSeconds(ms);
                                    if (countAtn == attendanceData.length) {
                                        console.log("---------------********log Department************----------------")
                                        console.log("dept_Id....................." + dept_Id);
                                        console.log("ms ........................." + ms);
                                        console.log("department name............." + departName);
                                        console.log("DepartmentAllocatedHours...." + secToFormatted(DepartmentAllocatedHours));
                                        console.log("DepartmentWorkedHours......." + secToFormatted(DepartmentWorkedHours));

                                        meterDashboard.update({
                                            'departments._id': dept_Id
                                        }, {
                                            $set: {
                                                'departments.$.workedHours': secToFormatted(DepartmentWorkedHours),
                                                'departments.$.moneySpent': DepartmentMoneySpent,
                                                'departments.$.allocatedHours': secToFormatted(DepartmentAllocatedHours),
                                                'departments.$.budgetedWages': DepartmentBudgetedWages,
                                                // "budgetedWages":budgetedWages
                                            }
                                        }, {
                                            upsert: false,
                                            new: false
                                        }, function(err, dataUp) {
                                            // console.log("erraaaaaaaaaaaaaaaaaaaaaaaaaaaa");
                                            console.log(dataUp);
                                            if (deptCount == departmentList.length) {
                                                callback(null, 'one', 'two');
                                            }
                                            cbdept();
                                        });
                                    } else {
                                        cbA();
                                    }
                                });
                            } else {
                                if (deptCount == departmentList.length) {
                                    callback(null, 'one', 'two');
                                }
                                cbdept();
                            }
                        });
                    });
                } else {
                    callback(null, 'one', 'two');
                }
            });
        },
        function(arg1, arg2, callback) {
            // calculateDateWiseData(function(result) {
            //   if (result) {
            //      console.log("result");
            // console.log(result);
            callback(null, 'done');
            //   }
            // });
        },
    ], function(err, result) {
        console.log("next....");
        meterDashboard.findOne({
            'companyId': companyId,
            'date': myDate
        }).exec(function(err, data) {
            if (data) {

                var id = data._id;
                var departmentList = data.departments;
                var count = 0;

                var mainAllocatedHours = 0;
                var mainWorkedHours = 0;
                var mainBudgetedWages = 0;
                var mainMoneySpent = 0;

                var emailStatus = data.emailStatus;
                var cmpName = data.companyName;

                async.eachSeries(departmentList, function(dept, cbdept) {
                    count++;
                    var dpId = dept._id;
                    var dptName = dept.departmentName;
                    var dptemailStatus = dept.emailStatus;

                    var permain1 = 00;
                    if (getSeconds(dept.allocatedHours) != 0) {
                        var total = getSeconds(dept.workedHours) / getSeconds(dept.allocatedHours);
                        var per = total * 100;
                        permain1 = Math.round(per * 100) / 100;
                    }
                    // console.log("permain1............"+permain1);
                    meterDashboard.update({
                        'departments._id': dpId,
                        '_id': id
                    }, {
                        $set: {
                            'departments.$.percentageUsed': permain1
                        }
                    }, {
                        upsert: false,
                        new: false
                    }, function(err, data) {
                        if (err) {
                            console.log(err);
                        } else {
                            emailalerts.findOne({
                                'companyId': companyId,
                                emailType: 'working alerts'
                            }).exec(function(err, emailDetail) {
                                if (emailDetail != null) {
                                    emailDetail.email.forEach(function(emails) {
                                        var percentage = parseInt(per);
                                        var email = emails;
                                        var subject = 'work alerts';
                                        if (percentage >= 50 && percentage <= 74) {
                                            if (dptemailStatus != 'half') {
                                                var body = cmpName + ' department ' + dptName + ' has  worked percentage 50%';
                                                emailfn.send_mail(email, subject, body, function(output) {
                                                    if (output == false) {
                                                        console.log('err');
                                                    } else {
                                                        console.log('mail sent');
                                                        meterDashboard.update({
                                                            'departments._id': dpId,
                                                            '_id': id
                                                        }, {
                                                            $set: {
                                                                'departments.$.emailStatus': 'half'
                                                            }
                                                        }, {
                                                            upsert: false,
                                                            new: false
                                                        }, function(err, dataUp) {
                                                            if (err) {
                                                                console.log(err);
                                                            }
                                                        });
                                                    }
                                                });
                                                var email1 = 'barnie@tme.co.nz';
                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                    if (output == false) {
                                                        console.log('err');
                                                    } else {
                                                        console.log("mail to " + email1);
                                                    }
                                                });
                                            }
                                        } else if (percentage >= 75 && percentage <= 99) {
                                            // console.log("percentage >= 75 && percentage<= 99");
                                            if (dptemailStatus != 'halfup') {
                                                // console.log("dptemailStatus != 'half'");
                                                var body = cmpName + ' department ' + dptName + ' has  worked percentage 75%';
                                                // console.log(body);
                                                emailfn.send_mail(email, subject, body, function(output) {
                                                    if (output == false) {
                                                        console.log('err');
                                                    } else {
                                                        meterDashboard.update({
                                                            'departments._id': dpId,
                                                            '_id': id
                                                        }, {
                                                            $set: {
                                                                'departments.$.emailStatus': 'halfup'
                                                            }
                                                        }, {
                                                            upsert: false,
                                                            new: false
                                                        }, function(err, dataUp) {
                                                            if (err) {
                                                                console.log(err);
                                                            }
                                                        });
                                                    }
                                                });
                                                var email1 = 'barnie@tme.co.nz';
                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                    if (output == false) {
                                                        console.log('err');
                                                    } else {
                                                        console.log("mail to " + email1);
                                                    }
                                                });
                                            }
                                        } else if (percentage >= 100) {
                                            // console.log("percentage == 100");
                                            if (dptemailStatus != 'full') {
                                                // console.log("dptemailStatus != 'full'");
                                                var body = cmpName + ' department ' + dptName + ' has  worked percentage 100%';
                                                // console.log(body);
                                                emailfn.send_mail(email, subject, body, function(output) {
                                                    if (output == false) {
                                                        console.log('err');
                                                    } else {
                                                        meterDashboard.update({
                                                            'departments._id': dpId,
                                                            '_id': id
                                                        }, {
                                                            $set: {
                                                                'departments.$.emailStatus': 'full'
                                                            }
                                                        }, {
                                                            upsert: false,
                                                            new: false
                                                        }, function(err, dataUp) {
                                                            if (err) {
                                                                console.log(err);
                                                            }
                                                        });
                                                    }
                                                });
                                                var email1 = 'barnie@tme.co.nz';
                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                    if (output == false) {
                                                        console.log('err');
                                                    } else {
                                                        console.log("mail to " + email1);
                                                    }
                                                });
                                            }
                                        }
                                    });
                                }
                            });
                        }
                    });

                    mainAllocatedHours += getSeconds(dept.allocatedHours);
                    mainWorkedHours += getSeconds(dept.workedHours);
                    mainBudgetedWages += parseInt(dept.budgetedWages);
                    mainMoneySpent += parseInt(dept.moneySpent);
                    // console.log("mainBudgetedWages..."+mainBudgetedWages);
                    if (departmentList.length == count) {
                        async.waterfall([function(next) {

                            Attendance.find({
                                'companyId': companyId,
                                "date": new Date(myDate),
                                "active": true,
                                'department': ''
                            }).exec(function(err, attendanceData) {
                                console.log("not assinged department and subdepartment to the employee...");
                                console.log(attendanceData.length);
                                if (attendanceData.length > 0) {
                                    var countAtn = 0;
                                    attendanceData.forEach(function(attendance) {
                                        countAtn++;
                                        var dt1 = Moment.utc(attendance.shiftStart).format("DD-MM-YYYY HH:mm:sss");
                                        var dt2 = Moment.utc(attendance.shiftFinish).format("DD-MM-YYYY HH:mm:sss");
                                        if (attendance.shift != "not Working") {
                                            ms = Moment.utc(Moment(dt2, "DD/MM/YYYY HH:mm:ss").diff(Moment(dt1, "DD/MM/YYYY HH:mm:ss"))).format("HH:mm:ss");
                                            if (attendance.breakk && !attendance.breakIn) {
                                                var calculatedHours = getSeconds(ms) - getSeconds(attendance.breakk);
                                                ms = secToFormatted(calculatedHours);
                                            }
                                        } else {
                                            ms = '00:00:00';
                                        }
                                        var totalAtn = attendance.totalRounded;
                                        mainAllocatedHours = mainAllocatedHours + getSeconds(ms)
                                        mainWorkedHours += getSeconds(totalAtn);

                                        var hoursMinutes1 = ms.split(/[.:]/);
                                        var hours1 = parseInt(hoursMinutes1[0], 10);
                                        var minutes1 = hoursMinutes1[1] ? parseInt(hoursMinutes1[1], 10) : 0;
                                        var totalHover1 = hours1 + (minutes1 / 60);
                                        var hoverlyRate = 0;
                                        if (attendance.hourlyRate != 'NaN' && attendance.hourlyRate != '' && attendance.active === true) {
                                            hoverlyRate = parseFloat(attendance.hourlyRate);
                                        }
                                        if (hoverlyRate && totalHover1)
                                            mainBudgetedWages += totalHover1 * hoverlyRate;

                                        var totalAtn = attendance.totalRounded;
                                        var hoursMinutes = totalAtn.split(/[.:]/);
                                        var hours = parseInt(hoursMinutes[0], 10);
                                        var minutes = hoursMinutes[1] ? parseInt(hoursMinutes[1], 10) : 0;
                                        var totalHover = hours + (minutes / 60);
                                        if (totalHover && hoverlyRate)
                                            mainMoneySpent += totalHover * hoverlyRate;
                                        if (attendanceData.length == countAtn) {
                                            // console.log("mainAllocatedHours......."+secToFormatted(mainAllocatedHours));
                                            // console.log("last mainBudgetedWages..."+mainBudgetedWages);
                                            meterDashboard.update({
                                                '_id': id
                                            }, {
                                                $set: {
                                                    'workedHours': secToFormatted(mainWorkedHours),
                                                    'moneySpent': mainMoneySpent,
                                                    'allocatedHours': secToFormatted(mainAllocatedHours),
                                                    'budgetedWages': mainBudgetedWages,
                                                    'calfalg': true
                                                }
                                            }, {
                                                upsert: false,
                                                new: false
                                            }, function(err, dataUp) {
                                                if (err) {
                                                    // console.log(err);
                                                } else {

                                                    var permain1 = 00;
                                                    if (mainAllocatedHours != 0) {
                                                        var totalmain = mainWorkedHours / mainAllocatedHours;
                                                        var permain = totalmain * 100;
                                                        permain1 = Math.round(permain * 100) / 100;
                                                    }
                                                    meterDashboard.update({
                                                        '_id': id
                                                    }, {
                                                        $set: {
                                                            'percentageUsed': permain1
                                                        }
                                                    }, {
                                                        upsert: false,
                                                        new: false
                                                    }, function(err, dataUp) {
                                                        if (err) {
                                                            // console.log(err);
                                                        } else {

                                                            var channel = 'timecloud.meterdashboard.update.' + id;
                                                            wamp.getSession().publish(channel, [{
                                                                'company': companyId
                                                            }]);

                                                            console.log("published meterdashboard not assinged department---> " + channel);


                                                            subMeterDashboard.findOne({
                                                                'companyId': companyId,
                                                                'date': myDate
                                                            }, function(err, subDepartment) {
                                                                if (subDepartment != null) {
                                                                    subDepartment.subDepartments.forEach(function(detail) {
                                                                        var allocatedHours = 0;
                                                                        var workedHoursData = 0;
                                                                        if (detail.workedHours) {
                                                                            workedHoursData = getSeconds(detail.workedHours);
                                                                        }
                                                                        if (detail.allocatedHours != '') {
                                                                            allocatedHours = getSeconds(detail.allocatedHours);
                                                                        }
                                                                        var percentage1 = 00;
                                                                        if (allocatedHours != 0) {
                                                                            var total = workedHoursData / allocatedHours;
                                                                            var per = total * 100;
                                                                            percentage1 = Math.round(per * 100) / 100;
                                                                        }
                                                                        subMeterDashboard.update({
                                                                            'subDepartments._id': detail._id
                                                                        }, {
                                                                            $set: {
                                                                                'subDepartments.$.percentageUsed': percentage1
                                                                            }
                                                                        }, {
                                                                            upsert: false,
                                                                            new: false
                                                                        }, function(err, dataUp) {
                                                                            emailalerts.findOne({
                                                                                'companyId': companyId,
                                                                                emailType: 'working alerts'
                                                                            }).exec(function(err, emailDetail) {
                                                                                if (emailDetail != null) {
                                                                                    emailDetail.email.forEach(function(emails) {
                                                                                        var percentage = parseInt(per);
                                                                                        var email = emails;
                                                                                        var subject = 'work alerts';
                                                                                        if (percentage >= 50 && percentage <= 74) {
                                                                                            if (dptemailStatus != 'half') {
                                                                                                var body = cmpName + 's sub-department ' + detail.subDeptName + ' of department ' + dptName + ' has  worked percentage 50%';
                                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                                    if (output == false) {
                                                                                                        // console.log('err');
                                                                                                    } else {
                                                                                                        subMeterDashboard.update({
                                                                                                            'subDepartments._id': detail._id
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                'subDepartments.$.emailStatus': 'half'
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, dataUp) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        });
                                                                                                    }
                                                                                                });
                                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                                    if (output == false) {
                                                                                                        // console.log('err');
                                                                                                    } else {
                                                                                                        // console.log("mail to "+email1);
                                                                                                    }
                                                                                                });
                                                                                            }
                                                                                        } else if (percentage >= 75 && percentage <= 99) {
                                                                                            if (dptemailStatus != 'halfup') {
                                                                                                var body = cmpName + 's sub-department ' + detail.subDeptName + ' of department ' + dptName + ' has  worked percentage 75%';
                                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                                    if (output == false) {
                                                                                                        // console.log('err');
                                                                                                    } else {
                                                                                                        subMeterDashboard.update({
                                                                                                            'subDepartments._id': detail._id
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                'subDepartments.$.emailStatus': 'half'
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, dataUp) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        });
                                                                                                    }
                                                                                                });
                                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                                    if (output == false) {
                                                                                                        // console.log('err');
                                                                                                    } else {
                                                                                                        // console.log("mail to "+email1);
                                                                                                    }
                                                                                                });
                                                                                            }
                                                                                        } else if (percentage >= 100) {
                                                                                            if (dptemailStatus != 'full') {
                                                                                                var body = cmpName + 's sub-department ' + detail.subDeptName + ' of department ' + dptName + ' has  worked percentage 100%';
                                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                                    if (output == false) {
                                                                                                        // console.log('err');
                                                                                                    } else {
                                                                                                        subMeterDashboard.update({
                                                                                                            'subDepartments._id': detail._id
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                'subDepartments.$.emailStatus': 'half'
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, dataUp) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        });
                                                                                                    }
                                                                                                });
                                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                                    if (output == false) {
                                                                                                        // console.log('err');
                                                                                                    } else {
                                                                                                        // console.log("mail to "+email1);
                                                                                                    }
                                                                                                });
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                }
                                                                            });
                                                                        });
                                                                    });
                                                                }
                                                            });
                                                            emailalerts.findOne({
                                                                'companyId': companyId,
                                                                emailType: 'working alerts'
                                                            }).exec(function(err, emailDetail) {
                                                                if (emailDetail != null) {
                                                                    emailDetail.email.forEach(function(emails) {
                                                                        var percentage = parseInt(permain);
                                                                        var email = emails;
                                                                        var subject = 'work alerts';
                                                                        if (percentage >= 50 && percentage <= 74) {
                                                                            if (emailStatus != 'half') {
                                                                                var body = cmpName + ' has worked percentage 50%';
                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        meterDashboard.update({
                                                                                            '_id': id
                                                                                        }, {
                                                                                            $set: {
                                                                                                emailStatus: 'half'
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, dataUp) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                });
                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        // console.log("mail to "+email1);
                                                                                    }
                                                                                });

                                                                            }
                                                                        } else if (percentage >= 75 && percentage <= 99) {
                                                                            if (emailStatus != 'halfup') {
                                                                                var body = cmpName + ' has worked percentage 75%';
                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        meterDashboard.update({
                                                                                            '_id': id
                                                                                        }, {
                                                                                            $set: {
                                                                                                emailStatus: 'halfup'
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, dataUp) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                });
                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        // console.log("mail to "+email1);
                                                                                    }
                                                                                });
                                                                            }
                                                                        } else if (percentage >= 100) {
                                                                            if (emailStatus != 'full') {
                                                                                var body = cmpName + ' has worked percentage 100%';
                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        meterDashboard.update({
                                                                                            '_id': id
                                                                                        }, {
                                                                                            $set: {
                                                                                                emailStatus: 'full'
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, dataUp) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                });
                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        // console.log("mail to "+email1);
                                                                                    }
                                                                                });
                                                                            }
                                                                        }
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    });
                                                    callbacks(true);
                                                }
                                            });
                                        }
                                    });
                                } else {
                                    // console.log("not any emp without assign dept...");
                                    next(null, 1);
                                }
                            });
                        }], function(next) {
                            // var totalMoney = Math.round(TotalmoneySpent * 100) /100 ;
                            meterDashboard.update({
                                '_id': id
                            }, {
                                $set: {
                                    'workedHours': secToFormatted(mainWorkedHours),
                                    'moneySpent': mainMoneySpent,
                                    'allocatedHours': secToFormatted(mainAllocatedHours),
                                    'budgetedWages': mainBudgetedWages,
                                    'calfalg': true
                                }
                            }, {
                                upsert: false,
                                new: false
                            }, function(err, dataUp) {
                                if (err) {
                                    console.log("err " + err);
                                } else {

                                    var permain1 = 00;
                                    if (mainAllocatedHours != 0) {
                                        var totalmain = mainWorkedHours / mainAllocatedHours;
                                        var permain = totalmain * 100;
                                        permain1 = Math.round(permain * 100) / 100;
                                    }
                                    meterDashboard.update({
                                        '_id': id
                                    }, {
                                        $set: {
                                            'percentageUsed': permain1
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, dataUp) {
                                        if (err) {
                                            // console.log(err);
                                        } else {
                                            var channel = 'timecloud.meterdashboard.update.' + id;
                                            wamp.getSession().publish(channel, [{
                                                'company': companyId
                                            }]);

                                            console.log("published meterdashboard next final---> " + channel);

                                            var allocatedHours = 0;
                                            var workedHoursData = 0;
                                            subMeterDashboard.findOne({
                                                'companyId': companyId,
                                                'date': myDate
                                            }, function(err, subDepartment) {
                                                if (subDepartment != null) {
                                                    subDepartment.subDepartments.forEach(function(detail) {

                                                        if (detail.workedHours) {
                                                            workedHoursData = getSeconds(detail.workedHours);
                                                        }
                                                        if (detail.allocatedHours != '') {
                                                            allocatedHours = getSeconds(detail.allocatedHours);
                                                        }
                                                        var percentage1 = 00;
                                                        if (allocatedHours != 0) {
                                                            var total = workedHoursData / allocatedHours;
                                                            var per = total * 100;
                                                            percentage1 = Math.round(per * 100) / 100;
                                                        }
                                                        subMeterDashboard.update({
                                                            'subDepartments._id': detail._id
                                                        }, {
                                                            $set: {
                                                                'subDepartments.$.percentageUsed': percentage1
                                                            }
                                                        }, {
                                                            upsert: false,
                                                            new: false
                                                        }, function(err, dataUp) {
                                                            emailalerts.findOne({
                                                                'companyId': companyId,
                                                                emailType: 'working alerts'
                                                            }).exec(function(err, emailDetail) {
                                                                if (emailDetail != null) {
                                                                    emailDetail.email.forEach(function(emails) {
                                                                        var percentage = parseInt(per);
                                                                        var email = emails;
                                                                        var subject = 'work alerts';
                                                                        if (percentage >= 50 && percentage <= 74) {
                                                                            if (dptemailStatus != 'half') {
                                                                                var body = cmpName + 's sub-department ' + detail.subDeptName + ' of department ' + dptName + ' has  worked percentage 50%';
                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        subMeterDashboard.update({
                                                                                            'subDepartments._id': detail._id
                                                                                        }, {
                                                                                            $set: {
                                                                                                'subDepartments.$.emailStatus': 'half'
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, dataUp) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                });
                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        console.log("mail to " + email1);
                                                                                    }
                                                                                });
                                                                            }
                                                                        } else if (percentage >= 75 && percentage <= 99) {
                                                                            if (dptemailStatus != 'halfup') {
                                                                                var body = cmpName + 's sub-department ' + detail.subDeptName + ' of department ' + dptName + ' has  worked percentage 75%';
                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        subMeterDashboard.update({
                                                                                            'subDepartments._id': detail._id
                                                                                        }, {
                                                                                            $set: {
                                                                                                'subDepartments.$.emailStatus': 'half'
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, dataUp) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                });
                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        console.log("mail to " + email1);
                                                                                    }
                                                                                });
                                                                            }
                                                                        } else if (percentage >= 100) {
                                                                            if (dptemailStatus != 'full') {
                                                                                var body = cmpName + 's sub-department ' + detail.subDeptName + ' of department ' + dptName + ' has  worked percentage 100%';
                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        subMeterDashboard.update({
                                                                                            'subDepartments._id': detail._id
                                                                                        }, {
                                                                                            $set: {
                                                                                                'subDepartments.$.emailStatus': 'half'
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, dataUp) {
                                                                                            if (err) {
                                                                                                console.log(err);
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                });
                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        console.log("mail to " + email1);
                                                                                    }
                                                                                });
                                                                            }
                                                                        }
                                                                    });
                                                                }
                                                            });
                                                        });
                                                    });
                                                }
                                            });
                                            emailalerts.findOne({
                                                'companyId': companyId,
                                                emailType: 'working alerts'
                                            }).exec(function(err, emailDetail) {
                                                if (emailDetail != null) {
                                                    emailDetail.email.forEach(function(emails) {
                                                        var percentage = parseInt(permain);
                                                        var email = emails;
                                                        var subject = 'work alerts';
                                                        if (percentage >= 50 && percentage <= 74) {
                                                            if (emailStatus != 'half') {
                                                                var body = cmpName + ' has worked percentage 50%';
                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                    if (output == false) {
                                                                        // console.log('err');
                                                                    } else {
                                                                        meterDashboard.update({
                                                                            '_id': id
                                                                        }, {
                                                                            $set: {
                                                                                emailStatus: 'half'
                                                                            }
                                                                        }, {
                                                                            upsert: false,
                                                                            new: false
                                                                        }, function(err, dataUp) {
                                                                            if (err) {
                                                                                // console.log(err);
                                                                            }
                                                                        });
                                                                    }
                                                                });
                                                                var email1 = 'barnie@tme.co.nz';
                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                    if (output == false) {
                                                                        // console.log('err');
                                                                    } else {
                                                                        console.log("mail to " + email1);
                                                                    }
                                                                });

                                                            }
                                                        } else if (percentage >= 75 && percentage <= 99) {
                                                            if (emailStatus != 'halfup') {
                                                                var body = cmpName + ' has worked percentage 75%';
                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                    if (output == false) {
                                                                        // console.log('err');
                                                                    } else {
                                                                        meterDashboard.update({
                                                                            '_id': id
                                                                        }, {
                                                                            $set: {
                                                                                emailStatus: 'halfup'
                                                                            }
                                                                        }, {
                                                                            upsert: false,
                                                                            new: false
                                                                        }, function(err, dataUp) {
                                                                            if (err) {
                                                                                console.log(err);
                                                                            }
                                                                        });
                                                                    }
                                                                });
                                                                var email1 = 'barnie@tme.co.nz';
                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                    if (output == false) {
                                                                        // console.log('err');
                                                                    } else {
                                                                        console.log("mail to " + email1);
                                                                    }
                                                                });
                                                            }
                                                        } else if (percentage >= 100) {
                                                            if (emailStatus != 'full') {
                                                                var body = cmpName + ' has worked percentage 100%';
                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                    if (output == false) {
                                                                        // console.log('err');
                                                                    } else {
                                                                        meterDashboard.update({
                                                                            '_id': id
                                                                        }, {
                                                                            $set: {
                                                                                emailStatus: 'full'
                                                                            }
                                                                        }, {
                                                                            upsert: false,
                                                                            new: false
                                                                        }, function(err, dataUp) {
                                                                            if (err) {
                                                                                console.log(err);
                                                                            }
                                                                        });
                                                                    }
                                                                });
                                                                var email1 = 'barnie@tme.co.nz';
                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                    if (output == false) {
                                                                        // console.log('err');
                                                                    } else {
                                                                        console.log("mail to " + email1);
                                                                    }
                                                                });
                                                            }
                                                        }
                                                        if (workedHoursData != 0 && allocatedHours != 0) {
                                                            var total = workedHoursData / allocatedHours;
                                                            var per = total * 100;
                                                            meterDashboard.update({
                                                                'departments._id': dpId,
                                                                '_id': id
                                                            }, {
                                                                $set: {
                                                                    'departments.$.percentageUsed': parseInt(per)
                                                                }
                                                            }, {
                                                                upsert: false,
                                                                new: false
                                                            }, function(err, data) {
                                                                if (err) {
                                                                    // console.log(err);
                                                                } else {
                                                                    if (percentage >= 50 && percentage <= 74) {
                                                                        if (dptemailStatus != 'half') {
                                                                            var body = cmpName + ' department ' + dptName + ' has  worked percentage 50%';
                                                                            // console.log(body);
                                                                            emailfn.send_mail(email, subject, body, function(output) {
                                                                                if (output == false) {
                                                                                    // console.log('err');
                                                                                } else {
                                                                                    console.log('mail sent');
                                                                                    //emailStatus
                                                                                    meterDashboard.update({
                                                                                        'departments._id': dpId,
                                                                                        '_id': id
                                                                                    }, {
                                                                                        $set: {
                                                                                            'departments.$.emailStatus': 'half'
                                                                                        }
                                                                                    }, {
                                                                                        upsert: false,
                                                                                        new: false
                                                                                    }, function(err, dataUp) {
                                                                                        if (err) {
                                                                                            // console.log(err);
                                                                                        }
                                                                                    });
                                                                                }
                                                                            });
                                                                            var email1 = 'barnie@tme.co.nz';
                                                                            emailfn.send_mail(email1, subject, body, function(output) {
                                                                                if (output == false) {
                                                                                    // console.log('err');
                                                                                } else {
                                                                                    console.log("mail to " + email1);
                                                                                }
                                                                            });
                                                                        }
                                                                    } else if (percentage >= 75 && percentage <= 99) {
                                                                        if (dptemailStatus != 'halfup') {
                                                                            var body = cmpName + ' department ' + dptName + ' has  worked percentage 75%';
                                                                            // console.log(body);
                                                                            emailfn.send_mail(email, subject, body, function(output) {
                                                                                if (output == false) {
                                                                                    console.log('err');
                                                                                } else {
                                                                                    meterDashboard.update({
                                                                                        'departments._id': dpId,
                                                                                        '_id': id
                                                                                    }, {
                                                                                        $set: {
                                                                                            'departments.$.emailStatus': 'halfup'
                                                                                        }
                                                                                    }, {
                                                                                        upsert: false,
                                                                                        new: false
                                                                                    }, function(err, dataUp) {
                                                                                        if (err) {
                                                                                            console.log(err);
                                                                                        }
                                                                                    });
                                                                                }
                                                                            });
                                                                            var email1 = 'barnie@tme.co.nz';
                                                                            emailfn.send_mail(email1, subject, body, function(output) {
                                                                                if (output == false) {
                                                                                    console.log('err');
                                                                                } else {
                                                                                    console.log("mail to " + email1);
                                                                                }
                                                                            });
                                                                        }
                                                                    } else if (percentage >= 100) {
                                                                        if (dptemailStatus != 'full') {
                                                                            var body = cmpName + ' department ' + dptName + ' has  worked percentage 100%';
                                                                            // console.log(body);
                                                                            emailfn.send_mail(email, subject, body, function(output) {
                                                                                if (output == false) {
                                                                                    console.log('err');
                                                                                } else {
                                                                                    meterDashboard.update({
                                                                                        'departments._id': dpId,
                                                                                        '_id': id
                                                                                    }, {
                                                                                        $set: {
                                                                                            'departments.$.emailStatus': 'full'
                                                                                        }
                                                                                    }, {
                                                                                        upsert: false,
                                                                                        new: false
                                                                                    }, function(err, dataUp) {
                                                                                        if (err) {
                                                                                            // console.log(err);
                                                                                        }
                                                                                    });
                                                                                }
                                                                            });
                                                                            var email1 = 'barnie@tme.co.nz';
                                                                            emailfn.send_mail(email1, subject, body, function(output) {
                                                                                if (output == false) {
                                                                                    console.log('err');
                                                                                } else {
                                                                                    console.log("mail to " + email1);
                                                                                }
                                                                            });
                                                                        }
                                                                    }
                                                                }
                                                            })
                                                        }
                                                    });
                                                }
                                            });
                                        }
                                    });
                                    callbacks(true);
                                }
                            });
                        });
                    } else {
                        cbdept();
                    }
                });
            }
        })
    });
}

/* sales calculation */
function salesCalculationMain(start, end, companyId, deptId, departName, callback) {
    console.log("main sales calculation +-*%");
    console.log("dept name" + departName);
    console.log("start " + start);
    console.log("end " + end);
    meterDashboard.find({
        "date": {
            $gte: start,
            $lte: end
        },
        "companyId": companyId
    }, {
        "departments": {
            $elemMatch: {
                "departmentId": deptId
            }
        }
    }, function(err, salesData) {
        console.log("length " + salesData.length);
        // console.log(salesData);
        var mainCount = 0;
        totalActualSales = 0,
            totalBudgetedSales = 0;
        if (salesData.length > 0) {
            async.eachSeries(salesData, function(main, cbDash) {
                mainCount++;
                console.log("departments " + main.departments.length);
                if (main.departments.length > 0) {
                    main.departments.forEach(function(sub) {
                        totalBudgetedSales += parseFloat(sub.budgetedSales);
                        totalActualSales += parseFloat(sub.actualSales);

                        console.log(salesData.length, mainCount);
                        if (salesData.length === mainCount) {
                            console.log("calc done");
                            console.log(totalActualSales);
                            console.log(totalBudgetedSales);
                            callback(totalActualSales, totalBudgetedSales);
                        } else {
                            cbDash();
                        }
                    });
                } else {
                    callback(totalActualSales, totalBudgetedSales);
                }
            });
        } else {
            callback(totalActualSales, totalBudgetedSales);
        }
    });
}

/*Sales for meter dashboard */
function calculateSalesForMeter(companyId, dashboardId, dept_Id, subDeptBudgetedSales, subDeptActualSales, callback) {
    console.log("set meter sales start");
    console.log(dept_Id);
    meterDashboard.update({
        '_id': dashboardId,
        'companyId': companyId,
        'departments._id': dept_Id
    }, {
        $set: {
            'departments.$.budgetedSales': subDeptBudgetedSales,
            'departments.$.actualSales': subDeptActualSales
        }
    }, {
        upsert: false,
        new: false
    }, function(err, dataUp) {
        if (!err) {
            meterDashboard.findOne({
                '_id': dashboardId,
                'companyId': companyId,
            }, function(err, dashboardData) {
                var dashboardId = dashboardData._id;
                var companyId = dashboardData.companyId;
                var myDate = dashboardData.date;
                var departmentList = dashboardData.departments;

                var totalActualSales = 0,
                    totalBudgetedSales = 0,
                    deptCount = 0;

                async.eachSeries(departmentList, function(dept, cbdept) {
                    deptCount++;
                    totalActualSales += parseFloat(dept.actualSales);
                    totalBudgetedSales += parseFloat(dept.budgetedSales);

                    if (deptCount === departmentList.length) {
                        meterDashboard.update({
                            '_id': dashboardId,
                            'companyId': companyId,
                        }, {
                            $set: {
                                'budgetedSales': totalBudgetedSales,
                                'actualSales': totalActualSales,
                            }
                        }, {
                            upsert: false,
                            new: false
                        }, function(err, dataUp) {
                            if (!err) {
                                callback(true);
                            }
                        });
                    } else {
                        cbdept();
                    }
                });
            });
        }
    });
}

/*Dashboard Work*/
function calculateTotalWorked(companyId, start, end) {
    console.log("------------------ calculateTotalWorked....");
    async.waterfall([function(callback) {
            Dashboard.find({
                'companyId': companyId,
                'weekStart': start,
                'weekEnd': end
            }).exec(function(err, dashboardData) {
                var deptCount = 0;
                var uniqueDeptList = [];
                var departmentList = dashboardData[0].departments;
                if (departmentList.length > 0) {
                    async.eachSeries(departmentList, function(dept, cbdept) {
                        deptCount++;
                        var departName = dept.departmentName;
                        var dept_Id = dept._id;

                        var DepartmentAllocatedHours = 0;
                        var DepartmentWorkedHours = 0;
                        var DepartmentMoneySpent = 0;
                        var DepartmentBudgetedWages = 0;

                        // console.log("departName..."+departName);
                        // console.log("DepartmentBudgetedWages..........."+DepartmentBudgetedWages);
                        // cbdept();
                        var lastDate = end;
                        if (dashboardData[0].currentDayCal) {
                            lastDate = Moment.utc(new Date()).format("YYYY-MM-DD");
                        }
                        Attendance.find({
                            'companyId': companyId,
                            "date": {
                                $gte: new Date(start),
                                $lte: new Date(lastDate)
                            },
                            'active': true,
                            'department': departName
                        }).exec(function(err, attendanceData) {
                            // console.log("I am here "+attendanceData.length);
                            if (attendanceData.length > 0) {
                                var countAtn = 0;
                                async.eachSeries(attendanceData, function(attendance, cbA) {
                                    countAtn++;
                                    var dt1 = Moment.utc(attendance.shiftStart).format("DD-MM-YYYY HH:mm:sss");
                                    var dt2 = Moment.utc(attendance.shiftFinish).format("DD-MM-YYYY HH:mm:sss");
                                    var ms;
                                    if (attendance.shift != "not Working") {
                                        ms = Moment.utc(Moment(dt2, "DD/MM/YYYY HH:mm:ss").diff(Moment(dt1, "DD/MM/YYYY HH:mm:ss"))).format("HH:mm:ss");
                                        if (attendance.breakk && !attendance.breakIn) {
                                            var calculatedHours = getSeconds(ms) - getSeconds(attendance.breakk);
                                            ms = secToFormatted(calculatedHours);
                                        }
                                    } else {
                                        ms = '00:00:00';
                                    }

                                    //console.log(attendance._id+"...........attendance.totalRounded...."+attendance.totalRounded);
                                    var totalAtn = attendance.totalRounded;
                                    var hoursMinutes = totalAtn.split(/[.:]/);
                                    var hours = parseFloat(hoursMinutes[0], 10);
                                    var minutes = hoursMinutes[1] ? parseFloat(hoursMinutes[1], 10) : 0;
                                    var totalHover = hours + (minutes / 60);
                                    var hoverlyRate = 0;
                                    if (attendance.hourlyRate != '' && attendance.active === true) {
                                        hoverlyRate = parseFloat(attendance.hourlyRate);
                                    }
                                    var hoursMinutes1 = ms.split(/[.:]/);
                                    var hours1 = parseFloat(hoursMinutes1[0], 10);
                                    var minutes1 = hoursMinutes1[1] ? parseFloat(hoursMinutes1[1], 10) : 0;
                                    var totalHover1 = hours1 + (minutes1 / 60);
                                    if (hoverlyRate && totalHover1)
                                        DepartmentBudgetedWages += totalHover1 * hoverlyRate;
                                    if (totalHover && hoverlyRate)
                                        DepartmentMoneySpent += totalHover * hoverlyRate;
                                    DepartmentWorkedHours += getSeconds(totalAtn);

                                    DepartmentAllocatedHours = DepartmentAllocatedHours + getSeconds(ms);


                                    // DeptAllocatedHours+=getSeconds(ms);
                                    if (countAtn == attendanceData.length) {
                                        console.log("---------------********log Department************----------------")
                                        console.log("dept_Id....................." + dept_Id);
                                        console.log("ms ........................." + ms);
                                        console.log("department name............." + departName);
                                        console.log("DepartmentAllocatedHours...." + secToFormatted(DepartmentAllocatedHours));
                                        console.log("DepartmentWorkedHours......." + secToFormatted(DepartmentWorkedHours));
                                        salesCalculationMain(start, end, companyId, dept.departmentId, departName, function(actualS, budgetedS) {
                                            console.log("update sales data...");
                                            Dashboard.update({
                                                'departments._id': dept_Id
                                            }, {
                                                $set: {
                                                    'departments.$.workedHours': secToFormatted(DepartmentWorkedHours),
                                                    'departments.$.moneySpent': DepartmentMoneySpent,
                                                    'departments.$.allocatedHours': secToFormatted(DepartmentAllocatedHours),
                                                    'departments.$.budgetedWages': DepartmentBudgetedWages,
                                                    "departments.$.actualSales": actualS,
                                                    "departments.$.budgetedSales": budgetedS,
                                                }
                                            }, {
                                                upsert: false,
                                                new: false
                                            }, function(err, dataUp) {
                                                // console.log("erraaaaaaaaaaaaaaaaaaaaaaaaaaaa");
                                                console.log(dataUp);
                                                if (deptCount == departmentList.length) {
                                                    callback(null, 'one', 'two');
                                                }
                                                cbdept();
                                            });
                                        });
                                    } else {
                                        cbA();
                                    }
                                });
                            } else {

                                Dashboard.update({
                                    'departments._id': dept_Id
                                }, {
                                    $set: {
                                        'departments.$.workedHours': secToFormatted(0),
                                        'departments.$.moneySpent': 0,
                                        // 'departments.$.allocatedHours': secToFormatted(DepartmentAllocatedHours),
                                        'departments.$.budgetedWages': 0,
                                        "departments.$.actualSales": 0,
                                        "departments.$.budgetedSales": 0,
                                    }
                                }, {
                                    upsert: false,
                                    new: false
                                }, function(err, dataUp) {
                                    // console.log("erraaaaaaaaaaaaaaaaaaaaaaaaaaaa");
                                    console.log(dataUp);
                                    if (deptCount == departmentList.length) {
                                        callback(null, 'one', 'two');
                                    }
                                    cbdept();
                                });
                                // if (deptCount == departmentList.length) {
                                //     callback(null, 'one', 'two');
                                // }
                                // cbdept();
                            }
                        });
                    });
                } else {
                    callback(null, 'one', 'two');
                }
            });
        },
        function(arg1, arg2, callback) {
            calculateDateWiseData(function(result) {
                if (result) {
                    console.log("result");
                    console.log(result);
                    callback(null, 'done');
                }
            });
        },
    ], function(err, result) {
        console.log("next....");
        Dashboard.findOne({
            'companyId': companyId,
            'weekStart': start,
            'weekEnd': end
        }).exec(function(err, data) {
            if (data) {
                // console.log(data.length);
                var id = data._id;
                var departmentList = data.departments;
                var count = 0;

                var mainAllocatedHours = 0;
                var mainActualSales = 0;
                var mainBudgetedSales = 0;
                var mainWorkedHours = 0;
                var mainBudgetedWages = 0;
                var mainMoneySpent = 0;

                var emailStatus = data.emailStatus;
                var cmpName = data.companyName;

                async.eachSeries(departmentList, function(dept, cbdept) {
                    // console.log(dept);
                    count++;
                    // console.log(departmentList.length);
                    var dpId = dept._id;
                    var dptName = dept.departmentName;
                    var dptemailStatus = dept.emailStatus;

                    // console.log("22222222222");
                    var permain1 = 00;
                    if (getSeconds(dept.allocatedHours) != 0) {
                        var total = getSeconds(dept.workedHours) / getSeconds(dept.allocatedHours);
                        var per = total * 100;
                        permain1 = Math.round(per * 100) / 100;
                    }
                    // console.log("permain1............"+permain1);
                    Dashboard.update({
                        'departments._id': dpId,
                        '_id': id
                    }, {
                        $set: {
                            'departments.$.percentageUsed': permain1
                        }
                    }, {
                        upsert: false,
                        new: false
                    }, function(err, data) {
                        if (err) {
                            console.log(err);
                        } else {
                            emailalerts.findOne({
                                'companyId': companyId,
                                emailType: 'working alerts'
                            }).exec(function(err, emailDetail) {
                                if (emailDetail != null) {
                                    emailDetail.email.forEach(function(emails) {
                                        var percentage = parseInt(per);
                                        var email = emails;
                                        var subject = 'work alerts';
                                        if (percentage >= 50 && percentage <= 74) {
                                            if (dptemailStatus != 'half') {
                                                var body = cmpName + ' department ' + dptName + ' has  worked percentage 50%';
                                                emailfn.send_mail(email, subject, body, function(output) {
                                                    if (output == false) {
                                                        console.log('err');
                                                    } else {
                                                        console.log('mail sent');
                                                        Dashboard.update({
                                                            'departments._id': dpId,
                                                            '_id': id
                                                        }, {
                                                            $set: {
                                                                'departments.$.emailStatus': 'half'
                                                            }
                                                        }, {
                                                            upsert: false,
                                                            new: false
                                                        }, function(err, dataUp) {
                                                            if (err) {
                                                                console.log(err);
                                                            }
                                                        });
                                                    }
                                                });
                                                var email1 = 'barnie@tme.co.nz';
                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                    if (output == false) {
                                                        console.log('err');
                                                    } else {
                                                        console.log("mail to " + email1);
                                                    }
                                                });
                                            }
                                        } else if (percentage >= 75 && percentage <= 99) {
                                            // console.log("percentage >= 75 && percentage<= 99");
                                            if (dptemailStatus != 'halfup') {
                                                // console.log("dptemailStatus != 'half'");
                                                var body = cmpName + ' department ' + dptName + ' has  worked percentage 75%';
                                                // console.log(body);
                                                emailfn.send_mail(email, subject, body, function(output) {
                                                    if (output == false) {
                                                        console.log('err');
                                                    } else {
                                                        Dashboard.update({
                                                            'departments._id': dpId,
                                                            '_id': id
                                                        }, {
                                                            $set: {
                                                                'departments.$.emailStatus': 'halfup'
                                                            }
                                                        }, {
                                                            upsert: false,
                                                            new: false
                                                        }, function(err, dataUp) {
                                                            if (err) {
                                                                console.log(err);
                                                            }
                                                        });
                                                    }
                                                });
                                                var email1 = 'barnie@tme.co.nz';
                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                    if (output == false) {
                                                        console.log('err');
                                                    } else {
                                                        console.log("mail to " + email1);
                                                    }
                                                });
                                            }
                                        } else if (percentage >= 100) {
                                            // console.log("percentage == 100");
                                            if (dptemailStatus != 'full') {
                                                // console.log("dptemailStatus != 'full'");
                                                var body = cmpName + ' department ' + dptName + ' has  worked percentage 100%';
                                                // console.log(body);
                                                emailfn.send_mail(email, subject, body, function(output) {
                                                    if (output == false) {
                                                        console.log('err');
                                                    } else {
                                                        Dashboard.update({
                                                            'departments._id': dpId,
                                                            '_id': id
                                                        }, {
                                                            $set: {
                                                                'departments.$.emailStatus': 'full'
                                                            }
                                                        }, {
                                                            upsert: false,
                                                            new: false
                                                        }, function(err, dataUp) {
                                                            if (err) {
                                                                console.log(err);
                                                            }
                                                        });
                                                    }
                                                });
                                                var email1 = 'barnie@tme.co.nz';
                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                    if (output == false) {
                                                        console.log('err');
                                                    } else {
                                                        console.log("mail to " + email1);
                                                    }
                                                });
                                            }
                                        }
                                    });
                                }
                            });
                        }
                    });

                    mainAllocatedHours += getSeconds(dept.allocatedHours);
                    // console.log("22222222222");
                    mainWorkedHours += getSeconds(dept.workedHours);
                    mainBudgetedWages += parseInt(dept.budgetedWages);
                    mainMoneySpent += parseInt(dept.moneySpent);
                    mainActualSales += parseFloat(dept.actualSales);
                    mainBudgetedSales += parseFloat(dept.budgetedSales);

                    // console.log("mainBudgetedWages..."+mainBudgetedWages);
                    if (departmentList.length == count) {
                        async.waterfall([function(next) {
                            var lastDate = end;
                            if (data.currentDayCal) {
                                lastDate = Moment.utc(new Date()).format("YYYY-MM-DD");
                            }
                            Attendance.find({
                                'companyId': companyId,
                                "date": {
                                    $gte: new Date(start),
                                    $lte: new Date(lastDate)
                                },
                                active: true,
                                'department': ''
                            }).exec(function(err, attendanceData) {
                                console.log("not assinged department and subdepartment to the employee...");
                                console.log(attendanceData.length);
                                if (attendanceData.length > 0) {
                                    var countAtn = 0;
                                    attendanceData.forEach(function(attendance) {
                                        countAtn++;
                                        var dt1 = Moment.utc(attendance.shiftStart).format("DD-MM-YYYY HH:mm:sss");
                                        var dt2 = Moment.utc(attendance.shiftFinish).format("DD-MM-YYYY HH:mm:sss");
                                        if (attendance.shift != "not Working") {
                                            ms = Moment.utc(Moment(dt2, "DD/MM/YYYY HH:mm:ss").diff(Moment(dt1, "DD/MM/YYYY HH:mm:ss"))).format("HH:mm:ss");
                                            if (attendance.breakk && !attendance.breakIn) {
                                                var calculatedHours = getSeconds(ms) - getSeconds(attendance.breakk);
                                                ms = secToFormatted(calculatedHours);
                                            }
                                        } else {
                                            ms = '00:00:00';
                                        }
                                        var totalAtn = attendance.totalRounded;
                                        mainAllocatedHours = mainAllocatedHours + getSeconds(ms)
                                        mainWorkedHours += getSeconds(totalAtn);

                                        var hoursMinutes1 = ms.split(/[.:]/);
                                        var hours1 = parseInt(hoursMinutes1[0], 10);
                                        var minutes1 = hoursMinutes1[1] ? parseInt(hoursMinutes1[1], 10) : 0;
                                        var totalHover1 = hours1 + (minutes1 / 60);
                                        var hoverlyRate = 0;
                                        if (attendance.hourlyRate != 'NaN' && attendance.hourlyRate != '' && attendance.active === true) {
                                            hoverlyRate = parseFloat(attendance.hourlyRate);
                                        }
                                        if (hoverlyRate && totalHover1)
                                            mainBudgetedWages += totalHover1 * hoverlyRate;

                                        var totalAtn = attendance.totalRounded;
                                        var hoursMinutes = totalAtn.split(/[.:]/);
                                        var hours = parseInt(hoursMinutes[0], 10);
                                        var minutes = hoursMinutes[1] ? parseInt(hoursMinutes[1], 10) : 0;
                                        var totalHover = hours + (minutes / 60);
                                        if (totalHover && hoverlyRate)
                                            mainMoneySpent += totalHover * hoverlyRate;
                                        if (attendanceData.length == countAtn) {
                                            // console.log("mainAllocatedHours......."+secToFormatted(mainAllocatedHours));
                                            // console.log("last mainBudgetedWages..."+mainBudgetedWages);
                                            Dashboard.update({
                                                '_id': id
                                            }, {
                                                $set: {
                                                    'workedHours': secToFormatted(mainWorkedHours),
                                                    'moneySpent': mainMoneySpent,
                                                    'allocatedHours': secToFormatted(mainAllocatedHours),
                                                    'budgetedWages': mainBudgetedWages,
                                                    'actualSales': mainActualSales,
                                                    'budgetedSales': mainBudgetedSales,
                                                    'calfalg': true
                                                }
                                            }, {
                                                upsert: false,
                                                new: false
                                            }, function(err, dataUp) {
                                                if (err) {
                                                    // console.log(err);
                                                } else {
                                                    var permain1 = 00;
                                                    if (mainAllocatedHours != 0) {
                                                        var totalmain = mainWorkedHours / mainAllocatedHours;
                                                        var permain = totalmain * 100;
                                                        permain1 = Math.round(permain * 100) / 100;
                                                    }
                                                    Dashboard.update({
                                                        '_id': id
                                                    }, {
                                                        $set: {
                                                            'percentageUsed': permain1
                                                        }
                                                    }, {
                                                        upsert: false,
                                                        new: false
                                                    }, function(err, dataUp) {
                                                        if (err) {
                                                            // console.log(err);
                                                        } else {
                                                            var channel = 'timecloud.dashboard.update.' + id;
                                                            wamp.getSession().publish(channel, [{
                                                                'company': companyId
                                                            }]);
                                                            console.log("published dashboard not assinged department and subdepartment ---> " + channel);

                                                            subDashboard.findOne({
                                                                'companyId': companyId,
                                                                'weekStart': start,
                                                                'weekEnd': end
                                                            }, function(err, subDepartment) {
                                                                if (subDepartment != null) {
                                                                    subDepartment.subDepartments.forEach(function(detail) {
                                                                        var allocatedHours = 0;
                                                                        var workedHoursData = 0;
                                                                        if (detail.workedHours) {
                                                                            workedHoursData = getSeconds(detail.workedHours);
                                                                        }
                                                                        if (detail.allocatedHours != '') {
                                                                            allocatedHours = getSeconds(detail.allocatedHours);
                                                                        }
                                                                        var percentage1 = 00;
                                                                        if (allocatedHours != 0) {
                                                                            var total = workedHoursData / allocatedHours;
                                                                            var per = total * 100;
                                                                            percentage1 = Math.round(per * 100) / 100;
                                                                        }
                                                                        subDashboard.update({
                                                                            'subDepartments._id': detail._id
                                                                        }, {
                                                                            $set: {
                                                                                'subDepartments.$.percentageUsed': percentage1
                                                                            }
                                                                        }, {
                                                                            upsert: false,
                                                                            new: false
                                                                        }, function(err, dataUp) {
                                                                            emailalerts.findOne({
                                                                                'companyId': companyId,
                                                                                emailType: 'working alerts'
                                                                            }).exec(function(err, emailDetail) {
                                                                                if (emailDetail != null) {
                                                                                    emailDetail.email.forEach(function(emails) {
                                                                                        var percentage = parseInt(per);
                                                                                        var email = emails;
                                                                                        var subject = 'work alerts';
                                                                                        if (percentage >= 50 && percentage <= 74) {
                                                                                            if (dptemailStatus != 'half') {
                                                                                                var body = cmpName + 's sub-department ' + detail.subDeptName + ' of department ' + dptName + ' has  worked percentage 50%';
                                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                                    if (output == false) {
                                                                                                        // console.log('err');
                                                                                                    } else {
                                                                                                        subDashboard.update({
                                                                                                            'subDepartments._id': detail._id
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                'subDepartments.$.emailStatus': 'half'
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, dataUp) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        });
                                                                                                    }
                                                                                                });
                                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                                    if (output == false) {
                                                                                                        // console.log('err');
                                                                                                    } else {
                                                                                                        // console.log("mail to "+email1);
                                                                                                    }
                                                                                                });
                                                                                            }
                                                                                        } else if (percentage >= 75 && percentage <= 99) {
                                                                                            if (dptemailStatus != 'halfup') {
                                                                                                var body = cmpName + 's sub-department ' + detail.subDeptName + ' of department ' + dptName + ' has  worked percentage 75%';
                                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                                    if (output == false) {
                                                                                                        // console.log('err');
                                                                                                    } else {
                                                                                                        subDashboard.update({
                                                                                                            'subDepartments._id': detail._id
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                'subDepartments.$.emailStatus': 'half'
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, dataUp) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        });
                                                                                                    }
                                                                                                });
                                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                                    if (output == false) {
                                                                                                        // console.log('err');
                                                                                                    } else {
                                                                                                        // console.log("mail to "+email1);
                                                                                                    }
                                                                                                });
                                                                                            }
                                                                                        } else if (percentage >= 100) {
                                                                                            if (dptemailStatus != 'full') {
                                                                                                var body = cmpName + 's sub-department ' + detail.subDeptName + ' of department ' + dptName + ' has  worked percentage 100%';
                                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                                    if (output == false) {
                                                                                                        // console.log('err');
                                                                                                    } else {
                                                                                                        subDashboard.update({
                                                                                                            'subDepartments._id': detail._id
                                                                                                        }, {
                                                                                                            $set: {
                                                                                                                'subDepartments.$.emailStatus': 'half'
                                                                                                            }
                                                                                                        }, {
                                                                                                            upsert: false,
                                                                                                            new: false
                                                                                                        }, function(err, dataUp) {
                                                                                                            if (err) {
                                                                                                                // console.log(err);
                                                                                                            }
                                                                                                        });
                                                                                                    }
                                                                                                });
                                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                                    if (output == false) {
                                                                                                        // console.log('err');
                                                                                                    } else {
                                                                                                        // console.log("mail to "+email1);
                                                                                                    }
                                                                                                });
                                                                                            }
                                                                                        }
                                                                                    });
                                                                                }
                                                                            });
                                                                        });
                                                                    });
                                                                }
                                                            });
                                                            emailalerts.findOne({
                                                                'companyId': companyId,
                                                                emailType: 'working alerts'
                                                            }).exec(function(err, emailDetail) {
                                                                if (emailDetail != null) {
                                                                    emailDetail.email.forEach(function(emails) {
                                                                        var percentage = parseInt(permain);
                                                                        var email = emails;
                                                                        var subject = 'work alerts';
                                                                        if (percentage >= 50 && percentage <= 74) {
                                                                            if (emailStatus != 'half') {
                                                                                var body = cmpName + ' has worked percentage 50%';
                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        Dashboard.update({
                                                                                            '_id': id
                                                                                        }, {
                                                                                            $set: {
                                                                                                emailStatus: 'half'
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, dataUp) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                });
                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        // console.log("mail to "+email1);
                                                                                    }
                                                                                });

                                                                            }
                                                                        } else if (percentage >= 75 && percentage <= 99) {
                                                                            if (emailStatus != 'halfup') {
                                                                                var body = cmpName + ' has worked percentage 75%';
                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        Dashboard.update({
                                                                                            '_id': id
                                                                                        }, {
                                                                                            $set: {
                                                                                                emailStatus: 'halfup'
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, dataUp) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                });
                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        // console.log("mail to "+email1);
                                                                                    }
                                                                                });
                                                                            }
                                                                        } else if (percentage >= 100) {
                                                                            if (emailStatus != 'full') {
                                                                                var body = cmpName + ' has worked percentage 100%';
                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        Dashboard.update({
                                                                                            '_id': id
                                                                                        }, {
                                                                                            $set: {
                                                                                                emailStatus: 'full'
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, dataUp) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                });
                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        // console.log("mail to "+email1);
                                                                                    }
                                                                                });
                                                                            }
                                                                        }
                                                                        // if(workedHoursData != 0 && allocatedHours!= 0 ){
                                                                        //   var total = workedHoursData / allocatedHours;
                                                                        //   var per = total * 100;
                                                                        //   Dashboard.update({'departments._id':dpId,'_id': id},
                                                                        //     {$set: {
                                                                        //       'departments.$.percentageUsed': parseInt(per)
                                                                        //     }},{upsert: false, new: false}, function(err,data){
                                                                        //       if(err) {
                                                                        //         console.log(err);
                                                                        //       }else{
                                                                        //         if(percentage >= 50 && percentage<= 74){
                                                                        //           if(dptemailStatus != 'half'){
                                                                        //             var body = cmpName+ ' department '+ dptName +' has  worked percentage 50%';
                                                                        //             // console.log(body);
                                                                        //             emailfn.send_mail(email,subject,body,function(output){
                                                                        //               if(output == false){
                                                                        //                 // console.log('err');
                                                                        //               }else {
                                                                        //                 console.log('mail sent');
                                                                        //                 //emailStatus
                                                                        //                 Dashboard.update({'departments._id':dpId,'_id': id},
                                                                        //                   {$set: {
                                                                        //                     'departments.$.emailStatus':'half'
                                                                        //                   }},{upsert: false, new: false},function(err, dataUp){
                                                                        //                     if(err){
                                                                        //                       console.log(err);
                                                                        //                     }
                                                                        //                 });
                                                                        //               }
                                                                        //             });
                                                                        //             var email1='barnie@tme.co.nz';
                                                                        //             emailfn.send_mail(email1,subject,body,function(output){
                                                                        //               if(output == false){
                                                                        //                 // console.log('err');
                                                                        //               }else {
                                                                        //                 console.log("mail to "+email1);
                                                                        //               }
                                                                        //             });
                                                                        //           }
                                                                        //         }else if(percentage >= 75 && percentage<= 99){
                                                                        //           if(dptemailStatus != 'halfup'){
                                                                        //             var body = cmpName+ ' department '+ dptName +' has  worked percentage 75%';
                                                                        //             // console.log(body);
                                                                        //             emailfn.send_mail(email,subject,body,function(output){
                                                                        //               if(output == false){
                                                                        //                 // console.log('err');
                                                                        //               }else {
                                                                        //                 Dashboard.update({'departments._id':dpId,'_id': id},
                                                                        //                   {$set: {
                                                                        //                     'departments.$.emailStatus':'halfup'
                                                                        //                   }},{upsert: false, new: false},function(err, dataUp){
                                                                        //                     if(err){
                                                                        //                       // console.log(err);
                                                                        //                     }
                                                                        //                 });
                                                                        //               }
                                                                        //             });
                                                                        //             var email1='barnie@tme.co.nz';
                                                                        //             emailfn.send_mail(email1,subject,body,function(output){
                                                                        //               if(output == false){
                                                                        //                 // console.log('err');
                                                                        //               }else {
                                                                        //                 // console.log("mail to "+email1);
                                                                        //               }
                                                                        //             });
                                                                        //           }
                                                                        //         }else if(percentage >= 100){
                                                                        //           if(dptemailStatus != 'full'){
                                                                        //             var body = cmpName+ ' department '+ dptName +' has  worked percentage 100%';
                                                                        //             // console.log(body);
                                                                        //             emailfn.send_mail(email,subject,body,function(output){
                                                                        //               if(output == false){
                                                                        //                 // console.log('err');
                                                                        //               }else {
                                                                        //                 Dashboard.update({'departments._id':dpId,'_id': id},
                                                                        //                   {$set: {
                                                                        //                     'departments.$.emailStatus':'full'
                                                                        //                   }},{upsert: false, new: false},function(err, dataUp){
                                                                        //                     if(err){
                                                                        //                       // console.log(err);
                                                                        //                     }
                                                                        //                 });
                                                                        //               }
                                                                        //             });
                                                                        //             var email1='barnie@tme.co.nz';
                                                                        //             emailfn.send_mail(email1,subject,body,function(output){
                                                                        //               if(output == false){
                                                                        //                 // console.log('err');
                                                                        //               }else {
                                                                        //                 console.log("mail to "+email1);
                                                                        //               }
                                                                        //             });
                                                                        //           }
                                                                        //         }
                                                                        //       }
                                                                        //   })
                                                                        // }
                                                                    });
                                                                }
                                                            });
                                                        }
                                                    });
                                                }
                                            });
                                        }
                                    });
                                } else {
                                    // console.log("not any emp without assign dept...");
                                    next(null, 1);
                                }
                            });
                        }], function(next) {
                            // var totalMoney = Math.round(TotalmoneySpent * 100) /100 ;
                            Dashboard.update({
                                '_id': id
                            }, {
                                $set: {
                                    'workedHours': secToFormatted(mainWorkedHours),
                                    'moneySpent': mainMoneySpent,
                                    'allocatedHours': secToFormatted(mainAllocatedHours),
                                    'budgetedWages': mainBudgetedWages,
                                    'actualSales': mainActualSales,
                                    'budgetedSales': mainBudgetedSales,
                                    'calfalg': true
                                }
                            }, {
                                upsert: false,
                                new: false
                            }, function(err, dataUp) {
                                if (err) {
                                    // console.log(err);
                                } else {
                                    var permain1 = 00;
                                    if (mainAllocatedHours != 0) {
                                        var totalmain = mainWorkedHours / mainAllocatedHours;
                                        var permain = totalmain * 100;
                                        permain1 = Math.round(permain * 100) / 100;
                                    }
                                    Dashboard.update({
                                        '_id': id
                                    }, {
                                        $set: {
                                            'percentageUsed': permain1
                                        }
                                    }, {
                                        upsert: false,
                                        new: false
                                    }, function(err, dataUp1) {
                                        if (err) {
                                            // console.log(err);
                                        } else {
                                            console.log("before publish " + dataUp);
                                            if (dataUp) {
                                                var channel = 'timecloud.dashboard.update.' + id;
                                                wamp.getSession().publish(channel, [{
                                                    'company': companyId
                                                }]);
                                                console.log("published dashboard---> " + channel);

                                                var channel = 'timecloud.dashboard.update.' + companyId;
                                                wamp.getSession().publish(channel, [{
                                                    'company': companyId
                                                }]);
                                                console.log("published dashboard---> " + channel);
                                            }

                                            var allocatedHours = 0;
                                            var workedHoursData = 0;
                                            subDashboard.findOne({
                                                'companyId': companyId,
                                                'weekStart': start,
                                                'weekEnd': end
                                            }, function(err, subDepartment) {
                                                if (subDepartment != null) {
                                                    subDepartment.subDepartments.forEach(function(detail) {

                                                        if (detail.workedHours) {
                                                            workedHoursData = getSeconds(detail.workedHours);
                                                        }
                                                        if (detail.allocatedHours != '') {
                                                            allocatedHours = getSeconds(detail.allocatedHours);
                                                        }
                                                        var percentage1 = 00;
                                                        if (allocatedHours != 0) {
                                                            var total = workedHoursData / allocatedHours;
                                                            var per = total * 100;
                                                            percentage1 = Math.round(per * 100) / 100;
                                                        }
                                                        subDashboard.update({
                                                            'subDepartments._id': detail._id
                                                        }, {
                                                            $set: {
                                                                'subDepartments.$.percentageUsed': percentage1
                                                            }
                                                        }, {
                                                            upsert: false,
                                                            new: false
                                                        }, function(err, dataUp) {
                                                            // var dashboardChannel = 'timecloud.dashboard.update';
                                                            emailalerts.findOne({
                                                                'companyId': companyId,
                                                                emailType: 'working alerts'
                                                            }).exec(function(err, emailDetail) {
                                                                if (emailDetail != null) {
                                                                    emailDetail.email.forEach(function(emails) {
                                                                        var percentage = parseInt(per);
                                                                        var email = emails;
                                                                        var subject = 'work alerts';
                                                                        if (percentage >= 50 && percentage <= 74) {
                                                                            if (dptemailStatus != 'half') {
                                                                                var body = cmpName + 's sub-department ' + detail.subDeptName + ' of department ' + dptName + ' has  worked percentage 50%';
                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        subDashboard.update({
                                                                                            'subDepartments._id': detail._id
                                                                                        }, {
                                                                                            $set: {
                                                                                                'subDepartments.$.emailStatus': 'half'
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, dataUp) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                });
                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        console.log("mail to " + email1);
                                                                                    }
                                                                                });
                                                                            }
                                                                        } else if (percentage >= 75 && percentage <= 99) {
                                                                            if (dptemailStatus != 'halfup') {
                                                                                var body = cmpName + 's sub-department ' + detail.subDeptName + ' of department ' + dptName + ' has  worked percentage 75%';
                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        subDashboard.update({
                                                                                            'subDepartments._id': detail._id
                                                                                        }, {
                                                                                            $set: {
                                                                                                'subDepartments.$.emailStatus': 'half'
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, dataUp) {
                                                                                            if (err) {
                                                                                                // console.log(err);
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                });
                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        console.log("mail to " + email1);
                                                                                    }
                                                                                });
                                                                            }
                                                                        } else if (percentage >= 100) {
                                                                            if (dptemailStatus != 'full') {
                                                                                var body = cmpName + 's sub-department ' + detail.subDeptName + ' of department ' + dptName + ' has  worked percentage 100%';
                                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        subDashboard.update({
                                                                                            'subDepartments._id': detail._id
                                                                                        }, {
                                                                                            $set: {
                                                                                                'subDepartments.$.emailStatus': 'half'
                                                                                            }
                                                                                        }, {
                                                                                            upsert: false,
                                                                                            new: false
                                                                                        }, function(err, dataUp) {
                                                                                            if (err) {
                                                                                                console.log(err);
                                                                                            }
                                                                                        });
                                                                                    }
                                                                                });
                                                                                var email1 = 'barnie@tme.co.nz';
                                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                                    if (output == false) {
                                                                                        // console.log('err');
                                                                                    } else {
                                                                                        console.log("mail to " + email1);
                                                                                    }
                                                                                });
                                                                            }
                                                                        }
                                                                    });
                                                                }
                                                            });
                                                        });
                                                    });
                                                }
                                            });
                                            emailalerts.findOne({
                                                'companyId': companyId,
                                                emailType: 'working alerts'
                                            }).exec(function(err, emailDetail) {
                                                if (emailDetail != null) {
                                                    emailDetail.email.forEach(function(emails) {
                                                        var percentage = parseInt(permain);
                                                        var email = emails;
                                                        var subject = 'work alerts';
                                                        if (percentage >= 50 && percentage <= 74) {
                                                            if (emailStatus != 'half') {
                                                                var body = cmpName + ' has worked percentage 50%';
                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                    if (output == false) {
                                                                        // console.log('err');
                                                                    } else {
                                                                        Dashboard.update({
                                                                            '_id': id
                                                                        }, {
                                                                            $set: {
                                                                                emailStatus: 'half'
                                                                            }
                                                                        }, {
                                                                            upsert: false,
                                                                            new: false
                                                                        }, function(err, dataUp) {
                                                                            if (err) {
                                                                                // console.log(err);
                                                                            }
                                                                        });
                                                                    }
                                                                });
                                                                var email1 = 'barnie@tme.co.nz';
                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                    if (output == false) {
                                                                        // console.log('err');
                                                                    } else {
                                                                        console.log("mail to " + email1);
                                                                    }
                                                                });

                                                            }
                                                        } else if (percentage >= 75 && percentage <= 99) {
                                                            if (emailStatus != 'halfup') {
                                                                var body = cmpName + ' has worked percentage 75%';
                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                    if (output == false) {
                                                                        // console.log('err');
                                                                    } else {
                                                                        Dashboard.update({
                                                                            '_id': id
                                                                        }, {
                                                                            $set: {
                                                                                emailStatus: 'halfup'
                                                                            }
                                                                        }, {
                                                                            upsert: false,
                                                                            new: false
                                                                        }, function(err, dataUp) {
                                                                            if (err) {
                                                                                console.log(err);
                                                                            }
                                                                        });
                                                                    }
                                                                });
                                                                var email1 = 'barnie@tme.co.nz';
                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                    if (output == false) {
                                                                        // console.log('err');
                                                                    } else {
                                                                        console.log("mail to " + email1);
                                                                    }
                                                                });
                                                            }
                                                        } else if (percentage >= 100) {
                                                            if (emailStatus != 'full') {
                                                                var body = cmpName + ' has worked percentage 100%';
                                                                emailfn.send_mail(email, subject, body, function(output) {
                                                                    if (output == false) {
                                                                        // console.log('err');
                                                                    } else {
                                                                        Dashboard.update({
                                                                            '_id': id
                                                                        }, {
                                                                            $set: {
                                                                                emailStatus: 'full'
                                                                            }
                                                                        }, {
                                                                            upsert: false,
                                                                            new: false
                                                                        }, function(err, dataUp) {
                                                                            if (err) {
                                                                                console.log(err);
                                                                            }
                                                                        });
                                                                    }
                                                                });
                                                                var email1 = 'barnie@tme.co.nz';
                                                                emailfn.send_mail(email1, subject, body, function(output) {
                                                                    if (output == false) {
                                                                        // console.log('err');
                                                                    } else {
                                                                        console.log("mail to " + email1);
                                                                    }
                                                                });
                                                            }
                                                        }
                                                        if (workedHoursData != 0 && allocatedHours != 0) {
                                                            var total = workedHoursData / allocatedHours;
                                                            var per = total * 100;
                                                            Dashboard.update({
                                                                'departments._id': dpId,
                                                                '_id': id
                                                            }, {
                                                                $set: {
                                                                    'departments.$.percentageUsed': parseInt(per)
                                                                }
                                                            }, {
                                                                upsert: false,
                                                                new: false
                                                            }, function(err, data) {
                                                                if (err) {
                                                                    // console.log(err);
                                                                } else {
                                                                    if (percentage >= 50 && percentage <= 74) {
                                                                        if (dptemailStatus != 'half') {
                                                                            var body = cmpName + ' department ' + dptName + ' has  worked percentage 50%';
                                                                            // console.log(body);
                                                                            emailfn.send_mail(email, subject, body, function(output) {
                                                                                if (output == false) {
                                                                                    // console.log('err');
                                                                                } else {
                                                                                    console.log('mail sent');
                                                                                    //emailStatus
                                                                                    Dashboard.update({
                                                                                        'departments._id': dpId,
                                                                                        '_id': id
                                                                                    }, {
                                                                                        $set: {
                                                                                            'departments.$.emailStatus': 'half'
                                                                                        }
                                                                                    }, {
                                                                                        upsert: false,
                                                                                        new: false
                                                                                    }, function(err, dataUp) {
                                                                                        if (err) {
                                                                                            // console.log(err);
                                                                                        }
                                                                                    });
                                                                                }
                                                                            });
                                                                            var email1 = 'barnie@tme.co.nz';
                                                                            emailfn.send_mail(email1, subject, body, function(output) {
                                                                                if (output == false) {
                                                                                    // console.log('err');
                                                                                } else {
                                                                                    console.log("mail to " + email1);
                                                                                }
                                                                            });
                                                                        }
                                                                    } else if (percentage >= 75 && percentage <= 99) {
                                                                        if (dptemailStatus != 'halfup') {
                                                                            var body = cmpName + ' department ' + dptName + ' has  worked percentage 75%';
                                                                            // console.log(body);
                                                                            emailfn.send_mail(email, subject, body, function(output) {
                                                                                if (output == false) {
                                                                                    console.log('err');
                                                                                } else {
                                                                                    Dashboard.update({
                                                                                        'departments._id': dpId,
                                                                                        '_id': id
                                                                                    }, {
                                                                                        $set: {
                                                                                            'departments.$.emailStatus': 'halfup'
                                                                                        }
                                                                                    }, {
                                                                                        upsert: false,
                                                                                        new: false
                                                                                    }, function(err, dataUp) {
                                                                                        if (err) {
                                                                                            console.log(err);
                                                                                        }
                                                                                    });
                                                                                }
                                                                            });
                                                                            var email1 = 'barnie@tme.co.nz';
                                                                            emailfn.send_mail(email1, subject, body, function(output) {
                                                                                if (output == false) {
                                                                                    console.log('err');
                                                                                } else {
                                                                                    console.log("mail to " + email1);
                                                                                }
                                                                            });
                                                                        }
                                                                    } else if (percentage >= 100) {
                                                                        if (dptemailStatus != 'full') {
                                                                            var body = cmpName + ' department ' + dptName + ' has  worked percentage 100%';
                                                                            // console.log(body);
                                                                            emailfn.send_mail(email, subject, body, function(output) {
                                                                                if (output == false) {
                                                                                    console.log('err');
                                                                                } else {
                                                                                    Dashboard.update({
                                                                                        'departments._id': dpId,
                                                                                        '_id': id
                                                                                    }, {
                                                                                        $set: {
                                                                                            'departments.$.emailStatus': 'full'
                                                                                        }
                                                                                    }, {
                                                                                        upsert: false,
                                                                                        new: false
                                                                                    }, function(err, dataUp) {
                                                                                        if (err) {
                                                                                            // console.log(err);
                                                                                        }
                                                                                    });
                                                                                }
                                                                            });
                                                                            var email1 = 'barnie@tme.co.nz';
                                                                            emailfn.send_mail(email1, subject, body, function(output) {
                                                                                if (output == false) {
                                                                                    console.log('err');
                                                                                } else {
                                                                                    console.log("mail to " + email1);
                                                                                }
                                                                            });
                                                                        }
                                                                    }
                                                                }
                                                            })
                                                        }
                                                    });
                                                }
                                            });
                                        }
                                    });
                                }
                            });
                        });
                    }
                    cbdept();
                });
            }
        })
    });
}

/*Meter Dashboard calc*/
function calculateDateWiseData(callback) {
    console.log("calculateDateWiseData.....");
    console.log('Read and Write to ===> Meter <==== Dashboard starting...');
    meterDashboard.find({
        calfalg: false
    }, function(err, dashboardDatas) {
        console.log("dashboardData.length....." + dashboardDatas.length);
        var dashboardCount = 0;
        if (dashboardDatas.length > 0) {
            async.eachSeries(dashboardDatas, function(dashboardData, cbDashboard) {
                console.log("eachSeries...");
                dashboardCount++;
                var dashboardId = dashboardData._id;
                var companyId = dashboardData.companyId;
                var myDate = dashboardData.date;
                var departmentList = dashboardData.departments;

                if (departmentList.length > 0) {
                    console.log("departmentList " + departmentList.length);
                    var deptCount = 0;
                    var uniqueDeptList = [];
                    async.eachSeries(departmentList, function(dept, cbdept) {
                        deptCount++;
                        if (uniqueDeptList.indexOf(dept.departmentName) == -1) {
                            uniqueDeptList.push(dept.departmentName);
                            // console.log("ifff");
                            var departName = dept.departmentName;
                            var dept_Id = dept._id;
                            // console.log("33332");
                            subMeterDashboard.find({
                                'companyId': companyId,
                                'date': myDate,
                                'subDepartments.parentDeptName': dept.departmentName
                            }, {}, {
                                limit: 1
                            }, function(err, subDashboardDetail) {
                                console.log("checking sub department meters");
                                // console.log("dashboard "+dashboardCount);
                                console.log("dashboard COUNT ----> %d <----", dashboardCount);
                                console.log("department COUNT ----> %d <----", deptCount);
                                if (subDashboardDetail.length > 0) {
                                    console.log("subDashboardDetail found");
                                    var subDashboardData = subDashboardDetail[0].subDepartments;
                                    var subDeptCnt = 0;
                                    var subDeptBudgetedSales = 0;
                                    var subDeptActualSales = 0;

                                    async.eachSeries(subDashboardData, function(subDept, cbSubDept) {
                                        var subDeptAllocatedHours = 0;
                                        var subDeptWorkedHours = 0;
                                        var subDeptMoneySpent = 0;
                                        var subDeptBudgetedWages = 0;
                                        subDeptBudgetedSales += parseFloat(subDept.budgetedSales);
                                        subDeptActualSales += parseFloat(subDept.actualSales);
                                        subDeptCnt++;
                                        console.log("sub department COUNT ----> %d <----", subDeptCnt);
                                        Attendance.find({
                                            'date': new Date(myDate),
                                            'active': true,
                                            'department': departName,
                                            'companyId': companyId,
                                            'subDepartment': subDept.subDeptName
                                        }).exec(function(err, attendanceData) {
                                            console.log("atn length " + attendanceData.length);
                                            if (attendanceData.length > 0) {
                                                var countAtn = 0;
                                                async.eachSeries(attendanceData, function(attendance, cbA) {
                                                    var dt1 = Moment.utc(attendance.shiftStart).format("DD-MM-YYYY HH:mm:sss");
                                                    var dt2 = Moment.utc(attendance.shiftFinish).format("DD-MM-YYYY HH:mm:sss");
                                                    var ms;
                                                    if (attendance.shift != "not Working") {
                                                        ms = Moment.utc(Moment(dt2, "DD/MM/YYYY HH:mm:ss").diff(Moment(dt1, "DD/MM/YYYY HH:mm:ss"))).format("HH:mm:ss");
                                                        if (attendance.breakk && !attendance.breakIn) {
                                                            var calculatedHours = getSeconds(ms) - getSeconds(attendance.breakk);
                                                            ms = secToFormatted(calculatedHours);
                                                        }
                                                    } else {
                                                        ms = '00:00:00';
                                                    }

                                                    var hoverlyRate = 0;
                                                    if (attendance.hourlyRate != '' && attendance.active === true) {
                                                        hoverlyRate = parseFloat(attendance.hourlyRate);
                                                    }
                                                    var hoursMinutes1 = ms.split(/[.:]/);
                                                    var hours1 = parseFloat(hoursMinutes1[0], 10);
                                                    var minutes1 = hoursMinutes1[1] ? parseFloat(hoursMinutes1[1], 10) : 0;
                                                    var totalHover1 = hours1 + (minutes1 / 60);
                                                    if (hoverlyRate && totalHover1) {
                                                        subDeptBudgetedWages += totalHover1 * hoverlyRate;
                                                    }
                                                    var totalAtn = attendance.totalRounded;
                                                    var hoursMinutes = totalAtn.split(/[.:]/);
                                                    var hours = parseFloat(hoursMinutes[0], 10);
                                                    var minutes = hoursMinutes[1] ? parseFloat(hoursMinutes[1], 10) : 0;
                                                    var totalHover = hours + (minutes / 60);

                                                    if (totalHover && hoverlyRate)
                                                        subDeptMoneySpent += totalHover * hoverlyRate;
                                                    subDeptWorkedHours += getSeconds(totalAtn);
                                                    subDeptAllocatedHours = subDeptAllocatedHours + getSeconds(ms);
                                                    countAtn++;
                                                    if (countAtn == attendanceData.length) {
                                                        console.log("---------------********log sub Department************----------------")
                                                        console.log("sub_dept_Id....................." + subDept._id);
                                                        console.log("ms ........................." + ms);
                                                        console.log("department name............." + subDept.parentDeptName);
                                                        console.log("sub department name............." + subDept.subDeptName);
                                                        console.log("sub DepartmentAllocatedHours...." + secToFormatted(subDeptAllocatedHours));
                                                        console.log("sub DepartmentWorkedHours......." + secToFormatted(subDeptWorkedHours));
                                                        subMeterDashboard.update({
                                                            'subDepartments._id': subDept._id
                                                        }, {
                                                            $set: {
                                                                'subDepartments.$.workedHours': secToFormatted(subDeptWorkedHours),
                                                                'subDepartments.$.moneySpent': subDeptMoneySpent,
                                                                'subDepartments.$.allocatedHours': secToFormatted(subDeptAllocatedHours),
                                                                "subDepartments.$.budgetedWages": subDeptBudgetedWages
                                                            }
                                                        }, {
                                                            upsert: false,
                                                            new: false
                                                        }, function(err, dataUp) {
                                                            if (subDeptCnt == subDashboardData.length) {
                                                                calculateSalesForMeter(companyId, dashboardId, dept_Id, subDeptBudgetedSales, subDeptActualSales, function(mtr) {
                                                                    console.log("meters sales updated :) :)");
                                                                    if (deptCount == departmentList.length) {
                                                                        calculateMeterTotalWorked(companyId, myDate, function(calcDone) {

                                                                            console.log("-----> sub dept count %d : %d <-----", subDeptCnt, subDashboardData.length);
                                                                            console.log("-----> dept count %d : %d <-----", deptCount, departmentList.length);
                                                                            console.log("-----> Dashboard %d : %d <-----", dashboardCount, dashboardDatas.length);
                                                                            if (dashboardDatas.length === dashboardCount) {
                                                                                callback(true);
                                                                            } else {
                                                                                console.log("again dashboard " + dashboardCount);
                                                                                cbDashboard();
                                                                            }
                                                                        });
                                                                    } else {
                                                                        console.log("again department " + deptCount);
                                                                        cbdept();
                                                                    }
                                                                });
                                                            } else {
                                                                console.log("again sub department " + subDeptCnt);
                                                                cbSubDept();
                                                            }
                                                        });
                                                    } else {
                                                        cbA();
                                                    }
                                                });
                                            } else {
                                                console.log("else ... sub department has no attedance record");
                                                if (subDeptCnt == subDashboardData.length) {
                                                    calculateSalesForMeter(companyId, dashboardId, dept_Id, subDeptBudgetedSales, subDeptActualSales, function(mtr) {
                                                        if (deptCount == departmentList.length) {
                                                            calculateMeterTotalWorked(companyId, myDate, function(calcDone) {
                                                                console.log("-----> sub dept count %d : %d <-----", subDeptCnt, subDashboardData.length);
                                                                console.log("-----> dept count %d : %d <-----", deptCount, departmentList.length);
                                                                console.log("-----> Dashboard %d : %d <-----", dashboardCount, dashboardDatas.length);
                                                                if (dashboardDatas.length === dashboardCount) {
                                                                    callback(true);
                                                                } else {
                                                                    console.log("again dashboard " + dashboardCount);
                                                                    cbDashboard();
                                                                }
                                                            });
                                                        } else {
                                                            console.log("again department " + deptCount)
                                                            cbdept();
                                                        }
                                                    });
                                                } else {
                                                    console.log("again sub department " + subDeptCnt)
                                                    cbSubDept();
                                                }
                                            }
                                        });
                                    }); //Sub dashboard each
                                } else {
                                    console.log("sub meter DashboardDetail not found");
                                    if (deptCount == departmentList.length) {
                                        calculateMeterTotalWorked(companyId, myDate, function(calcDone) {
                                            console.log("-----> dept count %d : %d <-----", deptCount, departmentList.length);
                                            console.log("-----> Dashboard %d : %d <-----", dashboardCount, dashboardDatas.length);
                                            if (dashboardDatas.length === dashboardCount) {
                                                callback(true);
                                            } else {
                                                console.log("again dashboard " + dashboardCount);
                                                cbDashboard();
                                            }
                                        });
                                    } else {
                                        cbdept();
                                    }
                                }
                            });
                        } else {
                            console.log("dept repeated..... so remove");
                            meterDashboard.update({
                                '_id': dashboardId
                            }, {
                                $pull: {
                                    departments: {
                                        '_id': dept._id
                                    }
                                }
                            }, {
                                upsert: false,
                                new: false
                            }, function(err, data) {
                                if (deptCount == departmentList.length) {
                                    calculateMeterTotalWorked(companyId, myDate, function(calcDone) {
                                        console.log("-----> dept count %d : %d <-----", deptCount, departmentList.length);
                                        console.log("-----> Dashboard %d : %d <-----", dashboardCount, dashboardDatas.length);
                                        if (dashboardDatas.length === dashboardCount) {
                                            callback(true);
                                        } else {
                                            console.log("again dashboard " + dashboardCount);
                                            cbDashboard();
                                        }
                                    });
                                } else {
                                    cbdept();
                                }
                            });
                        }
                    }); //Dept Each
                } else {
                    console.log("no dept elseeeeeeeee..........");
                    var budgetedDeptWages = 0;
                    var TotalWorked = 0;
                    var TotalmoneySpent = 0;
                    var TotalAllocatedHours = 0;
                    var totalWorked = 0;
                    var moneySpent = 0;
                    var budgetedWages = 0;

                    Attendance.find({
                        'companyId': companyId,
                        "date": new Date(myDate),
                        "active": true
                    }).sort({
                        'date': 'asc'
                    }).exec(function(err, attendanceData) {
                        var ot2Total = 0;
                        var otTotal = 0;
                        var NTTotal = 0;
                        var normalTimeTotal = 0;
                        var cutExceptionTotal = 0;
                        var addweeklyexcTotal = 0;
                        var dataRead = 0;
                        var countAtn = 0;
                        if (attendanceData.length > 0) {
                            attendanceData.forEach(function(attendance) {
                                countAtn++;
                                var dt1 = Moment.utc(attendance.shiftStart).format("DD-MM-YYYY HH:mm:sss");
                                var dt2 = Moment.utc(attendance.shiftFinish).format("DD-MM-YYYY HH:mm:sss");
                                var ms;
                                if (attendance.shift != "not Working") {
                                    ms = Moment.utc(Moment(dt2, "DD/MM/YYYY HH:mm:ss").diff(Moment(dt1, "DD/MM/YYYY HH:mm:ss"))).format("HH:mm:ss");
                                    if (attendance.breakk && !attendance.breakIn) {
                                        var calculatedHours = getSeconds(ms) - getSeconds(attendance.breakk);
                                        ms = secToFormatted(calculatedHours);
                                    }
                                } else {
                                    ms = '00:00:00';
                                }
                                TotalAllocatedHours = TotalAllocatedHours + getSeconds(ms);
                                var totalAtn = attendance.totalRounded;
                                totalWorked += getSeconds(totalAtn);
                                var hoursMinutes = totalAtn.split(/[.:]/);
                                var hours = parseFloat(hoursMinutes[0], 10);
                                var minutes = hoursMinutes[1] ? parseFloat(hoursMinutes[1], 10) : 0;

                                var totalAtn1 = ms;
                                var hoursMinutes1 = totalAtn1.split(/[.:]/);
                                var hours1 = parseFloat(hoursMinutes1[0], 10);
                                var minutes1 = hoursMinutes1[1] ? parseFloat(hoursMinutes1[1], 10) : 0;

                                var totalHover = hours + (minutes / 60);
                                var totalHover1 = hours1 + (minutes1 / 60);
                                var hoverlyRate = 0;
                                if (attendance.hourlyRate != '' && attendance.active === true) {
                                    hoverlyRate = parseFloat(attendance.hourlyRate);
                                }
                                if (hoverlyRate != "0") {
                                    moneySpent += totalHover * hoverlyRate;
                                }
                                budgetedWages += totalHover1 * hoverlyRate;
                                budgetedDeptWages += totalHover1 * hoverlyRate;
                                if (attendanceData.length == countAtn) {
                                    companyId = companyId.toString();

                                    if (TotalAllocatedHours != 0) {
                                        var totalmain = totalWorked / TotalAllocatedHours;
                                        var permain = totalmain * 100;
                                        permain1 = Math.round(permain * 100) / 100;
                                    }
                                    meterDashboard.update({
                                        "companyId": companyId,
                                        "date": myDate,
                                    }, {
                                        $set: {
                                            'workedHours': secToFormatted(totalWorked),
                                            'moneySpent': moneySpent,
                                            'allocatedHours': secToFormatted(TotalAllocatedHours),
                                            'budgetedWages': budgetedDeptWages,
                                            "budgetedWages": budgetedWages,
                                            'percentageUsed': permain1,
                                            'calfalg': true
                                        }
                                    }, function(err, dataUp) {

                                        var channel = 'timecloud.meterdashboard.update.' + dashboardId;
                                        wamp.getSession().publish(channel, [{
                                            'company': companyId
                                        }]);

                                        console.warn("published meterdashboard calculateDateWiseData no dept elseeeeeeeee ---> " + channel);


                                        if (dashboardCount == dashboardDatas.length) {
                                            callback(true)
                                        } else {
                                            cbDashboard();
                                        }
                                    });
                                }
                            }); //ATN Each
                        } else {

                            console.log("Dashboard %d : %d ", dashboardCount, dashboardDatas.length);

                            if (dashboardCount === dashboardDatas.length) {
                                callback(true);
                            } else {
                                cbDashboard();
                            }
                        }
                    });
                }
            }); //each
        } else {
            console.log("No meter data found");
            callback(true);
        }
    });
}

/*calculateProject*/
function calculateTaskTotal(tasks, projectId, companyId, JC, atnNo, calFlagJC, projectFlagJC, taskCallback) {
    console.log("************calculateTaskTotal **********");
    console.log("attendance id--------------->" + atnNo);
    console.log("company id------------------>" + companyId);
    console.log("JC------------------>" + JC);
    console.log("project------------->" + projectId);

    console.log("projectFlag " + projectFlagJC);
    console.log("calFlag " + calFlagJC);
    var newTasks = tasks;

    console.log("task length " + newTasks.length);
    /*** vars ***/
    // var calFlagJC = true,
    // projectFlagJC = false,
    // calFlagTC = false,
    var projectFlagTC = projectFlagJC,
        calFlagTC = false,
        calFlagJC1,
        projectFlagJC1 = projectFlagJC;

    if (!JC) {
        if (newTasks.length === 0)
            calFlagJC1 = calFlagJC;
        else
            calFlagJC1 = false;
    } else {
        calFlagJC1 = calFlagJC;
    }
    /* JC adjust*/
    Project.aggregate({
        $match: {
            '_id': projectId
        }
    }, {
        $unwind: "$users"
    }).exec(function(err, dataProject) {
        // console.log("dpl",dataProject.length);
        if (dataProject.length > 0) {
            var n = 0;
            var taskTotal = 0;
            var totalMoneySpent = 0;
            dataProject.forEach(function(projectData) {
                n++;
                var Data = projectData.users;
                var total = toSeconds(Data.timeTotal);
                var hMin = Data.timeTotal;

                newTasks.forEach(function(task) {
                    if (!task.calcInclude) {
                        if (task.taskCode === Data.workCode) {
                            total = 0;
                            hMin = "00:00:00";
                        }
                    }
                });

                taskTotal += total;
                var hoursMinutes = hMin.split(/[.:]/);
                var hours = parseInt(hoursMinutes[0], 10);
                var minutes = hoursMinutes[1] ? parseInt(hoursMinutes[1], 10) : 0;
                var totalHover = hours + (minutes / 60);
                var hoverlyRate = 0;
                if (Data.hourlyRate !== '') {
                    hoverlyRate = parseFloat(Data.hourlyRate);
                }
                totalMoneySpent += totalHover * hoverlyRate;

                if (n == dataProject.length) {
                    var totals = secToFormatted(taskTotal);
                    var usedHour = totals;
                    usedHour = usedHour.split(":");
                    usedHour = usedHour[0];
                    Project.update({
                            'companyId': companyId,
                            '_id': projectId
                        }, {
                            $set: {
                                'calFlag': calFlagJC1,
                                'projectJCTotal': totals,
                                'usedH': usedHour,
                                'used$': +totalMoneySpent.toFixed(2),
                            }
                        },
                        function(err, attendanceData) {
                            if (err) {
                                console.log(err);
                            } else {
                                console.log("attendanceId " + atnNo);
                                if (atnNo) {
                                    Attendance.update({
                                        '_id': atnNo,
                                        'companyId': companyId
                                    }, {
                                        $set: {
                                            'projectFlag': projectFlagJC1
                                        }
                                    }, {
                                        upsert: true,
                                        new: false
                                    }, function(err, data) {
                                        // console.log(err);
                                        // console.log(data);
                                        if (!err) {
                                            console.log("Project and calFlag updated for -----> JC %s <---- %s", JC, projectFlagJC1);
                                            if (newTasks.length == 0)
                                                taskCallback(true);
                                        }
                                    });
                                } else {
                                    if (newTasks.length == 0)
                                        taskCallback(true);
                                }
                            }
                        });
                }
            });
        } else {
            // console.log(dataProject);
            console.log("No users datas so init hours JC");
            if (atnNo) {
                Attendance.update({
                    '_id': atnNo
                }, {
                    $set: {
                        'projectFlag': projectFlagJC1
                    }
                }, {
                    upsert: true,
                    new: false
                }, function(err, data) {
                    if (!err) {
                        console.log("Project flag updated due to no total values %s in JC", projectFlagJC1);
                        if (calFlagJC1 && !projectFlagJC1)
                            taskCallback(true);
                    }
                });
            }
            Project.update({
                '_id': projectId
            }, {
                $set: {
                    'calFlag': calFlagJC1,
                    'projectJCTotal': 0,
                    'usedH': 0,
                    'used$': 0,
                }
            }, function(err, attendanceData) {
                if (!err) {
                    console.log("calFlag updated and total set to default %s in JC", calFlagJC1);
                    if (calFlagJC1)
                        taskCallback(true);
                }
            });
        }
    });

    /* TC adjust*/
    if (newTasks.length > 0) {
        console.log('*******TC**********' + newTasks.length);
        var t = 0;
        async.eachSeries(newTasks, function(task, callbackTask) {
            var taskId = task._id;
            var taskCode = task.taskCode;
            t++;
            // console.log("one" + taskCode);
            if (t == newTasks.length) {
                calFlagTC = calFlagJC;
            }

            Project.aggregate({
                $match: {
                    "users.workCode": taskCode,
                    '_id': projectId
                }
            }, {
                $unwind: "$users"
            }, {
                $match: {
                    "users.workCode": taskCode
                }
            }).exec(function(err, dataProject) {
                if (dataProject.length > 0) {
                    // console.log("fgfghgh");
                    var n = 0;
                    var taskTotal = 0;
                    dataProject.forEach(function(projectData) {
                        n++;
                        var Data = projectData.users;
                        var total = toSeconds(Data.timeTotal);
                        if (task.calcInclude) {
                            taskTotal += total;
                        }

                        if (n == dataProject.length) {
                            var totals = secToFormatted(taskTotal);

                            Project.update({
                                'tasks._id': taskId,
                                'companyId': companyId,
                                '_id': projectId
                            }, {
                                $set: {
                                    'calFlag': calFlagTC,
                                    'tasks.$.total': totals,
                                }
                            }, function(err, attendanceData) {
                                if (err) {
                                    console.log(err);
                                } else {
                                    // console.log("attendanceId " + atnNo);
                                    if (atnNo) {
                                        Attendance.update({
                                            '_id': atnNo
                                        }, {
                                            $set: {
                                                projectFlag: projectFlagTC,
                                            }
                                        }, {
                                            upsert: true,
                                            new: false
                                        }, function(err, data) {
                                            if (!err) {
                                                // console.log("update project task total");
                                                if (newTasks.length === t) {
                                                    console.log("Project and calFlag updated for %s %s : %s in TC", taskCode, projectFlagTC, calFlagTC);
                                                    console.log("all task calculated %s : %s", projectFlagTC, calFlagTC);
                                                    taskCallback(true);
                                                } else {
                                                    console.log("Project and calFlag updated for %s %s : %s in TC", taskCode, projectFlagTC, calFlagTC);
                                                    callbackTask();
                                                }
                                            }
                                        });
                                    } else {
                                        if (newTasks.length === t) {
                                            console.log("calFlag updated %s %s in TC", taskCode, calFlagTC);
                                            console.log("all task calculated... %s", calFlagTC);
                                            taskCallback(true);
                                        } else {
                                            console.log("calFlag updated %s %s in TC", taskCode, calFlagTC);
                                            callbackTask();
                                        }
                                    }
                                }
                            });
                        }
                    });
                } else {
                    Project.update({
                            'tasks._id': taskId,
                            'companyId': companyId,
                            '_id': projectId
                        }, {
                            $set: {
                                'calFlag': calFlagTC,
                                'tasks.$.total': 0,
                            }
                        },
                        function(err, attendanceData) {
                            if (err) {
                                console.log(err);
                            } else {
                                // console.log("attendanceId " + atnNo);
                                if (atnNo) {
                                    Attendance.update({
                                        '_id': atnNo
                                    }, {
                                        $set: {
                                            projectFlag: projectFlagTC,
                                        }
                                    }, {
                                        upsert: true,
                                        new: false
                                    }, function(err, data) {
                                        if (!err) {
                                            if (newTasks.length === t) {
                                                console.log("Project and calFlag updated for %s %s : %s in TC", taskCode, projectFlagTC, calFlagTC);
                                                console.log("all task calculated %s : %s", projectFlagTC, calFlagTC);
                                                taskCallback(true);
                                            } else {
                                                console.log("Project and calFlag updated for %s %s : %s in TC", taskCode, projectFlagTC, calFlagTC);
                                                callbackTask();
                                            }
                                        }
                                    });
                                } else {
                                    if (newTasks.length === t) {
                                        console.log("calFlag updated %s %s in TC", taskCode, calFlagTC);
                                        console.log("all task calculated... %s", calFlagTC);
                                        taskCallback(true);
                                    } else {
                                        console.log("calFlag updated %s %s in TC", taskCode, calFlagTC);
                                        callbackTask();
                                    }
                                }
                            }
                        });
                }
            });
        });
    }
}

/* Dashboard calculation flag multi*/
function setDashboardFlag(date, companyId, callback) {
    var datenow = Moment.utc(date).format('YYYY-MM-DD');
    console.log("************ dashboard flag ***********");
    Dashboard.update({
        'weekStart': {
            $gte: datenow
        },
        'companyId': companyId
    }, {
        $set: {
            'calfalg': false
        }
    }, {
        upsert: false,
        new: false,
        multi: true
    }, function(err, data) {

        if (err) {
            console.log('dashboard updated failed' + err);
            callback(false);
        } else {
            console.log('dashboard updated');

            meterDashboard.update({
                'date': {
                    $gte: datenow
                },
                'companyId': companyId
            }, {
                $set: {
                    'calfalg': false
                }
            }, {
                upsert: false,
                new: false,
                multi: true
            }, function(err, data) {
                if (err) {
                    console.log('meter dashboard updated failed' + err);
                    callback(false);
                } else {
                    console.log('meter dashboard updated ' + data);
                    callback(true);
                }
            });
        }

        // if(!data){
        //     var adjustDate = Moment.utc(date).subtract('days', 7).format('YYYY-MM-DD');
        //     console.log("adjust date is "+ adjustDate);
        //     Dashboard.update({
        //         'weekStart': {
        //             $gte: adjustDate
        //         },
        //         'companyId': companyId
        //     }, {
        //         $set: {
        //             'calfalg': false
        //         }
        //     }, {
        //         upsert: false,
        //         new: false,
        //         multi: true
        //     }, function(err, data) {
        //         if(err){
        //             console.log('dashboard adjustDate updated failed' + err);
        //         }else{
        //             console.log('dashboard adjustDate updated');
        //         }
        //     });
        // }

    });
};

/* Dashboard calculation flag */
function setDashboardFlagSingle(start, end, companyId, callback) {
    var dateStart = Moment.utc(start).format('YYYY-MM-DD');
    var dateEnd = Moment.utc(end).format('YYYY-MM-DD');
    console.log("************ dashboard flag ***********");
    console.log(dateStart);
    console.log(dateEnd);
    console.log(companyId);

    Dashboard.update({
        'weekStart': dateStart,
        'weekEnd': dateEnd,
        'companyId': companyId
    }, {
        $set: {
            'calfalg': false
        }
    }, {
        upsert: false,
    }, function(err, data) {
        // console.log(err,data);
        if (err) {
            console.log('dashboard updated failed' + err);
            callback(false);
        } else {
            console.log('dashboard updated');
            callback(true);
        }
    });
};

/* Meter Dashboard calculation flag multi*/
function setMeterDashboardFlag(start, end, companyId, callback) {
    var dateStart = Moment.utc(start).format('YYYY-MM-DD');
    var dateEnd = Moment.utc(end).format('YYYY-MM-DD');

    console.log("************ dashboard flag ***********");
    meterDashboard.update({
        'date': {
            $gte: dateStart,
            $lte: dateEnd
        },
        'companyId': companyId
    }, {
        $set: {
            'calfalg': false
        }
    }, {
        upsert: false,
        new: false,
        multi: true
    }, function(err, data) {
        if (err) {
            console.log('meter dashboard updated failed' + err);
            callback(false);
        } else {
            console.log('meter dashboard updated');
            callback(true);
        }
    });
};

/* Meter Dashboard calculation flag */
function setMeterDashboardFlagSingle(date, companyId, callback) {
    var datenow = Moment.utc(date).format('YYYY-MM-DD');
    console.log("************ meterDashboard flag ***********");
    meterDashboard.update({
        'date': datenow,
        'companyId': companyId
    }, {
        $set: {
            calfalg: false
        }
    }, {
        upsert: false,
        new: false,
        multi: true
    }, function(err, data) {
        // console.log(err,data);
        if (err) {
            console.log('meter dashboard updated failed' + err);
            callback(false);
        } else {
            console.log('meter dashboard updated');
            callback(true);
        }
    });
};
/* create dahboard */
function createDashBoard(companyId, start, end, callback) {
    console.log("***********Create Dashboard************");

    console.log("----------------------");
    console.log(companyId, start, end);
    console.log("----------------------");

    Company.findById(companyId, function(err, CompanyData) {
        //console.log(CompanyData);
        if (CompanyData) {
            var companyId = CompanyData._id;
            var companyname = CompanyData.companyname;
            var departments = CompanyData.departments;
            var isdashboard = CompanyData.isdashboard;
            var isSubDepartment = CompanyData.isSubDepartmentEnable;

            if (isdashboard) {
                console.log("dashboard flag enable ...");
                // getPayperiod(companyId, function(result) {
                var deptCount = 0;
                var DeptArray = [];
                Dashboard.findOne({
                    'companyId': companyId,
                    'weekStart': start,
                    'weekEnd': end
                }, function(err, dashboardData) {
                    if (!dashboardData) {
                        console.log("dashboardData not found ...");
                        console.log("First time creation     ...")
                        console.log("checking departments    ...");
                        if (departments.length > 0) {
                            console.log(departments.length + " departments found");
                            async.eachSeries(departments, function(dept, cbdept) {
                                deptCount++;
                                DeptArray.push({
                                    departmentId: dept._id,
                                    departmentName: dept.name,
                                    workedHours: "00:00:00"
                                });
                                if (deptCount == departments.length) {
                                    Dashboard.update({
                                        'companyId': companyId,
                                        'weekStart': start,
                                        'weekEnd': end
                                    }, {
                                        $set: {
                                            companyId: companyId,
                                            companyName: companyname,
                                            weekStart: start,
                                            weekEnd: end,
                                            workedHours: "00:00:00",
                                            allocatedHours: "00:00:00",
                                            percentageUsed: "00",
                                            moneySpent: "00",
                                            departments: DeptArray,
                                            calfalg: false,
                                        }
                                    }, {
                                        upsert: true,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {
                                            console.log("@@@@@@@@error---->Dashboard create %s<----error@@@@@@@@", err);
                                        } else {
                                            console.log("checking sub department ...?");
                                            if (isSubDepartment) {
                                                console.log("Found true")
                                                createSubDashboard(companyId, start, end, function(result) {
                                                    if (result) {
                                                        console.log("dashboard created successfully ...");
                                                        callback(true);
                                                    } else {
                                                        console.log("@@@@@@@@error---->Sub Dashboard create %s<----error@@@@@@@@", err);
                                                    }
                                                });
                                            } else {
                                                console.log("Found false");
                                                console.log("dashboard created successfully ...");
                                                callback(true);
                                            }
                                        }
                                    });
                                } else {
                                    cbdept();
                                }
                            });
                        } else {
                            console.log("No departments found");
                            Dashboard.update({
                                'companyId': companyId,
                                'weekStart': start,
                                'weekEnd': end
                            }, {
                                $set: {
                                    companyId: companyId,
                                    companyName: companyname,
                                    weekStart: start,
                                    weekEnd: end,
                                    calfalg: false,
                                    workedHours: "00:00:00",
                                    allocatedHours: "00:00:00",
                                    percentageUsed: "00",
                                    moneySpent: "00",
                                    departments: []
                                }
                            }, {
                                upsert: true,
                                new: false
                            }, function(err, data) {
                                if (err) {
                                    console.log("@@@@@@@@error---->Dashboard create %s<----error@@@@@@@@", err);
                                } else {
                                    console.log("dashboard created without department");
                                    callback(true);
                                }
                            });
                        }
                    } else {
                        console.log("dashboardData found ...");
                        console.log("sub department checking ...");
                        if (isSubDepartment) {
                            console.log("True");
                            console.log("sub dashboard checking ...");
                            subDashboard.findOne({
                                companyId: companyId,
                                'weekStart': start,
                                'weekEnd': end
                            }, function(err, subDepartmentLists) {

                                if (!subDepartmentLists) {
                                    console.log("No sub dashboard found ...");
                                    createSubDashboard(companyId, start, end, function(result) {
                                        if (result) {
                                            console.log("sub dashboard created successfully");
                                            callback(true, isSubDepartment);
                                        } else {
                                            console.log("@@@@@@@@warn---->sub Dashboard create %s<----warn@@@@@@@@", result);
                                            callback(true, isSubDepartment);
                                        }
                                    });
                                } else {
                                    console.log("Dashboard already created (with subdepartment)");
                                    callback(true, isSubDepartment);
                                }
                            });
                        } else {
                            console.log("False");
                            console.log("dashboard already created (without subdepartment)");
                            callback(true, isSubDepartment);
                        }
                    }
                });
                //});
            } else {
                console.log("@@@@@@@@warn---->dashboard flag<----warn@@@@@@@@");
                console.log(false);
            }
        } else {
            console.log("@@@@@@@@error---->Invalid Company Id %s<----error@@@@@@@@", companyId);
            callback(false);
        }
    });
};
/* create meter dahboard */
function createMeterDashBoard(companyId, myDate, start, end, callback) {
    console.log("***********Create meter Dashboard************");
    Company.findById(companyId, function(err, CompanyData) {
        //console.log(CompanyData);
        if (CompanyData) {
            var companyId = CompanyData._id;
            var companyname = CompanyData.companyname;
            var isdashboard = CompanyData.isdashboard;
            var isSubDepartment = CompanyData.isSubDepartmentEnable;

            if (isdashboard) {
                console.log("dashboard flag enable ...");
                meterDashboard.findOne({
                    'companyId': companyId,
                    'date': myDate
                }, function(err, meterData) {
                    if (!meterData) {
                        console.log("meter dashboard Data not found ...");
                        console.log("First time creation     ...")
                        console.log("checking departments    ...");
                        Dashboard.find({
                            'companyId': companyId,
                            'weekStart': start,
                            'weekEnd': end,
                        }, {}, {
                            limit: 1
                        }, function(err, getDatas) {
                            if (getDatas.length > 0) {
                                var getData = {};
                                getData = getDatas[0];
                                var departments = getData.departments;
                                var cnt = 0;
                                var departmentsArray = [];

                                if (departments.length > 0) {
                                    console.log(departments.length + " departments found");
                                    async.eachSeries(departments, function(dept, cbdept) {
                                        cnt++;
                                        departmentsArray.push({
                                            workedHours: "00:00:00",
                                            departmentName: dept.departmentName,
                                            departmentId: dept.departmentId
                                        });
                                        if (cnt == departments.length) {
                                            meterDashboard.update({
                                                'date': myDate,
                                                'companyId': companyId
                                            }, {
                                                $set: {
                                                    companyId: companyId,
                                                    companyName: companyname,
                                                    workedHours: "00:00:00",
                                                    allocatedHours: "00:00:00",
                                                    percentageUsed: "00",
                                                    moneySpent: "00",
                                                    calfalg: false,
                                                    departments: departmentsArray
                                                }
                                            }, {
                                                upsert: true,
                                                new: false
                                            }, function(err, data) {
                                                if (err) {
                                                    console.log("@@@@@@@@error---->Meter Dashboard create %s<----error@@@@@@@@", err);
                                                } else {
                                                    console.log("checking sub department ...?");
                                                    if (isSubDepartment) {
                                                        console.log("Found true")
                                                        createSubMeterDashboard(companyId, myDate, function(result) {
                                                            if (result) {
                                                                console.log("meter dashboard created successfully ...");
                                                                callback(true);
                                                            } else {
                                                                console.log("@@@@@@@@error---->Sub Meter Dashboard create %s<----error@@@@@@@@", err);
                                                            }
                                                        });
                                                    } else {
                                                        console.log("Found false");
                                                        console.log("meter dashboard created successfully ...");
                                                        callback(true);
                                                    }
                                                }
                                            });
                                        } else {
                                            cbdept();
                                        }
                                    });
                                } else {
                                    console.log("No departments found");
                                    meterDashboard.update({
                                        'date': myDate,
                                        'companyId': companyId,
                                    }, {
                                        $set: {
                                            companyId: companyId,
                                            companyName: companyName,
                                            workedHours: "00:00:00",
                                            allocatedHours: "00:00:00",
                                            percentageUsed: "00",
                                            moneySpent: "00",
                                            calfalg: false,
                                        }
                                    }, {
                                        upsert: true,
                                        new: false
                                    }, function(err, data) {
                                        if (err) {
                                            console.log("@@@@@@@@error---->Meter Dashboard create %s<----error@@@@@@@@", err);
                                        } else {
                                            console.log("meter dashboard created without department");
                                            callback(true);
                                        }
                                    });
                                }
                            } else {
                                console.log("no dashboard found");
                                createDashBoard(companyId, start, end, function(result, subDepartmentsFlag) {
                                    if (result) {
                                        createMeterDashBoard(companyId, myDate, start, end);
                                    }
                                });
                            }
                        });
                    } else {
                        console.log("dashboardData found ...");
                        console.log("sub department checking ...");
                        if (isSubDepartment) {
                            console.log("True");
                            console.log("sub dashboard checking ...");
                            subMeterDashboard.findOne({
                                'companyId': companyId,
                                'date': myDate,
                            }, function(err, subDepartmentLists) {
                                if (!subDepartmentLists) {
                                    console.log("No sub dashboard found ...");
                                    createSubMeterDashboard(companyId, myDate, function(result) {
                                        if (result) {
                                            console.log("meter dashboard created successfully ...");
                                            callback(true);
                                        } else {
                                            console.log("@@@@@@@@error---->Sub Meter Dashboard create %s<----error@@@@@@@@", err);
                                        }
                                    });
                                } else {
                                    console.log("Dashboard already created (with subdepartment)");
                                    callback(true, isSubDepartment);
                                }
                            });
                        } else {
                            console.log("False");
                            console.log("dashboard already created (without subdepartment)");
                            callback(true, isSubDepartment);
                        }
                    }
                });
                //});
            } else {
                console.log("@@@@@@@@warn---->dashboard flag<----warn@@@@@@@@");
                console.log(false);
            }
        } else {
            console.log("@@@@@@@@error---->Invalid Company Id %s<----error@@@@@@@@", companyId);
            callback(false);
        }
    });
};

/* Sub dashboard creation */
function createSubDashboard(companyId, start, end, callback) {
    console.log("***********Create Sub Dashboard************");
    var subDept = 0;
    var subDeptArray = [];
    subDeparment.find({
        companyId: companyId
    }, function(err, subDeaptDetail) {
        console.log("sub department details checking ...");
        if (subDeaptDetail.length > 0) {
            console.log(subDeaptDetail.length + " sub department found");
            async.eachSeries(subDeaptDetail, function(dept, cbsubDept) {
                subDept++;
                subDeptArray.push({
                    departmentId: dept.parentDeptId,
                    parentDeptName: dept.parentDeptName,
                    subDeptId: dept._id,
                    subDeptName: dept.name,
                    emailStatus: '',
                    workedHours: '00:00:00',

                });
                if (subDept == subDeaptDetail.length) {
                    subDashboard.update({
                        'companyId': companyId,
                        'weekStart': start,
                        'weekEnd': end
                    }, {
                        $set: {
                            subDepartments: subDeptArray,
                            companyId: companyId, // company user Id (id of tenant)
                            weekStart: start,
                            weekEnd: end,
                            // subCalFlag: true,
                        }
                    }, {
                        upsert: true,
                        new: false
                    }, function(err, data) {
                        if (err) {
                            console.log("sub departments error" + err);
                            callback(false);
                        } else {
                            setDashboardFlagSingle(start, end, companyId, function(flag) {
                                // console.log("sub departments inserted successfully");
                                if (flag) {
                                    console.log("recalculation started now...");
                                    callback(true);
                                } else {
                                    console.log("@@@@@@@@warn---->recalculation won't start!!!<----warn@@@@@@@@");
                                    callback(true);
                                }
                            });
                        }
                    });
                } else {
                    cbsubDept();
                }
            });
        } else {
            console.log("No sub departments found");
            callback(true);
        }
    });
};
/* Sub meter dashboard creation */
function createSubMeterDashboard(companyId, myDate, callback) {
    console.log("***********Create Sub Meter Dashboard************");
    var subDept = 0;
    var subDeptArray = [];
    subDeparment.find({
        companyId: companyId
    }, function(err, subDeaptDetail) {
        console.log("sub department details checking ...");
        if (subDeaptDetail.length > 0) {
            console.log(subDeaptDetail.length + " sub department found");
            async.eachSeries(subDeaptDetail, function(dept, cbsubDept) {
                subDept++;
                subDeptArray.push({
                    departmentId: dept.parentDeptId,
                    parentDeptName: dept.parentDeptName,
                    subDeptId: dept._id,
                    subDeptName: dept.name,
                    emailStatus: '',
                    workedHours: '00:00:00',

                });
                if (subDept == subDeaptDetail.length) {
                    subMeterDashboard.update({
                        'companyId': companyId,
                        'date': myDate,
                    }, {
                        $set: {
                            subDepartments: subDeptArray,
                            companyId: companyId,
                            date: myDate,
                        }
                    }, {
                        upsert: true,
                        new: false
                    }, function(err, data) {
                        if (err) {
                            console.log("sub departments error" + err);
                            callback(false);
                        } else {
                            // callback(true);
                            setMeterDashboardFlagSingle(myDate, companyId, function(flag) {
                                if (flag) {
                                    console.log("recalculation started now...");
                                    callback(true);
                                } else {
                                    console.log("@@@@@@@@warn---->recalculation won't start!!!<----warn@@@@@@@@");
                                    callback(true);
                                }
                            });
                        }
                    });
                } else {
                    cbsubDept();
                }
            });
        } else {
            console.log("No sub departments found");
            callback(true);
        }
    });
};

/* check previous dashboard data */
function checkPreviousDashboard(companyId, start, end, callback) {
    /* Previous data */
    console.log("check previous dashboard ?");
    var date = Moment(start);
    var eDate = date.subtract(1, 'days');
    var EndDate = Moment(eDate).format("YYYY-MM-DD");
    var d1 = Moment(start);
    var d2 = Moment(end);
    var days = Moment.duration(d2.diff(d1)).asDays();
    var sDate = date.subtract(days, 'days');
    var startDate = Moment(sDate).format("YYYY-MM-DD");
    console.log(startDate, EndDate);
    Dashboard.find({
        'companyId': companyId,
        'weekStart': startDate,
        'weekEnd': EndDate
    }, function(err, prvsDatas) {
        if (prvsDatas.length > 0) {
            console.log("Data found");
            callback(true);
        } else {
            console.log("Data not found");
            callback(false);
        }
    });
};

/* meter dashboard calculation */
function currentDateDashboardCalculation(companyId, start, currentDate, callback) {
    console.log("departments meter dashboard +-*%");
    meterDashboard.find({
        companyId: companyId,
        date: {
            $gte: start,
            $lte: currentDate
        }
    }, function(err, dashData) {
        // console.log(dashData);
        if (!err) {
            var mainAllocatedHours = 0;
            var mainWorkedHours = 0;
            var mainMoneySpent = 0;
            var mainBudgetedWages = 0;
            var mainBudgetedSales = 0;
            var mainActualSales = 0;
            var dashboardCnt = 0
            var newTempArray = [];
            var tempArray = [];
            // console.log("calculation begin");
            // console.log(dashData);
            async.eachSeries(dashData, function(dashboard, cbDash) {
                var deptCnt = 0;
                dashboardCnt++;
                // console.log("1");
                async.eachSeries(dashboard.departments, function(dept, cbDept) {
                    function isInArray(value, array) {
                        return array.indexOf(value) > -1;
                    }
                    // console.log("1");
                    var value = isInArray(dept.departmentId, tempArray); // true
                    if (!value) {
                        // console.log("2");
                        tempArray.push(dept.departmentId);
                        newTempArray.push(dept);
                        mainAllocatedHours += getSeconds(dept.allocatedHours);
                        mainWorkedHours += getSeconds(dept.workedHours);
                        mainMoneySpent += parseFloat(dept.moneySpent);
                        mainBudgetedWages += parseFloat(dept.budgetedWages);
                        mainBudgetedSales += parseFloat(dept.budgetedSales);
                        mainActualSales += parseFloat(dept.actualSales);
                    } else {
                        // console.log("3");
                        for (var i = 0; i < newTempArray.length; i++) {
                            if (newTempArray[i].departmentId == dept.departmentId) {
                                newTempArray[i].allocatedHours = secToFormatted(getSeconds(newTempArray[i].allocatedHours) + getSeconds(dept.allocatedHours));
                                newTempArray[i].workedHours = secToFormatted(getSeconds(newTempArray[i].workedHours) + getSeconds(dept.workedHours));
                                newTempArray[i].budgetedWages = Math.round(parseFloat(newTempArray[i].budgetedWages) + parseFloat(dept.budgetedWages));
                                newTempArray[i].budgetedSales = Math.round(parseFloat(newTempArray[i].budgetedSales) + parseFloat(dept.budgetedSales));
                                newTempArray[i].actualSales = Math.round(parseFloat(newTempArray[i].actualSales) + parseFloat(dept.actualSales));
                                newTempArray[i].moneySpent = Math.round(parseFloat(newTempArray[i].moneySpent) + parseFloat(dept.moneySpent));
                                var permain1 = 00;
                                mainAllocatedHours += getSeconds(dept.allocatedHours);
                                mainWorkedHours += getSeconds(dept.workedHours);
                                mainMoneySpent += parseFloat(dept.moneySpent);
                                mainBudgetedWages += parseFloat(dept.budgetedWages);
                                mainBudgetedSales += parseFloat(dept.budgetedSales);
                                mainActualSales += parseFloat(dept.actualSales);
                                if (getSeconds(newTempArray[i].allocatedHours) != 0) {
                                    var total = getSeconds(newTempArray[i].workedHours) / getSeconds(newTempArray[i].allocatedHours);
                                    var per = total * 100;
                                    permain1 = Math.round(per * 100) / 100;

                                }
                                newTempArray[i].percentageUsed = permain1;
                            }
                        };
                    }
                    deptCnt++;
                    if (deptCnt == dashboard.departments.length) {
                        if (dashboardCnt == dashData.length) {
                            var mainPer = 00;
                            if (mainAllocatedHours != 0) {
                                var total = mainWorkedHours / mainAllocatedHours;
                                var per = total * 100;
                                mainPer = Math.round(per * 100) / 100;
                            }
                            var finalArray = {
                                    companyId: dashboard.companyId,
                                    companyName: dashboard.companyName,
                                    budgetedWages: mainBudgetedWages,
                                    actualSales: mainActualSales,
                                    budgetedSales: mainBudgetedSales,
                                    moneySpent: mainMoneySpent,
                                    percentageUsed: mainPer,
                                    allocatedHours: secToFormatted(mainAllocatedHours),
                                    workedHours: secToFormatted(mainWorkedHours),
                                    departments: newTempArray
                                }
                                // console.log('finalArray');
                            callback(finalArray);
                        }
                        cbDash();
                    }
                    cbDept();
                });
            });
        } else {
            callback([]);
        }
    });
};
/* meter sub dashboard calculation */
function currentDateSubDashboardCalculation(companyId, start, currentDate, callback) {
    console.log("sub departments meter dashboard +-*%");
    subMeterDashboard.find({
        companyId: companyId,
        date: {
            $gte: start,
            $lte: currentDate
        }
    }, function(err, dashData) {
        // console.log(dashData);
        if (!err) {
            var mainAllocatedHours = 0;
            var mainWorkedHours = 0;
            var mainActualSales = 0;
            var mainBudgetedSales = 0;
            var mainMoneySpent = 0;
            var mainBudgetedWages = 0;
            var dashboardCnt = 0
            var newTempArray = [];
            var tempArray = [];
            // console.log("calculation begin");
            // console.log(dashData);
            async.eachSeries(dashData, function(dashboard, cbDash) {
                var deptCnt = 0;
                dashboardCnt++;
                // console.log("1");
                async.eachSeries(dashboard.subDepartments, function(dept, cbDept) {
                    function isInArray(value, array) {
                        return array.indexOf(value) > -1;
                    }
                    // console.log("1");
                    var value = isInArray(dept.subDeptId, tempArray); // true
                    if (!value) {
                        // console.log("2");
                        tempArray.push(dept.subDeptId);
                        newTempArray.push(dept);
                        mainAllocatedHours += getSeconds(dept.allocatedHours);
                        mainWorkedHours += getSeconds(dept.workedHours);
                        mainMoneySpent += parseFloat(dept.moneySpent);
                        mainBudgetedWages += parseFloat(dept.budgetedWages);
                        mainBudgetedSales += parseFloat(dept.budgetedSales);
                        mainActualSales += parseFloat(dept.actualSales);
                    } else {
                        // console.log("3");
                        for (var i = 0; i < newTempArray.length; i++) {
                            if (newTempArray[i].subDeptId == dept.subDeptId) {
                                newTempArray[i].allocatedHours = secToFormatted(getSeconds(newTempArray[i].allocatedHours) + getSeconds(dept.allocatedHours));
                                newTempArray[i].workedHours = secToFormatted(getSeconds(newTempArray[i].workedHours) + getSeconds(dept.workedHours));
                                newTempArray[i].budgetedWages = Math.round(parseFloat(newTempArray[i].budgetedWages) + parseFloat(dept.budgetedWages));
                                newTempArray[i].budgetedSales = Math.round(parseFloat(newTempArray[i].budgetedSales) + parseFloat(dept.budgetedSales));
                                newTempArray[i].actualSales = Math.round(parseFloat(newTempArray[i].actualSales) + parseFloat(dept.actualSales));
                                newTempArray[i].moneySpent = Math.round(parseFloat(newTempArray[i].moneySpent) + parseFloat(dept.moneySpent));
                                var permain1 = 00;
                                mainAllocatedHours += getSeconds(dept.allocatedHours);
                                mainWorkedHours += getSeconds(dept.workedHours);
                                mainMoneySpent += parseFloat(dept.moneySpent);
                                mainBudgetedWages += parseFloat(dept.budgetedWages);
                                mainBudgetedSales += parseFloat(dept.budgetedSales);
                                mainActualSales += parseFloat(dept.actualSales);
                                if (getSeconds(newTempArray[i].allocatedHours) != 0) {
                                    var total = getSeconds(newTempArray[i].workedHours) / getSeconds(newTempArray[i].allocatedHours);
                                    var per = total * 100;
                                    permain1 = Math.round(per * 100) / 100;

                                }
                                newTempArray[i].percentageUsed = permain1;
                            }
                        };
                    }
                    deptCnt++;
                    if (deptCnt == dashboard.subDepartments.length) {
                        if (dashboardCnt == dashData.length) {
                            var mainPer = 00;
                            if (mainAllocatedHours != 0) {
                                var total = mainWorkedHours / mainAllocatedHours;
                                var per = total * 100;
                                mainPer = Math.round(per * 100) / 100;
                            }
                            var finalArray = {
                                    companyId: dashboard.companyId,
                                    companyName: dashboard.companyName,
                                    budgetedWages: mainBudgetedWages,
                                    actualSales: mainActualSales,
                                    budgetedSales: mainBudgetedSales,
                                    moneySpent: mainMoneySpent,
                                    percentageUsed: mainPer,
                                    allocatedHours: secToFormatted(mainAllocatedHours),
                                    workedHours: secToFormatted(mainWorkedHours),
                                    subDepartments: newTempArray
                                }
                                // console.log('finalArray');
                            callback(finalArray);
                        }
                        cbDash();
                    }
                    cbDept();
                });
            });
        } else {
            callback([]);
        }
    });
};

/* sales calculation */
function salesCalculationSub(start, end, companyId, deptId, departName, subDeptId, subDepartName, callback) {
    console.log("sales calculation +-*%");
    console.log("dept name" + departName);
    console.log("start " + start);
    console.log("end " + end);
    console.log("sub dept id" + subDeptId);
    console.log("sub dept name" + subDepartName);
    subMeterDashboard.find({
        "date": {
            $gte: start,
            $lte: end
        },
        "companyId": companyId
    }, {
        "subDepartments": {
            $elemMatch: {
                "subDeptId": subDeptId
            }
        }
    }, function(err, salesData) {
        console.log("length " + salesData.length);
        var mainCount = 0;
        totalActualSales = 0,
            totalBudgetedSales = 0;
        if (salesData.length > 0) {
            async.eachSeries(salesData, function(main, cbDash) {
                if (main.subDepartments.length > 0) {
                    mainCount++;
                    main.subDepartments.forEach(function(sub) {
                        totalBudgetedSales += parseFloat(sub.budgetedSales);
                        totalActualSales += parseFloat(sub.actualSales);
                        if (salesData.length === mainCount) {
                            console.log("calc done");
                            console.log(totalActualSales);
                            console.log(totalBudgetedSales);
                            callback(totalActualSales, totalBudgetedSales);
                        } else {
                            cbDash();
                        }
                    });
                } else {
                    callback(totalActualSales, totalBudgetedSales);
                }
            });
        } else {
            callback(totalActualSales, totalBudgetedSales);
        }

    });
}

function updateProjectSingle(companyId, myJC, callback) {

    // console.log("workCode "+workCode);
    Project.update({
        'companyId': companyId,
        'JC': myJC
    }, {
        $set: {
            'calFlag': false
        }
    }, {
        upsert: false,
        new: false
    }, function(err, data) {
        // console.log(data);
        // console.log(err);
        if (err) {
            console.log("project flag failed" + err);
            callback(false);
        } else {
            console.log("updated true");
            callback(true);
        }
    });
}

/* Set Project flag according to workcode*/
function setProjectFlagIndividual(companyId, workCode, callback) {
    //Find projects for this company
    Project.find({
        'companyId': companyId
    }, function(err, projectDetail) {
        var tcFound = false;
        var jcFound = false;
        projectDetail.forEach(function(prj, index1) {
            var customProject = {};

            // users object to pull out
            prj.users.forEach(function(usr, index3) {
                if (usr.workCode === workCode) {
                    customProject.projId = prj._id;
                    customProject.date = usr.date;
                    customProject.userId = usr._id;
                    customProject.employeeNo = usr.employeeNo;
                }
            });
            // JC Block
            if (prj.JC === workCode) {
                jcFound = true;
                console.log("JCFOUND ----- " + workCode);
                updateProjectSingle(companyId, workCode, function(prjRes) {
                    if (prjRes)
                        callback(true, customProject);
                });
                // TC Block
            } else if (prj.tasks.length > 0) {
                prj.tasks.forEach(function(tc, index2) {
                    if (tc.taskCode === workCode) {
                        tcFound = true;
                        console.log("TCFOUND -----" + prj.JC);
                        updateProjectSingle(companyId, prj.JC, function(prjRes) {
                            if (prjRes)
                                callback(true, customProject);
                        });
                    }
                });
            }
            // if new Project found
            if (index1 + 1 === projectDetail.length && !tcFound && !jcFound) {
                callback(true, customProject);
            }
        });
    });
}

/* set project details according to workcode */
function workCodeSetup(dataCompany, workCode, taskArray, taskArrayNew, callback) {
    // Find projects
    Project.find({
        'companyId': dataCompany._id
    }, function(err, projectDetail) {
        var workCodeFound = [];

        if (projectDetail.length > 0) {
            var prjCnt = 0;
            // Async projects
            async.eachSeries(projectDetail, function(wc, callbackPrj) {
                prjCnt++;
                // JC match
                if (wc.JC === workCode) {
                    workCodeFound.push(wc);
                    console.log("JCFOUND " + workCode);
                    // TC match
                } else if (wc.tasks.length > 0) {
                    wc.tasks.forEach(function(tc, index2) {
                        if (tc.taskCode === workCode) {
                            workCodeFound.push(wc);
                            console.log("TCFOUND " + workCode);
                        }
                    });
                }
                // Final iterator
                if (prjCnt === projectDetail.length) {
                    // console.log(workCodeFound);
                    if (workCodeFound.length > 0) {
                        //If code Found
                        // generate final task list
                        checkDBTask(workCodeFound[0], taskArray, function(taskList) {
                            // console.log(taskList);
                            // Project with updated task list
                            Project.update({
                                'companyId': dataCompany._id,
                                '_id': workCodeFound[0]._id
                            }, {
                                $set: {
                                    'active': true,
                                    'calFlag': false,
                                    'tasks': taskList,
                                }
                            }, {
                                upsert: true,
                                new: false
                            }, function(err, data) {
                                // console.log(data);
                                if (!err && data) {
                                    console.log("project calFlag updated" + workCodeFound[0].JC);
                                    callback(true);
                                }
                            });
                        });
                    } else {
                        // Code not found
                        // Create new project
                        Project.update({
                            'companyId': dataCompany._id,
                            JC: workCode
                        }, {
                            $set: {
                                companyId: dataCompany._id,
                                companyname: dataCompany.companyname,
                                projectname: workCode,
                                JC: workCode,
                                active: true,
                                calFlag: false,
                                tasks: taskArrayNew,
                            }
                        }, {
                            upsert: true,
                            new: false
                        }, function(err, data) {
                            if (data && !err) {
                                console.log("workcode created");
                                callback(true);
                            }
                        });
                    }
                    // again project
                } else {
                    callbackPrj();
                }
            });
        } else {
            console.log("first time creation");
            // create new project
            Project.update({
                'companyId': dataCompany._id,
                'JC': workCode
            }, {
                $set: {
                    companyId: dataCompany._id,
                    companyname: dataCompany.companyname,
                    projectname: workCode,
                    JC: workCode,
                    tasks: taskArrayNew,
                    active: true,
                    calFlag: false,
                }
            }, {
                upsert: true,
                new: false
            }, function(err, data) {
                if (data && !err)
                    callback(true);
            });
        }
    });
}


/* Old JC calculation*/
function setProjectDefaults(data, workCode, atnDate, callback) {
    // detect and change the project flag
    setProjectFlagIndividual(data.companyId, workCode, function(status, resp) {
        // console.log(status,resp);
        if (status) {
            if (resp.projId) {
                // Pull out JC's worked
                console.log("pull id" + resp.userId);

                Project.update({
                    'companyId': data.companyId,
                    '_id': resp.projId,
                }, {
                    $set: {
                        calFlag: false,
                    },
                    $pull: {
                        users: {
                            '_id': resp.userId,
                            'date': resp.date,
                            'employeeNo': resp.employeeNo,
                            'workCode': workCode,
                            'date': atnDate
                        }
                    }
                }, {
                    upsert: false,
                    new: false
                }, function(err, data) {
                    console.log("pulled ", err, data);
                    if (!err) {
                        // Set attendance
                        Attendance.update({
                            'companyId': data.companyId,
                            '_id': data._id,
                        }, {
                            $set: {
                                'totalValues': [],
                                'allowances': [],
                                'projectFlag': true,
                            }
                        }, function(err, attendanceData) {
                            if (!err) {
                                // calling cron which calculate project
                                cronCtrl.calculateProject(function(resp) {
                                    console.log(resp);
                                    if (resp)
                                        callback(true);
                                });
                            }
                        });
                    }
                });
            } else {
                callback(true);
            }
        }
    });
}


/* Shift allowDelete flag */
function setallowDelete(companyId, shiftId, flag, callback) {
    // console.log("***********************allowDelete flag "+flag);
    // callback(true);
    Shift.update({
        'companyId': companyId,
        '_id': shiftId
    }, {
        $set: {
            allowDelete: flag,
        }
    }, {
        upsert: false,
        new: false,
        multi: false
    }, function(err, data) {
        if (err) {
            console.log('shift flag updated failed' + err);
            callback(false);
        } else {
            // console.log('shift flag updated');
            callback(true);
        }
    });
};

/* Shift allowDelete flag */
function setAdvanceAllowDelete(companyId, shift, cnt, callback) {
    // console.log("************ advance shift flag *********** ");
    // callback(true);
    Attendance.find({
        'companyId': companyId,
        'shift': shift.name,
    }).limit(1).exec(function(err, atData) {
        // console.log("atnNo length"+atData.length);
        if (atData.length > 0) {
            console.log("%d : %s length = %d %s", cnt, shift.name, atData.length, false);
            setallowDelete(companyId, shift._id, false, function(resp) {
                console.log('----------------------------------------------');
                callback(true);
            });
        } else {
            console.log("%d : %s length = %d %s", cnt, shift.name, atData.length, true);
            setallowDelete(companyId, shift._id, true, function(resp) {
                console.log('----------------------------------------------');
                callback(true);
            });
        }
    });
};

/* Shift default time set */
function setShiftDefaults(companyId, shift, cnt, callback) {
    /*
     * if shift need to check in atn
     */
    // Attendance.find({
    //     'companyId': companyId,
    //     'shift': shift.name,
    // }).limit(1).exec(function(err, atData) {
    //     if (atData.length > 0) console.log("%d : %s length = %d false", cnt, shift.name, atData.length);
    //     else
    console.log("%d : %s", cnt, shift.name);
    var myNT = '20:00:00',
        myOT1 = '20:00:00',
        myOT2 = '20:00:00';
    if (shift.ordinarytime)
        myNT = shift.ordinarytime;
    if (shift.overTime1 && getSeconds(shift.overTime1) > 0)
        myOT1 = shift.overTime1;
    if (shift.overTime2 && getSeconds(shift.overTime2) > 0)
        myOT2 = shift.overTime2;
    //update time
    Shift.update({
        'companyId': companyId,
        '_id': shift._id
    }, {
        $set: {
            ordinarytime: myNT,
            overTime1: myOT1,
            overTime2: myOT2,
        }
    }, {
        upsert: false,
        new: false,
        multi: false
    }, function(err, data) {
        if (err) {
            console.log('shift flag updated failed' + err);
            callback(false);
        } else {
            var currentDate = Moment.utc().format('YYYY-MM-DD');
            var previousDate = Moment.utc().subtract('days', 30).format('YYYY-MM-DD');
            // attendance flag change
            Attendance.update({
                'companyId': companyId,
                'date': {
                    $gte: previousDate,
                    $lte: currentDate
                },
                'shift': shift.name,
                'active': true,
                'checkin.checkType': {
                    $exists: true
                },
            }, {
                $set: {
                    readFlag: false,
                }
            }, {
                upsert: false,
                new: false,
                multi: true,
            }, function(err, data) {
                if (err) {
                    console.log("err" + err);
                } else {
                    console.log("atn update");
                    callback(true);
                }
            });
        }
    });
    // });
}

/* Shift update onChange : createEmployee, editEmployee */
function checkShiftAction(shiftData, companyId, callback) {
    console.log("checkShiftAction");
    var shiftsArray = [],
        resCnt = 0;
    async.eachSeries(shiftData, function(daysData, callbackDays) {
        // console.log(daysData);
        resCnt++;
        var b = shiftsArray.map(function(e) {
            return e;
        }).indexOf(daysData.shift);

        if (b == -1)
            shiftsArray.push(daysData.shift);

        if (resCnt == shiftData.length) {
            console.log(shiftsArray);
            Shift.find({
                'companyId': companyId
            }).sort({
                shiftorder: 1
            }).exec(function(err, sData) {
                var shftCnt = 0;
                async.eachSeries(sData, function(dbShift, callbackShift) {
                    var shiftFlag;
                    shftCnt++;
                    var a = shiftsArray.map(function(e) {
                        return e;
                    }).indexOf(dbShift.name);

                    if (a == -1) {
                        if (sData.length === shftCnt) {
                            callback(true);
                        } else {
                            callbackShift();
                        }
                    } else {
                        console.log("... %s shift allowDelete false ...", dbShift.name);
                        if (sData.length === shftCnt) {
                            setallowDelete(companyId, dbShift._id, false, function(cbRes) {
                                if (cbRes)
                                    callback(true);
                            });
                        } else {
                            setallowDelete(companyId, dbShift._id, false, function(cbRes) {
                                if (cbRes)
                                    callbackShift();
                            });
                        }
                    }
                });
            });
        } else callbackDays();
    });
};

/* check for individual or all company */
function checkCompany(companyId, type, callback) {
    console.log(companyId);
    var companySN = [];
    if (companyId) {
        if (companyId !== 'all') {
            if (!companyId.match(/^[0-9a-fA-F]{24}$/))
                callback(false);
            else {
                getCompanyData(companyId, function(comp) {
                    if (!comp) callback(false);
                    else {
                        comp.passcode.forEach(function(sn) {
                            // if(!sn.clockNotctive)
                            companySN.push(sn.no);
                        })
                        if (type === 'track')
                            callback({
                                '_id': companyId
                            });
                        else if (type === 'clockings')
                            callback({
                                '_id': companyId,
                                'sn': companySN
                            });
                    }
                });
            }
        } else
            callback({});
    } else
        callback(false);
}


/* Functions Start */

/* Exports start */
module.exports.addShiftCutoff = addShiftCutoff;
module.exports.addShiftCutoffs = addShiftCutoffs;
module.exports.addShiftCutoffsForEmp = addShiftCutoffsForEmp;
module.exports.getUtcHolidays = getUtcHolidays;
module.exports.saveHolidaysCompany = saveHolidaysCompany;
module.exports.tryToSave = tryToSave;
module.exports.createDays = createDays;
module.exports.getHolidays = getHolidays;
module.exports.calculateExceptionHours = calculateExceptionHours;
module.exports.calculateAtn = calculateAtn;
module.exports.saveHolidays = saveHolidays;
module.exports.getExceptionData = getExceptionData;
module.exports.secToFormatted = secToFormatted;
module.exports.getSeconds = getSeconds;
module.exports.updateRow = updateRow;
module.exports.updateFn = updateFn;
module.exports.getAttendanceData = getAttendanceData;
module.exports.calculateCheckin = calculateCheckin;
module.exports.calculateCheckinIndividual = calculateCheckinIndividual;
module.exports.calculateArea = calculateArea;
module.exports.countWeekdayOccurrencesInMonth = countWeekdayOccurrencesInMonth;
module.exports.weekDayNumber = weekDayNumber;
module.exports.weekDayString = weekDayString;
module.exports.orderByNameAscending = orderByNameAscending;
module.exports.getShiftPatternData = getShiftPatternData;
module.exports.isInArray = isInArray;
module.exports.getShiftData = getShiftData;
module.exports.toSeconds = toSeconds;
module.exports.totalhoursFn = totalhoursFn;
module.exports.totalhours = totalhours;
module.exports.totalhoursForTest = totalhoursForTest;
module.exports.startAndEndOfWeek = startAndEndOfWeek;
module.exports.generate_employeeNo = generate_employeeNo;
module.exports.closest = closest;
module.exports.getMonday = getMonday;
module.exports.changeFormat = changeFormat;
module.exports.shiftHoursForHolidays = shiftHoursForHolidays;
module.exports.shiftHoursForException = shiftHoursForException;
module.exports.getLastDateSession = getLastDateSession;
module.exports.getCodes = getCodes;
module.exports.getCompanyData = getCompanyData;
module.exports.calculateTaskTotal = calculateTaskTotal;
module.exports.calculateTotalWorked = calculateTotalWorked;
module.exports.calculateMeterTotalWorked = calculateMeterTotalWorked;
module.exports.getHourlyWageOfCalculation = getHourlyWageOfCalculation;
module.exports.devideHourIntoNt = devideHourIntoNt;
module.exports.calculateDateWiseData = calculateDateWiseData;
module.exports.getPayperiod = getPayperiod;
module.exports.setDashboardFlag = setDashboardFlag;
module.exports.setDashboardFlagSingle = setDashboardFlagSingle;
module.exports.setMeterDashboardFlag = setMeterDashboardFlag;
module.exports.setMeterDashboardFlagSingle = setMeterDashboardFlagSingle;
module.exports.createDashBoard = createDashBoard;
module.exports.createMeterDashBoard = createMeterDashBoard;
module.exports.createSubDashboard = createSubDashboard;
module.exports.createSubMeterDashboard = createSubMeterDashboard;
module.exports.checkPreviousDashboard = checkPreviousDashboard;
module.exports.currentDateDashboardCalculation = currentDateDashboardCalculation;
module.exports.currentDateSubDashboardCalculation = currentDateSubDashboardCalculation;
module.exports.salesCalculationSub = salesCalculationSub;
module.exports.checkProjectDBTask = checkProjectDBTask;
module.exports.setProjectFlag = setProjectFlag;
module.exports.setProjectFlagIndividual = setProjectFlagIndividual;
module.exports.setallowDelete = setallowDelete;
module.exports.checkShiftAction = checkShiftAction;
module.exports.setAdvanceAllowDelete = setAdvanceAllowDelete;
module.exports.setShiftDefaults = setShiftDefaults;
module.exports.checkCompanyRange = checkCompany;
module.exports.setProjectDefaults = setProjectDefaults;
module.exports.workCodeSetup = workCodeSetup;
module.exports.setActiveEmployee = setActiveEmployee;
// module.exports.updateAllRows = updateAllRows;
// module.exports.checkProjectJC = checkProjectJC;
// Exports End
